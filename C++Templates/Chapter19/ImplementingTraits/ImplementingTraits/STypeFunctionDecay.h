//----------------------------------------------------------------------------------------------------------------------
#pragma once
//----------------------------------------------------------------------------------------------------------------------
#include <cstdlib>
#include "STypeFunctionRemoveConstVolatile.h"
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
// !!!!! TYPE TRAIT odstranuje MODIFIER [const] a MODIFIER [volatile].
template<typename TType>
struct STypeFunctionDecay final : STypeFunctionRemoveConstVolatile<TType>
{
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
// !!!!! TYPE TRAIT konvertuje C-ARRAY s NEZNAMOU DLZKOU na POINTER.
template<typename TType>
struct STypeFunctionDecay<TType[]> final
{
//----------------------------------------------------------------------------------------------------------------------
	public:
		using													Type=TType*;
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
// !!!!! TYPE TRAIT konvertuje C-ARRAY s ZNAMOU DLZKOU na POINTER.
template<typename TType, size_t SIZE>
struct STypeFunctionDecay<TType[SIZE]> final
{
//----------------------------------------------------------------------------------------------------------------------
	public:
		using													Type=TType*;
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
// !!!!! TYPE TRAIT konvertuje FUNCTION na POINTER na FUNCTION.
template<typename TReturn, typename... TArguments>
struct STypeFunctionDecay<TReturn(TArguments...)> final
{
//----------------------------------------------------------------------------------------------------------------------
	public:
		using													Type=TReturn(*)(TArguments...);
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
// !!!!! TYPE TRAIT konvertuje FUNCTION na POINTER na FUNCTION pre FUNCTIONS, ktore pouzivaju ELLIPSIS.
template<typename TReturn, typename... TArguments>
struct STypeFunctionDecay<TReturn(TArguments..., ...)> final
{
//----------------------------------------------------------------------------------------------------------------------
	public:
		using													Type=TReturn(*)(TArguments...,...);
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------