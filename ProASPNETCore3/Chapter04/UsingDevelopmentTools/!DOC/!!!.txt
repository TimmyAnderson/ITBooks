//----------------------------------------------------------------------------------------------------------------------
1. Solution demonstruje pouzitie DEVELOPMENT TOOLS pri praci s ASP.NET CORE PROJECTS.
2. ASP.NET CORE obsahuje COMMAND LINE TOOL [dotnet.exe], ktory umoznuje vytvarat ASP.NET CORE PROJECTS. Pomocou tohto COMMAND je mozne vytvarat aj individualne FILES ci VISUAL STUDIO SOLUTION FILES.
3. ASP.NET CORE PROJECTS sa vytvaraju pomocou COMMAND [dotnet new PROJECT_TYPE PROJECT_OPTIONS], kde VALUE 'PROJECT_TYPE' urcuje typ vytaraneho PROJECT a VALUE 'PROJECT_OPTIONS' obsahuje PROJECT OPTIONS, ktore su zavisle od typu PROJECT. ASP.NET CORE definuje nasledujuce typy PROJECTS.
   A. PROJECT TYPE [web] vytvara ASP.NET CORE PROJECT.
   B. PROJECT TYPE [mvc] vytvara ASP.NET CORE PROJECT pouzivajuci MVC FRAMEWORK.
   C. PROJECT TYPE [webapp] vytvara ASP.NET CORE PROJECT pouzivajuci RAZOR PAGES.
   D. PROJECT TYPE [blazorserver] vytvara ASP.NET CORE PROJECT pouzivajuci BLAZOR SERVER.
   E. PROJECT TYPE [angular] vytvara ASP.NET CORE PROJECT pouzivajuci ANGULAR LIBRARY.
   F. PROJECT TYPE [react] vytvara ASP.NET CORE PROJECT pouzivajuci REACT LIBRARY.
   G. PROJECT TYPE [reactredux] vytvara ASP.NET CORE PROJECT pouzivajuci REACT LIBRARY a REDUX LIBRARY.
4. ASP.NET CORE umoznuje pomocou COMMAND [dotnet new sln OPTIONS] vytvara VISUAL STUDIO SOLUTION.
5. Pomocou COMMAND [dotnet sln SOLUTION_PATH add PROJECT_PATH] je mozne pridat do SOLUTION na PATH 'SOLUTION_PATH' PROJECT na PATH 'PROJECT_PATH'.
6. Pomocou COMMAND [dotnet build] je mozne vykonat BUILD ASP.NET CORE PROJECT. COMMAND MUSI byt spusteny v DIRECTORY, kde sa nachadza PROJECT FILE [.csproj].
!!! 7. Pomocou COMMAND [dotnet run] je mozne spustit ASP.NET CORE PROJECT. COMMAND MUSI byt spusteny v DIRECTORY, kde sa nachadza PROJECT FILE [.csproj]. Tento COMMAND NESPUSTA WEB BROWSER, iba spusti WEB SERVER v ktorom bezi ASP.NET CORE PROJECT.
8. Pomocou COMMAND LINE TOOL [dotnet.exe] je mozne do ASP.NET CORE PROJECTS pridavat SERVER SIDE PACKAGES ako napriklad ENTITY FRAMEWORK. COMMAND LINE TOOL [dotnet.exe] podporuje nasledujuce COMMANDS.
   A. COMMAND [dotnet add package PACKAGE_NAME] pridava do ASP.NET CORE PROJECT SERVER SIDE PACKAGE 'PACKAGE_NAME'.
   B. COMMAND [dotnet remove package PACKAGE_NAME] odstranuje z ASP.NET CORE PROJECT SERVER SIDE PACKAGE 'PACKAGE_NAME'.
   C. COMMAND [dotnet list package] zobrazuje vsetky SERVER SIDE PACKAGES, ktore ASP.NET CORE PROJECT obsahuje.
9. PACKAGES, ktore su pouzite v ASP.NET CORE PROJECT sa ukladaju do PROJECT FILE [.csproj].
10. Mnohe SERVER SIDE PACKAGES obsahuju vlastne COMMAND LINE TOOLS, ktore je mozne osobitne instalovat a odinstalovat. Pomocou COMMAND LINE TOOL [dotnet.exe] je mozne tieto TOOLS instalovat a odinstalovat nasledujucimi COMMANDS.
   A. [dotnet tool install --global TOOL_NAME] nainstaluje TOOL s NAME 'TOOL_NAME'. OPTION '--global', ze TOOL sa nebude instalovat pre dany ASP.NET CORE PROJECT, ale GLOBALNE pre cely pocitac.
   B. [dotnet tool uninstall --global TOOL_NAME] odinstaluje TOOL s NAME 'TOOL_NAME'. OPTION '--global', ze TOOL sa nebude odinstalovat pre dany ASP.NET CORE PROJECT, ale GLOBALNE pre cely pocitac.
11. LIBRARY MANAGER je PACKAGE MANAGER, ktory umoznuje pouzivanie CLIENT LIBRARIES obsahujucich [.JS] FILES, [.CSS] FILES, IMAGES a dalsieho obsahu, ktory sa posiela na CLIENT SIDE (do BROWSERA) v ASP.NET CORE APPLICATIONS. Pre LIBRARY MANAGER platia nasledujuce fakty.
   A. LIBRARY MANAGER je PACKAGE MANAGER, ktory umoznuje pouzivanie CLIENT LIBRARIES obsahujucich [.JS] FILES, [.CSS] FILES, IMAGES a dalsieho obsahu, ktory sa posiela na CLIENT SIDE (do BROWSERA) v ASP.NET CORE APPLICATIONS.
   B. V ASP.NET CORE APPLICATIONS sa pouziva LIBRARY MANAGER [LibMan].
   C. LIBRARY MANAGER [LibMan] je mozne instalovat pomocou COMMAND LINE COMMAND [dotnet tool install --global Microsoft.Web.LibraryManager.Cli].
   D. CLIENT LIBRARIES, ktore VISUAL STUDIO PROJECT obsahuje su ulozene vo FILE [libman.json]. Tento FILE je mozne do PROJECT vykonanim COMMAND [Project->Manage Client-Side Libraries].
   E. VISUAL STUDIO obsahuje aj VISUAL TOOL na jednoduchsiu editaciu FILE [libman.json]. TOOL sa spusta pomocou COMMAND [CONTEXT MENU na PROJECT->Add->Client-Side Library].
   F. Pri editacii FILE [libman.json] VISUAL STUDIO poskytuje INTELLISENSE zobrazujuci nazov PACKAGES.
   !!! G. Po vykonani SAVE FILE [libman.json] VISUAL STUDIO stiahne nove PACKAGES.
   H. Pomocou COMMAND [CONTEXT MENU na [libman.json]->Restore Client-Side Libraries] je mozne vykonat obnovenie CLIENT SIDE LIBRARIES.
   I. Pomocou COMMAND [CONTEXT MENU na [libman.json]->Clean Client-Side Libraries] je mozne vykonat odstranit CLIENT SIDE LIBRARIES.
   J. Pomocou COMMAND [CONTEXT MENU na [libman.json]->Enable Restore Client-Side Libraries on Build] je mozne povolit automaticke obnovenie CLIENT SIDE LIBRARIES pri REBUILD.
!!! 12. LIBMAN ma na COMMAND LINE TOOL, ktory sa instaluje pomocou COMMAND [dotnet tool install --global Microsoft.Web.LibraryManager.Cli]. LIBMAN COMMAND TOOL podporuje nasledujuce COMMANDS.
   A. COMMAND [libman init -p PROVIDER] vytvori FILE [libman.json], ktory bude mat nastaveny PROVIDER na VALUE 'PROVIDER'. Najcastejsie pouzivanym PROVIDER je [cdnjs].
   B. COMMAND [libman install CLIENT_SIDE_LIBRARY -d DIRECTORY] vklada do FILE [libman.json] CLIENT SIDE LIBRARY 'CLIENT_SIDE_LIBRARY'. Tato CLIENT SIDE LIBRARY bude ulozena do DIRECTORY 'DIRECTORY'.
   C. COMMAND [libman uninstall CLIENT_SIDE_LIBRARY] odstranuje z FILE [libman.json] CLIENT SIDE LIBRARY 'CLIENT_SIDE_LIBRARY'.
13. VISUAL STUDIO umoznuje spustat PROJECTS nasledujucimi sposobmi.
   A. Spustenie pomocou [START WITHOUT DEBUGGING] spusta PROJECT BEZ moznosti DEBUGGING, avsak C# CLASSES su COMPILED az pri prvom dotaze na WEB PAGE. Zaroven VISUAL STUDIO je v tomto mode schopne detekovat zmeny C# CODE a vykonat OKAMZITU COMPILATION pri ich zmene. Vdaka tomu je mozne pocas spustenia PROJECT modifikovat obsah C# CODE a po BROWSER REFRESH sa zmeny OKAMZITE PREJAVIA bez NUTNOSTI vykonat RESTART celej APPLICATION.
   B. Spustenie pomocou [START DEBUGGING] spusta PROJECT s moznostou DEBUGGING. Pri tomto spustani je cely PROJECT OKAMZITE COMPILED. To znaci, ze pri meneni obsahu C# CODE je nutne spravit RECOMPILATION a RESTART.
//----------------------------------------------------------------------------------------------------------------------