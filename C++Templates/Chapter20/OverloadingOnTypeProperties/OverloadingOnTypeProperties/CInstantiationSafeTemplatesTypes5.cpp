//----------------------------------------------------------------------------------------------------------------------
#include "CInstantiationSafeTemplatesTypes5.h"
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
CInstantiationSafeTemplatesTypes5::CInstantiationSafeTemplatesTypes5(int Value)
	: MValue(Value)
{
}
//----------------------------------------------------------------------------------------------------------------------
CInstantiationSafeTemplatesTypes5::~CInstantiationSafeTemplatesTypes5(void) noexcept
{
}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
int CInstantiationSafeTemplatesTypes5::GetValue(void) const noexcept
{
	return(MValue);
}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
CInstantiationSafeTemplatesTypesBoolConvertibleImplicit operator<(const CInstantiationSafeTemplatesTypes5& Value1, const CInstantiationSafeTemplatesTypes5& Value2)
{
	if (Value1.GetValue()<Value2.GetValue())
	{
		CInstantiationSafeTemplatesTypesBoolConvertibleImplicit	Value(true);

		return(Value);
	}
	else
	{
		CInstantiationSafeTemplatesTypesBoolConvertibleImplicit	Value(false);

		return(Value);
	}
}
//----------------------------------------------------------------------------------------------------------------------