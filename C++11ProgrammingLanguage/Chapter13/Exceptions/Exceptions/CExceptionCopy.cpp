//-----------------------------------------------------------------------------
#include "CExceptionCopy.h"
//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
using namespace std;
//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
CExceptionCopy::CExceptionCopy(const wstring& Value)
	: MValue(Value)
{
	wcout << L"CONSTRUCTOR [" << __func__ << L"()] CALLED !" << endl;
}
//-----------------------------------------------------------------------------
CExceptionCopy::CExceptionCopy(const CExceptionCopy& Value)
	: MValue(Value.MValue)
{
	wcout << L"!!!!! COPY CONSTRUCTOR [" << __func__ << L"()] CALLED !" << endl;
}
//-----------------------------------------------------------------------------
CExceptionCopy::~CExceptionCopy(void)
{
	wcout << L"DESTRUCTOR [" << __func__ << L"()] CALLED !" << endl;
}
//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
CExceptionCopy& CExceptionCopy::operator=(const CExceptionCopy& Value)
{
	wcout << L"!!!!! COPY OPERATOR= [" << __func__ << L"()] CALLED !" << endl;

	MValue=Value.MValue;

	return(*this);
}
//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
const wstring& CExceptionCopy::GetValue(void) const noexcept
{
	return(MValue);
}
//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
wstring CExceptionCopy::GetTextMessage(void) const noexcept
{
	wstring														Message;

	Message.append(L"EXCEPTION [CExceptionCopy] - VALUE [");
	Message.append(MValue);
	Message.append(L"] !");

	return(Message);
}
//-----------------------------------------------------------------------------