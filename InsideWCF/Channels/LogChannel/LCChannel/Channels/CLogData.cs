using System;
using System.Collections.Generic;
using System.Text;
using System.ServiceModel.Channels;
using Log;
//-------------------------------------------------------------------------------------------------------
namespace LCChannel
{
//-------------------------------------------------------------------------------------------------------
	// Tato datova trieda sluzi na ulozenie Source k logu a referenciu na Log samotny. Zaroven bude reprezentovat property CH, ktora sa da ziskat cez GetProperty<>().
	public class CLogData
	{
//-------------------------------------------------------------------------------------------------------
		// Log.
		private CLog											MLog;
		// Source do logu.
		private string											MSource;
		private bool											MShowMessageContent;
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------
		public CLogData(CLog Log, string Source, bool ShowMessageContent)
		{
			MLog=Log;
			MSource=Source;
			MShowMessageContent=ShowMessageContent;
		}
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------
		public CLog												Log
		{
			get
			{
				return(MLog);
			}
		}
//-------------------------------------------------------------------------------------------------------
		public string											Source
		{
			get
			{
				return(MSource);
			}
		}
//-------------------------------------------------------------------------------------------------------
		public bool												ShowMessageContent
		{
			get
			{
				return(MShowMessageContent);
			}
		}
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------
		public void WriteLogMessage(string MethodName, Message Message)
		{
			if (MShowMessageContent==true)
				MLog.WriteWithSource(MSource,MethodName,string.Format("\n{0}",Message.ToString()));
		}
//-------------------------------------------------------------------------------------------------------
		public void WriteLog(string Message)
		{
			MLog.WriteWithSource(MSource,Message);
		}
//-------------------------------------------------------------------------------------------------------
		public void WriteLog(string Message1, string Message2)
		{
			MLog.WriteWithSource(MSource,Message1,Message2);
		}
//-------------------------------------------------------------------------------------------------------
		public void WriteLogSeparator(int NumberOfSeparators)
		{
			MLog.WriteSeparator(NumberOfSeparators);
		}
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------
		public override string ToString()
		{
			return(string.Format("CLogData - Source: {0}, ShowMessageContent: {1}",MSource,MShowMessageContent));
		}
//-------------------------------------------------------------------------------------------------------
	}
//-------------------------------------------------------------------------------------------------------
}
//-------------------------------------------------------------------------------------------------------