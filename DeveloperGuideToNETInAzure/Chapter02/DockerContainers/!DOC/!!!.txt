//----------------------------------------------------------------------------------------------------------------------
1. Solution demonstruje vytvaranie a pouzitie DOCKER CONTAINERS.
2. CONTAINERS su standardnym sposobom distribucie PROGRAMS, vratane ich CONFIGURATIONS a DEPENDENCIES.
3. CONTAINER PLAFTORM ako je DOCKER umoznuje vytvaranie a nasadzovanie DOCKER CONTAINERS do AZURE.
4. DOCKER sa na WINDOWS instaluje v nasledujucich krokoch.
   A. Pomocou COMMAND [wsl --install] sa nainstaluje WINDOWS SUBSYSTEM FOR LINUX 2, ktory umoznuje nativny beh LINUX BINARY EXECUTABLES nad WINDOWS.
   B. Instalaciu DOCKER je mozne skontrolovat pomocou COMMAND [wsl -l -v].
   C. Nainstaluje sa DOCKER DESKTOP, kde sa zaskrtne pouzitie WINDOWS SUBSYSTEM FOR LINUX 2.
   !!! D. Instalaciu DOCKER je mozne skontrolovat pomocou COMMAND [docker version]. DOCKER DESKTOP vsak MUSI byt SPUSTENY, aby COMMAND prebehol uspesne.
   E. V DOCKER DESKTOP je potrebne skontrolovat ci je nastaveny SETTINGS [Settings->Resources->WSL Integration], kde sa zaskrtne CHECKBOX [Enable Intergation With My Default WSL Distro].
5. DOCKER je implementovany pomocou CLIENT SERVICE ARCHITECTURE, kde CLIENT a SERVICE komunikuju prostrednictvom REST API.
   A. DOCKER DEAMON je DOCKER SERVICE, ktory je zodpovedny za vytvaranie a manazment DOCKER IMAGES a DOCKER CONTAINERS. DOCKER DEAMON prijma COMMANDS z DOCKER CLIENT.
   B. DOCKER CLIENT je CONSOLE PROGRAM, ktory zasiela COMMANDS cez REST API na DOCKER SERVICE.
6. DOCKER rozlisuje nasledujuce pojmy.
   A. DOCKER FILE. DOCKER FILE je TEXT FILE, ktory obsahuje instrukcie potrebne pre vytvorenie DOCKER IMAGE.
   B. DOCKER IMAGE. DOCKER IMAGE je FILE vytvoreny v BUILD PROCESS z DOCKER FILE. DOCKER IMAGE obsahuje vsetky potrebne FILES pre spustenie DOCKER CONTAINER.
   C. DOCKER CONTAINER. DOCKER CONTAINER vytvoreny z DOCKER FILE je beziaca instancia GUEST OPERATING SYSTEMU v ktorej bezi dany PROGRAM.
   D. DOCKER REGISTRY. DOCKER REGISTRY je ulozisko pre DOCKER IMAGES, ktore mozu byt bud PUBLIC, kedy su SHARED, alebo PRIVATE.
7. Pre DOCKER FILES platia nasledujuce fakty.
   A. DOCKER FILE je TEXT FILE, ktory obsahuje instrukcie potrebne pre vytvorenie DOCKER IMAGE.
   B. DOCKER FILE sa pouziva na vytvorenie DOCKER IMAGES.
   C. DOCKER FILE ma DEFAULT NAME [Dockerfile].
   !!!!! D. DOCKER FILES obsahuju <1,N> BUILD STAGES, kde kazdy BUILD STAGE zacina COMMAND [FROM]. COMMAND [FROM] urcuje IMAGE, ktory sa pouzije. Vsetky nasledujuce COMMANDS su vykonane nad danym IMAGE.
   E. DOCKER FILES su spracovavane sekvencne od prveho riadku po posledny.
   F. DOCKER FILES mozu mat COMMENTS, ktore zacinaju CHARACTER [#].
8. Pre DOCKER IMAGES platia nasledujuce fakty.
   A. DOCKER IMAGE je FILE, ktory obsahuje vsetky potrebne FILES pre spustenie DOCKER CONTAINER.
   B. DOCKER IMAGE moze obsahovat casti OPERATING SYSTEMU, FRAMEWORKS a LIBRARIES potrebne pre beh PROGRAMU a samotny PROGRAM aj s prislusnymi CONFIGURATION FILES.
   C. DOCKER IMAGES su pomenovane na zaklade TAGS. DEFAULT NAME je NAME [latest].
   D. DOCKER IMAGES su IMMUTABLE. Po ich vytvoreni ich nie je mozne zmenit.
   E. DOCKER IMAGES su spravidla ukladane do REGISTRIES. Medzi najpouzivanie REGISTRIES patria DOCKER HUB, AZURE CONTAINER REGISTRIES a AWS ELASTIC CONTAINER REGISTRY. DOCKER IMAGES je mozne ulozit aj do PRIVAT REGISTRIES.
   !!! F. FILES v DOCKER IMAGES su STACKABLE. To znamena, ze jednotlive DOCKER IMAGES mozu byt ulozene do STACKS, kde sa pri vytvarani DOCKER CONTAINER postupne aplikuju jednotlive DOCKER IMAGES z daneho STACK.
9. Pre DOCKER CONTAINERS platia nasledujuce fakty.
   A. DOCKER CONTAINER je beziaca instancia GUEST OPERATING SYSTEMU v ktorej bezi dany PROGRAM.
   B. DOCKER CONTAINER je vytvoreny z jedneho ci viacerych DOCKER IMAGES.
   C. DOCKER CONTAINER je izolovany od HOST OPERATING SYSTEM, ako aj dalsich DOCKER CONTAINERS beziacich na tej istej MACHINE.
10. Pre DOCKER REGISTRY platia nasledujuce fakty.
   A. DOCKER REGISTRY je ulozisko DOCKER IMAGES, aby mohli byt distribuovane dalsim USERS.
   B. DOCKER REGISTRY moze byt PUBLIC, kedy DOCKER IMAGES su SHARED, alebo PRIVATE.
   C. Medzi najpouzivanejsie DOCKER REGISTRIES patri DOCKER HUB, AZURE CONTAINER REGISTRIES a GIT HUB CONTAINER REGISTRY.
11. DOCKER CONTAINER sa vytvara a spusta v nasledujucich krokoch.
   A. Vo VISUAL STUDIO sa vytvori PROJECT reprezentujuci PROGRAM, ktory ma byt DEPLOYED v DOCKER. PROGRAM MUSI byt NON-INTERFACTIVE a vystavovat svoje API cez TCP, alebo UDP.
   B. Do VISUAL STUDIO PROJECT sa prida DOCKER FILE, ktory obsahuje instrukcie pre vytvorenie DOCKER IMAGE.
   C. DOCKER IMAGE sa vytvara z DOCKER FILE nasledujucimi sposobmi.
      A. Na LOCAL MACHINE sa z DOCKER vytvori DOCKER IMAGE, ktory je potom ulozeny do DOCKER REGISTRY.
	  B. DOCKER FILE je ulozeny do REMOTE REPOSITORY z ktoreho je pomocou CI/CD SCRIPTS automaticky vygenerovany DOCKER IMAGE, ktory je automaticky ulozeny do DOCKER REGISTRY.
   D. V AZRUE, pomocou WEBHOOKS je mozne automatizovat DEPLOYMENT DOCKER IMAGES z DOCKER REGISTRY ako DOCKER CONTAINERS do niektorej z HOSTING PLATFORMS ako je AZURE APP SERVICE, AZURE KUBERNETS SERVICE, alebo AZURE CONTAINER APPS.
   E. TOOL AZURE MONITOR a TOOL AZURE APPLICATION INSIGHTS umoznuju PERFORMANCE MONITORING, STATE MONITORING a prezeranie LOGS DEPLOYED DOCKER CONTAINERS.
12. Pre ASP.NET CORE PROGRAM je mozne vytvorit DOCKER FILE nasledujucim sposobom.
   A. Do ASP.NET CORE PROGRAM ROOT DIRECTORY sa prida DOCKER FILE. Ten je mozne vygenerovat manualne, alebo pomocou VISUAL STUDIO pomocou COMMAD [Solution Explorer->PROJECT->CONTEXT MENU->Add->Docker Support...].
   B. Odporuca sa pouzit LINUX MACHINE, kedze ta je lepsie prisposobena pre DOCKER a generuje mensie IMAGES.
   !!!!! C. OPTION [Docker Build Context] umoznuje urcit ROOT DIRECTORY pre DOCKER. BY-DEFAULT je nastaveny na SOLUTION co je vhodne, ak PROJECT referuje na ine ASSEMBLIES v ramci toho isteho SOLUTION. OPTION je mozne zmenit na PROJECT.
   !!! D. DOCKER FILE ma NAME [Dockerfile] a je pridany do ASP.NET CORE PROGRAM ROOT DIRECTORY. DEFAULT NAME [Dockerfile] ma vyhodu, ze COMMAND [docker build] ho berie ako DEFAULT FILE NAME a netreba jeho NAME specifikovat.
   E. DOCKER FILE sa upravi podla potrieb daneho ASP.NET CORE PROGRAM.
   !!!!! F. Po pridani DOCKER FILE do PROJECT VISUAL STUDIO automaticky upravi FILE [launchSettings.json] tak, ze don prida CONFIGURATION pre DOCKER. 
13. DOCKER IMAGE pre ASP.NET CORE PROGRAM vytvara v nasledujucich krokoch.
   A. Spusti sa DOCKER DESKTOP.
   B. SOLUTION DIRECTORY sa spusti sa DOCKER BUILD pomocou COMMAND [docker build -t TAG_NAME -f PROJECT_DIRECTORY/Dockerfile .]. PARAMETER [TAG_NAME] je nazov TAGU a PARAMETER [PROJECT_DIRECTORY] je PROJECT DIRECTORY v ktorom sa ASP.NET PROGRAM nachadza.
   C. Po skonceni BUILD PROCESS sa vytvoreny DOCKER IMAGE ulozi v DOCKER DESKTOP.
14. AZURE CLI je COMMAND LINE INTERFACE, ktorym je mozne realizovat COMMANDS nad AZURE. Pre AZURE CLI platia nasledujuce fakty.
   A. AZURE CLI je mozne stiahnut pre WINDOWS, LINUX aj MAC OS.
   B. AZURE CLI odpovede vracia v JSON FORMAT.
15. Pre AZURE SERVICE [RESOURCE GROUPS] platia nasledujuce fakty.
   A. AZURE SERVICE [RESOURCE GROUPS] umoznuje spravu RESOURCE GROUPS.
   A. RESOURCE GROUP je CONTAINER pre ukladanie inych AZURE RESOURCES.
   C. S RESOURCE GROUPS sa pracuje pomocou COMMAND [az group].
16. Pre AZURE SERVICE [CONTAINER REGISTRIES] platia nasledujuce fakty.
   A. SERVICE [CONTAINER REGISTRIES] umoznuje vytvarat CONTAINER REGISTRIES, ktore sluzia na ukladanie DOCKER IMAGES. DOCKER IMAGES.
   B. S CONTAINER REGISTRIES sa pracuje pomocou COMMAND [az acr].
   !!!!! C. Vyzera to, ze SERVICE [CONTAINER REGISTRIES] je PLATENA.
17. WEB PROGRAMS mozu byt v AZURE nasadene v nasledujucich AZURE SERVICES.
   A. AZURE SERVICE [APP SERVICES].
   B. AZURE SERVICE [CONTAINER APPS].
   C. AZURE SERVICE [FUNCTION APPS].
18. Pre AZURE SERVICE [APP SERVICES] platia nasledujuce fakty.
   A. SERVICE [APP SERVICES] umoznuje DEPLOYMENT DOCKER IMAGES pre WEB PROGRAMS.
   B. S APP SERVICES sa pracuje pomocou COMMAND [az appservice].
   !!! C. DEPLOYMENT DOCKER IMAGE vyzaduje vykonanie nasledujucich krokov.
      A. Vytvorenie APP SERVICE PLAN pomocou COMMAND [az appservice].
	  B. Vytvorenie WEB PROGRAM pomocou COMMAND [webapp create].
   D. Pouzitie APP SERVICES vyzaduje vytvorenie AZURE USER. AZURE USER je mozne vytvorit nasledujucimi sposobmi.
      A. Povolit ADMIN USER.
	  B. Vytvorit MANAGER IDENTITY.
!!! 19. Niektore AZURE SERVICES vyzaduju registraciu AZURE RESOURCE PROVIDERS. AZURE RESOURCE PROVIDERS sa registruju pomocou COMMAND [az provider register].
20. AZURE DEVOPS pouziva nasledujuce URL.
   A. Registracia DEVOPS ACCOUNT sa robi na URL [https://dev.azure.com/].
   B. Manazment DEVOPS po vytvoreni ORGANIZATION sa vykonava na URL [https://dev.azure.com/ORGANIZATION_NAME/], kde VALUE [ORGANIZATION_NAME] je nazov vytvorenej ORANIZATION. Prikladom je URL [https://dev.azure.com/timmyanderson1976/].
21. AZURE BUILD PIPELINE sa vytvara v nasledujucich krokoch.
   A. Vytvori sa DEVOPS PROJECT pomocou COMMAND [az devops project create]. Prikladom je COMMAND [az devops project create --name MyDOProject --organization https://dev.azure.com/timmyanderson1976/ --visibility private].
   B. V AZURE DEVOPS PROJECT sa vyberie REPOS a nakopiruje sa GIT URL na REPOSITORY. Prikladom je URL [https://timmyanderson1976@dev.azure.com/timmyanderson1976/MyDevOpsProject/_git/MyDevOpsProject].
   C. Vytvori sa CLONE GIT REPOSITORY na LOCAL MACHINE.
   D. Do GIT REPOSITORY sa prida SOURCE CODE a spravi sa COMMIT a PUSH na REMOTE REPOSITORY.
   !!! E. Do ROOT DIRECTORY v GIT REPOSITORY sa prida FILE [azure-pipelines.yml], ktory obsahuje instrukcie pre BUILD PIPELINE.
   !!!!! F. Alternativne z AZURE REPOS GUI je mozne vygenerovat FILE [azure-pipelines.yml] stlacenim BUTTON [Set up build] a vybratim prislusnej TEMPLATE. Tento COMMAND vytvori v REPOSITORY FILE [azure-pipelines.yml].
   G. Pomocou COMMAND [az pipelines create] sa vytvori AZURE BUILD PIPELINE. Prikladom je COMMAND [az pipelines create --name MyBuild --description "My build." --project MyDevOpsProject --organization https://dev.azure.com/timmyanderson1976/ --repository https://timmyanderson1976@dev.azure.com/timmyanderson1976/MyDevOpsProject/_git/MyDevOpsProject --branch master --yml-path azure-pipelines.yml].
22. MANAGED IDENTITY je USER ACCOUNT v AZURE, ktory moze byt pouziti na AUTHENTICATION pre vykonavanie rozlicnych opracii nad AZURE. MANAGED IDENTITY sa vytvara v nasledujucich krokoch.
   A. MANAGED IDENTITY sa vytvara pomocou COMMAND [az identity create]. Prikladom je COMMAND [az identity create --name MyIdentity --resource-group MyResources].
   B. Pomocou COMMAND [az identity show] sa ziska PRINCIPAL ID danej MANAGED IDENTITY. Prikladom je COMMAND [az identity show --name MyIdentity --resource-group MyResources].
   !!! C. Ziska sa RESOURCE ID, ktoremu je potrebne pridelit ROLE danej MANAGE IDENTITY. Pre CONTAINER REGISTRIES je mozne ziskat RESOURCE ID pomocou COMMAND [az acr show]. Prikladom je COMMAND [az acr show --resource-group MyResources --name containertimmyanderson].
   D. Pomocou COMMAND [az role assignment create] sa prideli danej MANAGED IDENTITY ROLE pre dany RESOURCE. Prikladom je COMMAND [az role assignment create --assignee "6f0c96bc-335f-4cb6-89bb-768fc46f90ff" --scope "/subscriptions/b5f70a84-6ba2-4485-84cd-ac0883d618c5/resourceGroups/MyResources/providers/Microsoft.ContainerRegistry/registries/containertimmyanderson" --role "AcrPull"].
23. MANAGED IDENTITY sa WEB PROGRAM vo APP SERVICES prideluje nasledujucim sposobom.
   A. Zisti sa ID (pozor NIE PRINCIPAL ID) danej MANAGED IDENTITY pomocou COMMAND [az identity show]. Prikladom je COMMAND [az identity show --name MyIdentity --resource-group MyResources].
   B. Pomocou COMMAND [az webapp identity assign] sa priradi MANAGED IDENTITY danemu WEB PROGRAM vo APP SERVICES. Prikladom je COMMAND [az webapp identity assign --resource-group MyResources --name MyWebProgramDevOps --identities "/subscriptions/b5f70a84-6ba2-4485-84cd-ac0883d618c5/resourcegroups/MyResources/providers/Microsoft.ManagedIdentity/userAssignedIdentities/MyIdentity"].
   C. Pomocou COMMAND [az webapp config show] sa zisti WEB PROGRAM ID. Prikladom je COMMAND [az webapp config show --resource-group MyResources --name MyWebProgramDevOps].
   D. Pomocou COMMAND [az resource update] sa povoli pouzitie MANAGED IDENTITY. Prikladom je COMMAND [az resource update --ids "/subscriptions/b5f70a84-6ba2-4485-84cd-ac0883d618c5/resourceGroups/MyResources/providers/Microsoft.Web/sites/MyWebProgramDevOps/config/web" --set properties.acrUseManagedIdentityCreds=True].
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
Ukladanie DOCKER IMAGES do DOCKER HUB CONTAINER REPOSITORY.

1. DOCKER HUB CONTAINER REPOSITORY je na rozdiel od AZURE CONTAINER REPOSITORY FREE.
2. DOCKER HUB CONTAINER REPOSITORY sa vytvara na URL [https://hub.docker.com/].
3. Do DOCKER HUB sa je treba zaregistrovat.
!!! 4. Po registracii je treba spravit REPOSITORY. Odporuca sa pouzit PUBLIC REPOSITORY, kedze to nevyzaduje CREDENTIALS.
!!! 5. Vykona sa BUILD DOCKER IMAGE pre DOCKER HUB. Priklad pouziteho COMMAND [docker build -t timmyanderson/mydockerhubrepository:1.0.0 .].
!!! 6. Vykona sa PUSH DOCKER IMAGE do DOCKER HUB. Priklad pouziteho COMMAND [docker push timmyanderson/mydockerhubrepository:1.0.0].
7. Vytvori sa AZURE APP SERVICE PROGRAM. Priklad pouziteho COMMAND [az webapp create --name MyWebProgramDockerHub --plan MyAppServicePlan --resource-group MyResources --container-image-name docker.io/timmyanderson/mydockerhubrepository:1.0.0].
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
DOCKER FILE COMMANDS.

1. COMMAND [FROM IMAGE_NAME AS STAGE_NAME].
   A. PARAMETER [IMAGE_NAME] identifikuje IMAGE. VALUE moze obsahovat URL na IMAGE v IMAGE REGISTRY, alebo IMAGE NAME nastaveny v niektorom z predoslych BUILD STAGES.
   B. PARAMETER [STAGE_NAME] je nazov STAGE, ktory je mozne pouzit v nasledujucich COMMANDS.
   !!! C. COMMAND inicializuje BUILD STAGE nastavenim IMAGE, ktory sa bude pouzivat pre vykonanie nasledujucich COMMANDS.
2. COMMAND [USER USER_NAME].
   A. PARAMETER [USER_NAME] je nazov USER.
   B. COMMAND nastavuje USER, ktory sa pouzije pre vykonanie nasledujucich COMMANDS.
3. COMMAND [WORKDIR DIRECTORY_NAME].
   A. PARAMETER [DIRECTORY_NAME] je nazov DIRECTORY.
   B. COMMAND nastavuje WORKING DIRECTORY v ramci vytvaraneho DOCKER CONTAINER.
   !!! C. Ak DIRECTORY NEEXISTUJE, ja AUTOMATICKY VYTVORENY.
   D. CURRENT DIRECTORY je analogiou CHANGE DIRECTORY a aplikuje sa dalsie COMMANDS vykonane nad vytvaranym DOCKER CONTAINER.
4. COMMAND [EXPOSE PORT_NUMBER].
   A. PARAMETER [PORT_NUMBER] obsahuje cislo PORT.
   B. COMMAND urcuje PORT, ktory DOCKER IMAGE vystavi pre DOCKER CONTAINER.
   !!!!! C. PORT je vystaveny IBA z DOCKER IMAGE do DOCKER CONTAINER a nie z DOCKER CONTAINER do HOST MACHINE.
   !!!!! D. VISUAL STUDIO pri pridani DOCKER FILE do PROJECT prida do FILE [launchSettings.json] PROFILE pre DOCKER, ktory obsahuje PORTS na ktorych bude PROGRAM v DOCKER vystaveny.
   E. PORT je BY-DEFAULT TCP PORT.
5. COMMAND [ARG VARIABLE_NAME=VALUE].
   A. PARAMETER [VARIABLE_NAME] je VARIABLE NAME, ktorej VALUE sa nastavuje.
   B. PARAMETER [VALUE] je VALUE na ktoru bude nastavena VARIABLE.
   C. COMMAND nastavuje VARIABLE na VALUE, ktora moze byt pouzita v nasledujucich COMMANDS.
6. COMMAND [COPY [SOURCE_1,...,SOURCE_N,DESTINATION]].
   A. PARAMETER [SOURCE_X] obsahuje SOURCE FILE, alebo DIRECTORY, ktory sa ma kopirovat.
   B. PARAMETER [DESTINATION] obsahuje DESTINATION FILE, alebo DIRECTORY vo vytvaranom DOCKER CONTAINER, kde sa ma FILE, alebo DIRECTORY kopirovat.
   !!! C. OPTION [--from=IMAGE_OR_STAGE] umozuje definovat SOURCE IMAGE, alebo SOURCE STAGE z ktorej sa maju FILES a DIRECTORIES kopirovat.
   D. COMMAND kopiruje FILES, alebo DIRECTORY zo SOURCE PATH do DESTINATION PATH vytvaraneho DOCKER CONTAINER.
   !!!!! E. BY-DEFAULT SOURCE PATH odkazuje na LOCAL FILE SYSTEM.
   !!!!! F. Pouzitim OPTION [--from=IMAGE_OR_STAGE] je mozne nastavit, aby sa SOURCE PATH bral z definovaneho IMAGE, alebo definovanej STAGE.
7. COMMAND [RUN [COMMAND_1,...,COMMAND_N]].
   A. PARAMETER [COMMAND_X] obsahuje COMMAND, ktory sa ma pre dany IMAGE vykonat.
   !!! B. COMMAND vykonava specifikovane COMMANDS nad IMAGE, ktory je pre CURRENT STAGE nastaveny. Nasledne vytvori novy LAYER z vysledkov spustenych COMMANDS. LAYER moze byt pouzity v nasledujucich COMMANDS.
8. COMMAND [ENTRYPOINT [EXECUTABLE,,PARAMETER_1...,PARAMETER_N]].
   A. PARAMETER [EXECUTABLE] urcuje COMMAND, ktory sa ma spustit v DOCKER CONTAINER.
   B. PARAMETER [PARAMETER_X] obsahuje PARAMETER definovaneho COMMAND.
   C. COMMAND umoznuje spustit PROGRAM, ktory bude bezat v danom DOCKER CONTAINER.
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
DOCKER COMMANDS.

1. COMMAND [docker build -t TAG_NAME -f PATH_DOCKER_FILE PATH_BUILD_DIRECTORY].
   A. PARAMETER [TAG_NAME] obsahuje TAG NAME identifikujuci DOCKER IMAGE. TAG NAME ma nasledujuci FORMAT.
      A. FORMAT [[HOST[:PORT]/]NAMESPACE/REPOSITORY[:TAG]].
	  B. VALUE [HOST] je nazov HOST NAME DOCKER REGISTRY.
	  C. VALUE [PORT] je nazov PORT DOCKER REGISTRY.
	  D. VALUE [NAMESPACE] je nazov NAMESPACE. Spravidla reprezentuje USER, alebo ORGANIZATION. Ak sa NAMESPACE nezada, pouzije sa DEFAULT VALUE [library].
	  E. VALUE [REPOSITORY] je nazov DOCKER IMAGE.
	  F. VALUE [TAG] je TAG DOCKER IMAGE.
   B. PARAMETER [PATH_DOCKER_FILE] obsahuje PATH k DOCKER FILE.
   C. PARAMETER [PATH_BUILD_DIRECTORY] obsahuje PATH k BUILD DIRECTORY, ktory urcuje pre DOCKER FILE BASE DIRECTORY.
   D. COMMAND vykonava BUILD DOCKER IMAGE z DOCKER FILE.
   !!! E. COMMAND moze byt vykonany IBA, ak je zapnuty DOCKER DESKTOP.
2. COMMAND [docker image list --digests TAG].
   A. OPTIONAL PARAMETER [TAG] umoznuje zobrazit iba IMAGES, ktore maju definovany TAG.
   B. OPTION [--digests] umoznuje zobrazit DIGEST kazdeho DOCKER IMAGE.
   C. COMMAND zobrazuje zoznam vsetkych DOCKER IMAGES.
   D. COMMAND ma ALIAS [docker images].
3. COMMAND [docker image remove IMAGE_ID].
   A. PARAMETER [IMAGE_ID] obsahuje IMAGE IDENTIFIER.
   B. COMMAND odstrani DOCKER IMAGE.
4. COMMAND [docker image pull IMAGE_NAME_OR_DIGEST].
   A. PARAMETER [IMAGE_NAME_OR_DIGEST] obsahuje identifikator IMAGE. Identifikator moze mat nasledujuce formaty.
      A. Identifikator vo formate TAG [NAME:VERSION]. Ak VALUE [VERSION] nie je zadana, ako DEFAULT sa pouziva VALUE [latest].
	  B. Identifikator vo formate DIGEST. Prikladom DIGEST je VALUE [Digest: sha256:2e863c44b718727c860746568e1d54afd13b2fa71b160f5cd9058fc436217b30]. DIGEST identifikator sa pouziva, ak je potrebne stiahnut konkretnu verziu daneho IMAGE.
	  C. Identifikator vo formate URL. Prikladom URL je VALUE [myregistry.local:5000/testing/test-image]. DIGEST identifikator sa pouziva, ak je potrebne stiahnut IMAGE z NON-DEFAULT IMAGE REPOSITORY.
   B. COMMAND stiahne IMAGE z IMAGE REPOSITORY.
   C. Ak je pozadovany IMAGE uz ulozeny v LOCAL STORAGE, tak sa stahuje iba ak existuje novsia verzia DOCKER IMAGE v DOCKER REPOSITORY.
5. COMMAND [docker image tag SOURCE_IMAGE DESTINATION_IMAGE].
   A. PARAMETER [SOURCE_IMAGE] predstavuje nazov SOURCE IMAGE.
   B. PARAMETER [DESTINATION_IMAGE] predstavuje nazov DESTINATION IMAGE.
   C. PARAMETER [SOURCE_IMAGE] a PARAMETER [DESTINATION_IMAGE] maju nasledujuci FORMAT.
      A. FORMAT [[HOST[:PORT]/]NAMESPACE/REPOSITORY[:TAG]].
	  B. VALUE [HOST] je nazov HOST NAME DOCKER REGISTRY.
	  C. VALUE [PORT] je nazov PORT DOCKER REGISTRY.
	  D. VALUE [NAMESPACE] je nazov NAMESPACE. Spravidla reprezentuje USER, alebo ORGANIZATION. Ak sa NAMESPACE nezada, pouzije sa DEFAULT VALUE [library].
	  E. VALUE [REPOSITORY] je nazov DOCKER IMAGE.
	  F. VALUE [TAG] je TAG DOCKER IMAGE.
   D. COMMAND vytvara pre SOURCE IMAGE novy DESTINATION IMAGE s novym TAG.
6. COMMAND [docker container run -d --publish HOST_MACHINE_PORT:DOCKER_CONTAINER_PORT --name CONTAINER_NAME IMAGE_NAME]
   A. PARAMETER [CONTAINER_NAME] obsahuje CONTAINER NAME.
   B. PARAMETER [IMAGE_NAME] obsahuje IMAGE NAME z ktoreho sa ma spustit CONTAINER.
   !!! C. OPTION [--publish HOST_MACHINE_PORT:DOCKER_CONTAINER_PORT] umoznuje MAPPING CONTAINER PORT na HOST MACHINE PORT. OPTION sa moze pouzit aj OPAKOVANE.
      A. PARAMETER [HOST_MACHINE_PORT] obsahuje cislo HOST MACHINE PORT, do ktoreho bude mapovany na DOCKER CONTAINER PORT.
      B. PARAMETER [DOCKER_CONTAINER_PORT] obsahuje cislo DOCKER CONTAINER PORT, ktory mat byt mapovany na HOST MACHINE PORT.
   !!! D. OPTION [--env ENVIRONMENT_VARIABLE_NAME:ENVIRONMENT_VARIABLE_VALUE] umoznuje nastavenie ENVIRONMENT VARIABLE. OPTION sa moze pouzit aj OPAKOVANE.
      A. PARAMETER [ENVIRONMENT_VARIABLE_NAME] obsahuje ENVIRONMENT VARIABLE NAME.
      B. PARAMETER [ENVIRONMENT_VARIABLE_VALUE] obsahuje ENVIRONMENT VARIABLE VALUE.
   !!! E. OPTION [-d] urcuje, ze CONTAINER ma byt spusteny v DETACHED MODE co znamena, ze CONTAINER bude bezat v BACKGROUND. Ak sa OPTION NEPOUZIJE, tak je CONTAINER spusteni na FOREGROUND a zobrazuje hned LOGS.
   F. COMMAND spusta DOCKER CONTAINER z definovaneho DOCKER IMAGE.
   !!! G. COMMAND ziskava IMAGE nasledujucim sposobom.
      A. DOCKER DEAMON sa pokusa najst DOCKER IMAGE najprv v LOCAL STORE. Ak ho najde, tak spusti DOCKER CONTAINER.
	  B. Ak DOCKER IMAGE nebol najdeny v LOCAL STORE, DOCKER DEAMON sa ho pokusi stiahnut z DEFAULT CONTAINER REPOSITORY. Pre DOCKER DESKTOP je DEFAULT CONTAINER REPOSITORY nastaveny na DOCKER HUB. Ak sa DOCKER IMAGE v DEFAULT CONTAINER REPOSITORY, je stiahnuty a nasledne sa pre DOCKER IMAGE spusti DOCKER CONTAINER.
7. COMMAND [docker container list -a].
   A. OPTION [-a] zobrazuje vsetky DOCKER CONTAINERS, vratane tych, ktore nebezia.
   B. COMMAND zobrazuje zoznam DOCKER CONTAINERS.
!!! 8. COMMAND [docker container logs DOCKER_NAME_OR_ID].
   A. PARAMETER [DOCKER_NAME_OR_ID] obsahuje nazov DOCKER CONTAINER, alebo DOCKER CONTAINER ID.
   B. COMMAND zobrazuje LOGS, ktore vygeneroval DOCKER CONTAINER.
!!! 9. COMMAND [docker container remove DOCKER_NAME_OR_ID].
   A. PARAMETER [DOCKER_NAME_OR_ID] obsahuje nazov DOCKER CONTAINER, alebo DOCKER CONTAINER ID.
   B. COMMAND odstranuje DOCKER CONTAINER.
10. COMMAND [docker container port DOCKER_NAME_OR_ID].
   A. PARAMETER [DOCKER_NAME_OR_ID] obsahuje nazov DOCKER CONTAINER, alebo DOCKER CONTAINER ID.
   B. COMMAND zobrazuje mapovanie PORTS pre CONTAINER.
11. COMMAND [docker container port DOCKER_NAME_OR_ID].
   A. PARAMETER [DOCKER_NAME_OR_ID] obsahuje nazov DOCKER CONTAINER, alebo DOCKER CONTAINER ID.
   B. COMMAND zobrazuje mapovanie PORTS pre CONTAINER.
12. COMMAND [docker container start DOCKER_NAME_OR_ID].
   A. PARAMETER [DOCKER_NAME_OR_ID] obsahuje nazov DOCKER CONTAINER, alebo DOCKER CONTAINER ID.
   B. COMMAND spusta CONTAINER.
13. COMMAND [docker container stop DOCKER_NAME_OR_ID].
   A. PARAMETER [DOCKER_NAME_OR_ID] obsahuje nazov DOCKER CONTAINER, alebo DOCKER CONTAINER ID.
   B. COMMAND zastavuje CONTAINER.
14. COMMAND [docker container restart DOCKER_NAME_OR_ID].
   A. PARAMETER [DOCKER_NAME_OR_ID] obsahuje nazov DOCKER CONTAINER, alebo DOCKER CONTAINER ID.
   B. COMMAND vykona restart CONTAINER.
15. COMMAND [docker container stats DOCKER_NAME_OR_ID].
   A. PARAMETER [DOCKER_NAME_OR_ID] obsahuje nazov DOCKER CONTAINER, alebo DOCKER CONTAINER ID.
   B. COMMAND zobrazuje RESOURCE STATISTICS.
16. COMMAND [docker container top DOCKER_NAME_OR_ID].
   A. PARAMETER [DOCKER_NAME_OR_ID] obsahuje nazov DOCKER CONTAINER, alebo DOCKER CONTAINER ID.
   B. COMMAND zobrazuje zoznam PROCESSES, ktore bezia v danom CONTAINER.
17. COMMAND [docker login SERVER_NAME].
   A. PARAMETER [SERVER_NAME] obsahuje nazov DOCKER IMAGE REPOSITORY SERVER pre ktory ma byt vykonany LOGIN.
   B. COMMAND vykonava LOGIN na DOCKER REPOSITORY.
18. COMMAND [docker logout SERVER_NAME].
   A. PARAMETER [SERVER_NAME] obsahuje nazov DOCKER IMAGE REPOSITORY SERVER pre ktory ma byt vykonany LOGOUT.
   B. COMMAND vykonava LOGOUT na DOCKER REPOSITORY.
19. COMMAND [docker push DOCKER_NAME_OR_ID].
   A. PARAMETER [DOCKER_NAME_OR_ID] obsahuje nazov DOCKER CONTAINER, alebo DOCKER CONTAINER ID.
   B. COMMAND vklada IMAGE do CONTAINER REPOSITORY.
20. COMMAND [docker pull DOCKER_NAME_OR_ID].
   A. PARAMETER [DOCKER_NAME_OR_ID] obsahuje nazov DOCKER CONTAINER, alebo DOCKER CONTAINER ID.
   B. COMMAND vybera IMAGE z CONTAINER REPOSITORY.
21. COMMAND [docker version]. COMMAND zobrazuje VERSION DOCKER.
22. COMMAND [docker system info]. COMMAND zobrazuje SYSTEM INFORMATION.
23. COMMAND [docker help]. COMMAND zobrazuje HELP o vsetkych DOCKER COMMANDS.
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
AZURE CLI COMMANDS - vseobecne COMMANDS.

1. AZURE CLI COMMANDS maju nasledujuce GLOBAL PARAMETERS, ktore mozu byt aplikovane na kazdy COMMAND.
   A. PARAMETER [--help] zobrazuje HELP k danemu COMMAND.
   B. PARAMETER [--output OUTPUT_TYPE] umoznuje nastavit typ OUTPUT. VALUE [OUTPUT_TYPE] moze byt nastavena na niektoru z nasledujucich VALUES.
      A. VALUE [json] zobrazuje OUTPUT v JSON FORMAT.
      B. VALUE [table] zobrazuje OUTPUT v TABLE FORMAT.
      C. VALUE [none] nezobrazi ziaden OUTPUT.
   C. PARAMETER [--debug] zobrazi DEBUG LOGS daneho COMMAND.
2. COMMAND [az version]. COMMAND zobrazuje VERSION AZURE CLI.
3. COMMAND [az login]. COMMAND vykonava LOGIN na AZURE.
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
AZURE CLI COMMANDS - RESOURCE GROUP.

1. COMMAND [az group list]. COMMAND vracia zoznam vytvorenych RESOURCE GROUPS.
2. COMMAND [az group create --name RESOURCE_GROUP_NAME --location LOCATION_NAME].
   A. COMMAND vytvara RESOURCE GROUP.
   B. OPTION [--name RESOURCE_GROUP_NAME] vo VALUE [RESOURCE_GROUP_NAME] urcuje RESOURCE GROUP NAME.
   C. OPTION [--name LOCATION_NAME] vo VALUE [LOCATION_NAME] urcuje LOCATION, kde ma byt RESOURCE GROUP vytvoreny. Prikladom moze byt [polandcentral].
3. COMMAND [az group delete --name RESOURCE_GROUP_NAME].
   A. COMMAND odstranuje RESOURCE GROUP.
   B. OPTION [--name RESOURCE_GROUP_NAME] vo VALUE [RESOURCE_GROUP_NAME] urcuje RESOURCE GROUP NAME.
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
AZURE CLI COMMANDS - CONTAINER REGISTRY.

1. COMMAND [az acr list]. COMMAND  vracia zoznam vytvorenych CONTAINER REGISTRIES.
2. COMMAND [az acr create --resource-group RESOURCE_GROUP_NAME --name CONTAINER_REGISTRY_NAME --sku SKU_TYPE].
   A. COMMAND vytvara CONTAINER REGISTRY v RESOURCE GROUP.
   B. OPTION [--resource-group RESOURCE_GROUP_NAME] vo VALUE [RESOURCE_GROUP_NAME] urcuje RESOURCE GROUP NAME.
   !!! C. OPTION [--name CONTAINER_REGISTRY_NAME] vo VALUE [CONTAINER_REGISTRY_NAME] urcuje CONTAINER REGISTRY NAME. CONTAINER REGISTRY NAME MUSI byt GLOBALNE UNIKATNY.
   !!! D. OPTION [--name SKU_TYPE] vo VALUE [SKU_TYPE] urcuje type STOCK KEEPING UNIT. Pre studijne ucely sa odporuca VALUE [Basic].
3. COMMAND [az acr delete --resource-group RESOURCE_GROUP_NAME --name CONTAINER_REGISTRY_NAME].
   A. COMMAND odstranuje CONTAINER REGISTRY z RESOURCE GROUP.
   B. OPTION [--resource-group RESOURCE_GROUP_NAME] vo VALUE [RESOURCE_GROUP_NAME] urcuje RESOURCE GROUP NAME.
   !!! C. OPTION [--name CONTAINER_REGISTRY_NAME] vo VALUE [CONTAINER_REGISTRY_NAME] urcuje CONTAINER REGISTRY NAME.
4. COMMAND [az acr show --resource-group RESOURCE_GROUP_NAME --name CONTAINER_REGISTRY_NAME].
   A. COMMAND zobrazuje informacie o CONTAINER REGISTRY.
   B. OPTION [--resource-group RESOURCE_GROUP_NAME] vo VALUE [RESOURCE_GROUP_NAME] urcuje RESOURCE GROUP NAME.
   C. OPTION [--name CONTAINER_REGISTRY_NAME] vo VALUE [CONTAINER_REGISTRY_NAME] urcuje CONTAINER REGISTRY NAME.
5. COMMAND [az acr login --name CONTAINER_REGISTRY_NAME].
   A. COMMAND nastavi DOCKER DESKTOP LOGIN pre definovany CONTAINER REGISTRY.
   !!!!! B. COMMAND interne pouziva DOCKER DESKTOP, takze DOCKER DESKTOP MUSI byt ZAPNUTY.
   C. OPTION [--name CONTAINER_REGISTRY_NAME] vo VALUE [CONTAINER_REGISTRY_NAME] urcuje CONTAINER REGISTRY NAME.
6. COMMAND [az acr repository list --name CONTAINER_REGISTRY_NAME].
   A. COMMAND vracia zoznam DOCKER IMAGES v CONTAINER REGISTRY.
   B. OPTION [--name CONTAINER_REGISTRY_NAME] vo VALUE [CONTAINER_REGISTRY_NAME] urcuje CONTAINER REGISTRY NAME.
7. COMMAND [az acr update --name CONTAINER_REGISTRY_NAME].
   A. COMMAND vykonava UPDATE PROPERTIES CONTAINER REGISTRY.
   B. OPTION [--name CONTAINER_REGISTRY_NAME] vo VALUE [CONTAINER_REGISTRY_NAME] urcuje CONTAINER REGISTRY NAME.
   C. OPTION [--admin-enabled VALUE] vo VALUE [VALUE] urcuje ci sa ma povolit ADMIN USER pre dany CONTAINER REGISTRY.
8. COMMAND [az acr credential show --name CONTAINER_REGISTRY_NAME].
   A. COMMAND zobrazuje USERNAMES a PASSWORDS asociovane s danym CONTAINER REGISTRY.
   B. OPTION [--name CONTAINER_REGISTRY_NAME] vo VALUE [CONTAINER_REGISTRY_NAME] urcuje CONTAINER REGISTRY NAME.
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
AZURE CLI COMMANDS - AZURE PROVIDER.

1. COMMAND [az provider list]. COMMAND zobrazuje AZURE RESOURCE PROVIDERS.
2. COMMAND [az provider register --namespace NAMESPACE].
   A. COMMAND registruje AZURE RESOURCE PROVIDER.
   B. OPTION [--name NAMESPACE] vo VALUE [NAMESPACE] urcuje NAMESPACE, ktory ma byt zaregistrovany.
3. COMMAND [az provider show --namespace NAMESPACE].
   A. COMMAND zobrazuje stav registracie AZURE RESOURCE PROVIDER.
   B. OPTION [--name NAMESPACE] vo VALUE [NAMESPACE] urcuje NAMESPACE.
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
AZURE CLI COMMANDS - AZURE APP SERVICE.

1. COMMAND [az appservice plan create --name APP_SERVICE_PLANE_NAME --resource-group RESOURCE_GROUP_NAME --location LOCATION_NAME --is-linux --sku SKU].
   A. COMMAND vytvara APP SERVICE RESOURCE PLAN.
   B. OPTION [--name APP_SERVICE_PLANE_NAME] vo VALUE [APP_SERVICE_PLANE_NAME] obsahuje nazov APP SERVICE RESOURCE PLAN.
   C. OPTION [--resource-group RESOURCE_GROUP_NAME] vo VALUE [RESOURCE_GROUP_NAME] urcuje RESOURCE GROUP NAME.
   D. OPTION [--name LOCATION_NAME] vo VALUE [LOCATION_NAME] urcuje LOCATION, kde ma byt RESOURCE GROUP vytvoreny. Prikladom moze byt [centralus].
   !!! E. OPTION [--name SKU_TYPE] vo VALUE [SKU_TYPE] urcuje obsahuje type STOCK KEEPING UNIT. Pre studijne ucely sa odporuca VALUE [FREE].
2. COMMAND [az appservice plan delete --name APP_SERVICE_PLANE_NAME --resource-group RESOURCE_GROUP_NAME].
   A. COMMAND odstranuje APP SERVICE RESOURCE PLAN.
   B. OPTION [--name APP_SERVICE_PLANE_NAME] vo VALUE [APP_SERVICE_PLANE_NAME] obsahuje nazov APP SERVICE RESOURCE PLAN.
   C. OPTION [--resource-group RESOURCE_GROUP_NAME] vo VALUE [RESOURCE_GROUP_NAME] urcuje RESOURCE GROUP NAME.
3. COMMAND [az appservice plan list --resource-group RESOURCE_GROUP_NAME].
   A. COMMAND zobrazuje vsetky APP SERVICE RESOURCE PLANS.
   B. OPTION [--resource-group RESOURCE_GROUP_NAME] vo VALUE [RESOURCE_GROUP_NAME] urcuje RESOURCE GROUP NAME.
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
AZURE CLI COMMANDS - WEB APP.

1. COMMAND [az webapp create --name WEB_PROGRAM_NAME --plan APP_SERVICE_PLANE_NAME --resource-group RESOURCE_GROUP_NAME --container-registry-user USER_NAME --container-registry-password PASSWORD --container-image-name DOCKER_IMAGE_NAME].
   A. COMMAND vytvara APP SERVICE WEB PROGRAM, ktory po uspesnom vytvoreni aj spusti.
   B. OPTION [--name WEB_PROGRAM_NAME] vo VALUE [WEB_PROGRAM_NAME] obsahuje nazov WEB PROGRAM.
   C. OPTION [--plan APP_SERVICE_PLANE_NAME] vo VALUE [APP_SERVICE_PLANE_NAME] obsahuje nazov APP SERVICE RESOURCE PLAN.
   D. OPTION [--resource-group RESOURCE_GROUP_NAME] vo VALUE [RESOURCE_GROUP_NAME] urcuje RESOURCE GROUP NAME.
   E. OPTION [--container-registry-user USER_NAME] vo VALUE [USER_NAME] urcuje USER NAME CONTAINER REGISTRY.
   F. OPTION [--container-registry-password PASSWORD] vo VALUE [PASSWORD] urcuje PASSWORD CONTAINER REGISTRY.
   !!! G. OPTION [--container-image-name DOCKER_IMAGE_NAME] vo VALUE [DOCKER_IMAGE_NAME] urcuje DOCKER IMAGE NAME.
2. COMMAND [az webapp delete --name WEB_PROGRAM_NAME --resource-group RESOURCE_GROUP_NAME --keep-empty-plan].
   A. COMMAND odstranuje APP SERVICE WEB PROGRAM, ktory predtym ukonci.
   B. OPTION [--name WEB_PROGRAM_NAME] vo VALUE [WEB_PROGRAM_NAME] obsahuje nazov WEB PROGRAM.
   C. OPTION [--resource-group RESOURCE_GROUP_NAME] vo VALUE [RESOURCE_GROUP_NAME] urcuje RESOURCE GROUP NAME.
   D. OPTION [--keep-empty-plan] urcuje, aby sa neodstranoval prazdny APP SERVICE RESOURCE PLAN.
3. COMMAND [az webapp list --resource-group RESOURCE_GROUP_NAME].
   A. COMMAND zobrazuje zoznam odstranuje APP SERVICE WEB PROGRAMS.
   B. OPTION [--resource-group RESOURCE_GROUP_NAME] vo VALUE [RESOURCE_GROUP_NAME] urcuje RESOURCE GROUP NAME.
4. COMMAND [az webapp start --name WEB_PROGRAM_NAME --resource-group RESOURCE_GROUP_NAME].
   A. COMMAND spusta APP SERVICE WEB PROGRAM.
   B. OPTION [--name WEB_PROGRAM_NAME] vo VALUE [WEB_PROGRAM_NAME] obsahuje nazov WEB PROGRAM.
   C. OPTION [--resource-group RESOURCE_GROUP_NAME] vo VALUE [RESOURCE_GROUP_NAME] urcuje RESOURCE GROUP NAME.
5. COMMAND [az webapp stop --name WEB_PROGRAM_NAME --resource-group RESOURCE_GROUP_NAME].
   A. COMMAND zastavuje APP SERVICE WEB PROGRAM.
   B. OPTION [--name WEB_PROGRAM_NAME] vo VALUE [WEB_PROGRAM_NAME] obsahuje nazov WEB PROGRAM.
   C. OPTION [--resource-group RESOURCE_GROUP_NAME] vo VALUE [RESOURCE_GROUP_NAME] urcuje RESOURCE GROUP NAME.
6. COMMAND [az webapp config show --resource-group RESOURCE_GROUP_NAME --name WEB_PROGRAM_NAME].
   A. COMMAND zobrazuje nastavenia APP SERVICE WEB PROGRAM.
   B. OPTION [--resource-group RESOURCE_GROUP_NAME] vo VALUE [RESOURCE_GROUP_NAME] urcuje RESOURCE GROUP NAME.
   C. OPTION [--name WEB_PROGRAM_NAME] vo VALUE [WEB_PROGRAM_NAME] obsahuje nazov WEB PROGRAM.
7. COMMAND [az webapp identity assign --resource-group RESOURCE_GROUP_NAME --name WEB_PROGRAM_NAME --identities IDENTITY_ID].
   A. COMMAND priradzuje IDENTITY pre APP SERVICE WEB PROGRAM.
   B. OPTION [--resource-group RESOURCE_GROUP_NAME] vo VALUE [RESOURCE_GROUP_NAME] urcuje RESOURCE GROUP NAME.
   C. OPTION [--name WEB_PROGRAM_NAME] vo VALUE [WEB_PROGRAM_NAME] obsahuje nazov WEB PROGRAM.
   !!! D. OPTION [--identities IDENTITY_ID] vo VALUE [IDENTITY_ID] obsahuje IDENTITY ID. IDENTITY ID je ROZNA VALUE od IDENTITY PRINCIPAL ID.
8. COMMAND [az webapp identity remove --resource-group RESOURCE_GROUP_NAME --name WEB_PROGRAM_NAME --identities IDENTITY_ID].
   A. COMMAND odobera IDENTITY pre APP SERVICE WEB PROGRAM.
   B. OPTION [--resource-group RESOURCE_GROUP_NAME] vo VALUE [RESOURCE_GROUP_NAME] urcuje RESOURCE GROUP NAME.
   C. OPTION [--name WEB_PROGRAM_NAME] vo VALUE [WEB_PROGRAM_NAME] obsahuje nazov WEB PROGRAM.
   !!! D. OPTION [--identities IDENTITY_ID] vo VALUE [IDENTITY_ID] obsahuje IDENTITY ID. IDENTITY ID je ROZNA VALUE od IDENTITY PRINCIPAL ID.
9. COMMAND [az webapp identity show --resource-group RESOURCE_GROUP_NAME --name WEB_PROGRAM_NAME].
   A. COMMAND zobrazuje IDENTITY pridelenu APP SERVICE WEB PROGRAM.
   B. OPTION [--resource-group RESOURCE_GROUP_NAME] vo VALUE [RESOURCE_GROUP_NAME] urcuje RESOURCE GROUP NAME.
   C. OPTION [--name WEB_PROGRAM_NAME] vo VALUE [WEB_PROGRAM_NAME] obsahuje nazov WEB PROGRAM.
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
AZURE CLI COMMANDS - DEVOPS.

1. COMMAND [az devops project list --organization ORGANIZATION_URL].
   A. COMMAND vracia DEVOPS PROJECTS.
   B. OPTION [--organization ORGANIZATION_URL] vo VALUE [ORGANIZATION_URL] obsahuje URL DEVOPS ORGANIZATION. Prikladom je VALUE [https://dev.azure.com/timmyanderson1976/].
2. COMMAND [az devops project create --name PROJECT_NAME --organization ORGANIZATION_URL --visibility VISIBILITY].
   A. COMMAND vytvara DEVOPS PROJECT.
   B. OPTION [--name PROJECT_NAME] vo VALUE [PROJECT_NAME] obsahuje nazov DEVOPS PROJECT.
   C. OPTION [--organization ORGANIZATION_URL] vo VALUE [ORGANIZATION_URL] obsahuje URL DEVOPS ORGANIZATION. Prikladom je VALUE [https://dev.azure.com/timmyanderson1976/].
   D. OPTION [--visibility VISIBILITY] vo VALUE [VISIBILITY] obsahuje VISIBILIY DEVOPS PROJECT. Moze obsahovat VALUE [public] a VALUE [private].
3. COMMAND [az devops project delete --id PROJECT_ID --organization ORGANIZATION_URL].
   A. COMMAND odstranuje DEVOPS PROJECT.
   B. OPTION [--id PROJECT_ID] vo VALUE [PROJECT_ID] obsahuje DEVOPS PROJECT ID.
   C. OPTION [--organization ORGANIZATION_URL] vo VALUE [ORGANIZATION_URL] obsahuje URL DEVOPS ORGANIZATION.
4. COMMAND [az devops project show --project PROJECT_NAME --organization ORGANIZATION_URL].
   A. COMMAND zobrazuje detaily DEVOPS PROJECT.
   B. OPTION [--project PROJECT_NAME] vo VALUE [PROJECT_NAME] obsahuje nazov DEVOPS PROJECT.
   C. OPTION [--organization ORGANIZATION_URL] vo VALUE [ORGANIZATION_URL] obsahuje URL DEVOPS ORGANIZATION.
5. COMMAND [az devops service-endpoint list --project PROJECT_NAME --organization ORGANIZATION_URL].
   A. COMMAND zobrazuje zoznam vsetkych SERVICE ENDPOINTS (CONNECTIONS) pre dany PROJECT.
   B. OPTION [--project PROJECT_NAME] vo VALUE [PROJECT_NAME] obsahuje nazov DEVOPS PROJECT.
   C. OPTION [--organization ORGANIZATION_URL] vo VALUE [ORGANIZATION_URL] obsahuje URL DEVOPS ORGANIZATION.
6. COMMAND [az devops service-endpoint create --project PROJECT_NAME --organization ORGANIZATION_URL --service-endpoint-configuration CONFIGURATION_FILE_PATH].
   A. COMMAND vytvara novu SERVICE ENDPOINT (CONNECTION) pre dany PROJECT.
   B. OPTION [--project PROJECT_NAME] vo VALUE [PROJECT_NAME] obsahuje nazov DEVOPS PROJECT.
   C. OPTION [--organization ORGANIZATION_URL] vo VALUE [ORGANIZATION_URL] obsahuje URL DEVOPS ORGANIZATION.
   !!! C. OPTION [--service-endpoint-configuration CONFIGURATION_FILE_PATH] vo VALUE [CONFIGURATION_FILE_PATH] obsahuje PATH na CONFIGURATION FILE, ktory obsahuje konfiguraciu SERVICE ENDPOINT.
7. COMMAND [az devops service-endpoint delete --id ENDPOINT_ID --project PROJECT_NAME --organization ORGANIZATION_URL].
   A. COMMAND odstranuje existujucu SERVICE ENDPOINT (CONNECTION) pre dany PROJECT.
   B. OPTION [--id ENDPOINT_ID] vo VALUE [ENDPOINT_ID] obsahuje SERVICE ENDPOINT ID.
   C. OPTION [--project PROJECT_NAME] vo VALUE [PROJECT_NAME] obsahuje nazov DEVOPS PROJECT.
   D. OPTION [--organization ORGANIZATION_URL] vo VALUE [ORGANIZATION_URL] obsahuje URL DEVOPS ORGANIZATION.
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
AZURE CLI COMMANDS - PIPELINES.

1. COMMAND [az pipelines list --project PROJECT_NAME --organization ORGANIZATION_URL].
   A. COMMAND zobrazuje zoznam vsetkych PIPELINES.
   B. OPTION [--project PROJECT_NAME] vo VALUE [PROJECT_NAME] obsahuje nazov DEVOPS PROJECT.
   C. OPTION [--organization ORGANIZATION_URL] vo VALUE [ORGANIZATION_URL] obsahuje URL DEVOPS ORGANIZATION.
2. COMMAND [az pipelines create --name BUILD_NAME --description BUILD_DESCRIPTION --project PROJECT_NAME --organization ORGANIZATION_URL --repository REPOSITORY_URL --branch BRANCH_NAME --yml-path AZURE_YML_PATH].
   A. COMMAND vytvara PIPELINE.
   !!!!! B. V GIT REPOSITORY sa uz MUSI nachadzat FILE [.yml] s instrukciami pre BUILD PIPELINE.
   C. OPTION [--name BUILD_NAME] vo VALUE [BUILD_NAME] obsahuje BUILD NAME.
   D. OPTION [--name BUILD_DESCRIPTION] vo VALUE [BUILD_DESCRIPTION] obsahuje BUILD DESCRIPTION.
   E. OPTION [--project PROJECT_NAME] vo VALUE [PROJECT_NAME] obsahuje nazov DEVOPS PROJECT.
   F. OPTION [--organization ORGANIZATION_URL] vo VALUE [ORGANIZATION_URL] obsahuje URL DEVOPS ORGANIZATION.
   G. OPTION [--repository REPOSITORY_URL] vo VALUE [REPOSITORY_URL] obsahuje REPOSITORY URL z ktoreho sa ma vytvarat PIPELINE.
   H. OPTION [--branch BRANCH_NAME] vo VALUE [BRANCH_NAME] obsahuje BRANCH NAME z ktorej sa ma vytvarat PIPELINE.
   !!! I. OPTION [--yml-path AZURE_YML_PATH] vo VALUE [AZURE_YML_PATH] obsahuje PATH na FILE [.yml], ktory obsahuje instrukcie pre PIPELINE.
3. COMMAND [az pipelines delete --id PIPELINE_ID --project PROJECT_NAME --organization ORGANIZATION_URL].
   A. COMMAND vymaze PIPELINE.
   B. OPTION [--id PIPELINE_ID] vo VALUE [PIPELINE_ID] obsahuje PIPELINE ID.
   C. OPTION [--project PROJECT_NAME] vo VALUE [PROJECT_NAME] obsahuje nazov DEVOPS PROJECT.
   D. OPTION [--organization ORGANIZATION_URL] vo VALUE [ORGANIZATION_URL] obsahuje URL DEVOPS ORGANIZATION.
4. COMMAND [az pipelines variable list --pipeline-id PIPELINE_ID --project PROJECT_NAME --organization ORGANIZATION_URL].
   A. COMMAND zobrazuje vsetky VARIABLES pre danu PIPELINE.
   B. OPTION [--id PIPELINE_ID] vo VALUE [PIPELINE_ID] obsahuje PIPELINE ID.
   C. OPTION [--project PROJECT_NAME] vo VALUE [PROJECT_NAME] obsahuje nazov DEVOPS PROJECT.
   D. OPTION [--organization ORGANIZATION_URL] vo VALUE [ORGANIZATION_URL] obsahuje URL DEVOPS ORGANIZATION.
5. COMMAND [az pipelines variable create --name VARIABLE_NAME --pipeline-id PIPELINE_ID --project PROJECT_NAME --organization ORGANIZATION_URL --secret SECRET_VALUE --value VARIABLE_VALUE].
   A. COMMAND vytvara novu VARIABLE pre danu PIPELINE.
   B. OPTION [--name VARIABLE_NAME] vo VALUE [VARIABLE_NAME] obsahuje VARIABLE NAME.
   C. OPTION [--id PIPELINE_ID] vo VALUE [PIPELINE_ID] obsahuje PIPELINE ID.
   D. OPTION [--project PROJECT_NAME] vo VALUE [PROJECT_NAME] obsahuje nazov DEVOPS PROJECT.
   E. OPTION [--organization ORGANIZATION_URL] vo VALUE [ORGANIZATION_URL] obsahuje URL DEVOPS ORGANIZATION.
   F. OPTION [--secret SECRET_VALUE] vo VALUE [SECRET_VALUE] urcuje ci VALUE ma byt ENCRYPTED.
   G. OPTION [--name VARIABLE_VALUE] vo VALUE [VARIABLE_VALUE] obsahuje VARIABLE VALUE.
6. COMMAND [az pipelines variable delete --name VARIABLE_NAME --pipeline-id PIPELINE_ID --project PROJECT_NAME --organization ORGANIZATION_URL].
   A. COMMAND odstranuje existujucu VARIABLE pre danu PIPELINE.
   B. OPTION [--name VARIABLE_NAME] vo VALUE [VARIABLE_NAME] obsahuje VARIABLE NAME.
   C. OPTION [--id PIPELINE_ID] vo VALUE [PIPELINE_ID] obsahuje PIPELINE ID.
   D. OPTION [--project PROJECT_NAME] vo VALUE [PROJECT_NAME] obsahuje nazov DEVOPS PROJECT.
   E. OPTION [--organization ORGANIZATION_URL] vo VALUE [ORGANIZATION_URL] obsahuje URL DEVOPS ORGANIZATION.
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
AZURE CLI COMMANDS - IDENTITY.

1. COMMAND [az identity create --name IDENTITY_NAME --resource-group RESOURCE_GROUP_NAME].
   A. COMMAND vytvori MANAGED IDENTITY.
   B. OPTION [--name IDENTITY_NAME] vo VALUE [IDENTITY_NAME] obsahuje IDENTITY NAME.
   C. OPTION [--resource-group RESOURCE_GROUP_NAME] vo VALUE [RESOURCE_GROUP_NAME] urcuje RESOURCE GROUP NAME.
2. COMMAND [az identity delete --name IDENTITY_NAME --resource-group RESOURCE_GROUP_NAME].
   A. COMMAND vymaze MANAGED IDENTITY.
   B. OPTION [--name IDENTITY_NAME] vo VALUE [IDENTITY_NAME] obsahuje IDENTITY NAME.
   C. OPTION [--resource-group RESOURCE_GROUP_NAME] vo VALUE [RESOURCE_GROUP_NAME] urcuje RESOURCE GROUP NAME.
3. COMMAND [az identity list --resource-group RESOURCE_GROUP_NAME].
   A. COMMAND zobrazuje vsetky MANAGED IDENTITIES.
   B. OPTION [--resource-group RESOURCE_GROUP_NAME] vo VALUE [RESOURCE_GROUP_NAME] urcuje RESOURCE GROUP NAME.
4. COMMAND [az identity show --name IDENTITY_NAME --resource-group RESOURCE_GROUP_NAME].
   A. COMMAND zobrazuje informacie o IDENTITY.
   B. OPTION [--name IDENTITY_NAME] vo VALUE [IDENTITY_NAME] obsahuje IDENTITY NAME.
   C. OPTION [--resource-group RESOURCE_GROUP_NAME] vo VALUE [RESOURCE_GROUP_NAME] urcuje RESOURCE GROUP NAME.
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
AZURE CLI COMMANDS - ROLES.

1. COMMAND [az role assignment create --assignee ASSIGNEE_ID --scope SCOPE --role ROLE].
   A. COMMAND prideluje USER, GROUP, alebo SERVICE PRINCIPAL pre dany RESOURCE danu ROLE.
   B. OPTION [--assignee ASSIGNEE_ID] vo VALUE [ASSIGNEE_ID] obsahuje identifikator USER, GROUP, alebo SERVICE PRINCIPAL.
   C. OPTION [--scope SCOPE] vo VALUE [SCOPE] obsahuje identifikator RESOURCE, ktoremu bude ROLE pridelena.
   D. OPTION [--role ROLE] vo VALUE [ROLE] obsahuje identifikator ROLE.
2. COMMAND [az role assignment delete --assignee ASSIGNEE_ID --scope SCOPE --role ROLE].
   A. COMMAND odobera USER, GROUP, alebo SERVICE PRINCIPAL pre dany RESOURCE danu ROLE.
   B. OPTION [--assignee ASSIGNEE_ID] vo VALUE [ASSIGNEE_ID] obsahuje identifikator USER, GROUP, alebo SERVICE PRINCIPAL.
   C. OPTION [--scope SCOPE] vo VALUE [SCOPE] obsahuje identifikator RESOURCE, ktoremu bude ROLE odobrana.
   D. OPTION [--role ROLE] vo VALUE [ROLE] obsahuje identifikator ROLE.
3. COMMAND [az role assignment list --all].
   A. COMMAND zobrazuje pre vsetkych USERS, GROUPS, alebo SERVICE PRINCIPALS a RESOURCES pridelene ROLES.
   B. OPTION [--all] znamena, ze sa maju zobrazit pridelenia ROLES vsetkych USERS, GROUPS, alebo SERVICE PRINCIPALS pre vsetky RESOURCES.
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
AZURE CLI COMMANDS - RESOURCE.

1. COMMAND [az resource list --resource-group RESOURCE_GROUP_NAME].
   A. COMMAND zobrazuje vsetky RESOURCES.
   B. OPTION [--resource-group RESOURCE_GROUP_NAME] vo VALUE [RESOURCE_GROUP_NAME] urcuje RESOURCE GROUP NAME.
2. COMMAND [az resource update --ids RESOURCE_ID --set PROPERTY_NAME=PROPERTY_VALUE].
   A. COMMAND zobrazuje vsetky RESOURCES.
   B. OPTION [--ids RESOURCE_ID] vo VALUE [RESOURCE_ID] obsahuje RESOURCE ID.
   C. OPTION [--set PROPERTY_NAME=PROPERTY_VALUE] vo VALUE [PROPERTY_NAME] obsahuje PROPERTY NAME a vo VALUE [PROPERTY_VALUE] PROPERTY VALUE, ktora sa ma nastavit.
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
AZURE CLI COMMANDS - REPOS.

1. COMMAND [az repos list --project PROJECT_NAME --organization ORGANIZATION_URL].
   A. COMMAND zobrazuje zoznam vsetkych REPOSITORIES.
   B. OPTION [--project PROJECT_NAME] vo VALUE [PROJECT_NAME] obsahuje nazov DEVOPS PROJECT.
   C. OPTION [--organization ORGANIZATION_URL] vo VALUE [ORGANIZATION_URL] obsahuje URL DEVOPS ORGANIZATION.
2. COMMAND [az repos create --name REPOSITORY_NAME --project PROJECT_NAME --organization ORGANIZATION_URL].
   A. COMMAND vytvara novy REPOSITORY.
   B. OPTION [--name REPOSITORY_NAME] vo VALUE [REPOSITORY_NAME] obsahuje nazov REPOSITORY.
   C. OPTION [--project PROJECT_NAME] vo VALUE [PROJECT_NAME] obsahuje nazov DEVOPS PROJECT.
   D. OPTION [--organization ORGANIZATION_URL] vo VALUE [ORGANIZATION_URL] obsahuje URL DEVOPS ORGANIZATION.
3. COMMAND [az repos delete --id REPOSITORY_ID --project PROJECT_NAME --organization ORGANIZATION_URL].
   A. COMMAND odstranuje existujuci REPOSITORY.
   B. OPTION [--id REPOSITORY_ID] vo VALUE [REPOSITORY_ID] obsahuje REPOSITORY ID.
   C. OPTION [--project PROJECT_NAME] vo VALUE [PROJECT_NAME] obsahuje nazov DEVOPS PROJECT.
   D. OPTION [--organization ORGANIZATION_URL] vo VALUE [ORGANIZATION_URL] obsahuje URL DEVOPS ORGANIZATION.
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
AZURE CLI COMMANDS - ACCOUNT.

1. COMMAND [az account subscription list]. COMMAND zobrazuje zoznam vsetkych SUBSCRIPTIONS.
2. COMMAND [az account subscription show --id SUBSCRIPTION_ID].
   A. COMMAND zobrazuje detailne informacie o danej SUBSCRIPTION.
   B. OPTION [--id SUBSCRIPTION_ID] vo VALUE [SUBSCRIPTION_ID] obsahuje SUBSCRIPTION ID.
3. COMMAND [az account tenant list]. COMMAND zobrazuje zoznam vsetkych TENANTS.
//----------------------------------------------------------------------------------------------------------------------