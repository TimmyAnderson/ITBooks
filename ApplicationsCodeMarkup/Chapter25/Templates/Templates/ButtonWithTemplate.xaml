<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        x:Class="Templates.ButtonWithTemplate">
    <Button HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="48" Padding="20">

        Button with Custom Template

        <Button.Template>
            <ControlTemplate>
                <!-- !!! Kedze ContentProperty u ControlTemplate (trieda FrameworkTemplate) je VisualTree, tak vytvorenim CHILD ELEMENT je HODNOTOU VisalTree. -->
                <Border Name="MBorder" BorderThickness="3" BorderBrush="Red" Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}">
                    <!-- !!! Pomocou TemplateBinding sa mozem v TEMPLATE odkazovat na PROPERTIES definovane na UROVNI ELEMENTU, ktory danu TEMPLATE POUZIVA. -->
                    <TextBlock Name="MTxtblk" FontStyle="Italic" Text="{TemplateBinding ContentControl.Content}" Margin="{TemplateBinding Control.Padding}" />
                </Border>

                <ControlTemplate.Triggers>
                    <!-- Triggers umoznuju definovat DYNAMICKE CHOVANIE TEMPLATE. -->
                    <Trigger Property="UIElement.IsMouseOver" Value="True">
                        <Setter TargetName="MBorder" Property="Border.CornerRadius" Value="24" />
                        <Setter TargetName="MTxtblk" Property="TextBlock.FontWeight" Value="Bold" />
                    </Trigger>

                    <Trigger Property="Button.IsPressed" Value="True">
                        <Setter TargetName="MBorder" Property="Border.Background" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </Button.Template>
    </Button>
</Window>