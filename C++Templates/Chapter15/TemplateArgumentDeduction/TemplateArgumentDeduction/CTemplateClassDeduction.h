//----------------------------------------------------------------------------------------------------------------------
#pragma once
//----------------------------------------------------------------------------------------------------------------------
template<typename TType>
class CTemplateClassDeduction
{
//----------------------------------------------------------------------------------------------------------------------
	private:
		TType													MField;

	public:
		const TType& GetField(void) const noexcept;

	public:
		CTemplateClassDeduction(const TType& Field);
		virtual ~CTemplateClassDeduction(void) noexcept;
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<typename TType>
CTemplateClassDeduction<TType>::CTemplateClassDeduction(const TType& Field)
	: MField(Field)
{
}
//----------------------------------------------------------------------------------------------------------------------
template<typename TType>
CTemplateClassDeduction<TType>::~CTemplateClassDeduction(void) noexcept
{
}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<typename TType>
const TType& CTemplateClassDeduction<TType>::GetField(void) const noexcept
{
	return(MField);
}
//----------------------------------------------------------------------------------------------------------------------