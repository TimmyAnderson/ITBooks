//-------------------------------------------------------------------------------------------------------
1. Solution demonstruje AUTHORIZATION vo WCF.
2. Autorizaciu je mozne robit bud deklarativne, alebo manualne.
3. Deklarativne sa urcuje definovanim atributu [PrincipalPermission] na metodu service, kde definuje rolu, ktora moze pristupovat k daje metode. Ak chcem viac roly potom mozem pridat viac atributov, pricom pristup bude umozneny hocktorej role z deklarovanych. V mene role je treba definovan pri Windows autnetifikacii aj meno domeny.
4. Manualna autrizacia sa robi zistenim ci prihlaseny user je v danej role. To sa da urobit ziskanim IPrincipal objektu z Thread.CurrentPrincipal a volanim jeho metody IsInRole().
5. Autorizaciu je potrebne vyziadat na host objekte nastavenim ServiceHost.Authorization.PrincipalPermissionMode, ktora moze nadobudat nasledujuce hodnoty.
   A. None - ziadna AUTHORIZACIA.
   B. UseWindowsGroups - overenie TOKENS sa urobi voci WINDOWS GROUPS.
   C. UseAspNetRoles - overenie TOKENS sa urobi ASP.NET mechanizmus overovania ROLES ulozenych v SQL SERVER.
   D. Custom - umoznuje implementaciu CUSTOM AUTHORZATION.
!!! 6. Ak zlyha DEKLARATIVNA autorizacia metody tak proxy ZIJE DALEJ a nedostane sa do Faulted state.
!!! 7. NEVYHODA MANUALNEJ autorizacie je, ze ak neoverim uzivatela musim hodit exception a TATO EXCEPTION MUSI BYT SUCASTOU Fault contract.
!!! 8. Autorizacia podla mena MI NEFUNGUJE. Nechce sa mi s tym babrat, ze preco aj tak sa to nebude pouzivat.
//-------------------------------------------------------------------------------------------------------