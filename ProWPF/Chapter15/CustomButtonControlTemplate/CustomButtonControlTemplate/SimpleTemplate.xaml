<Window x:Class="CustomButtonControlTemplate.SimpleTemplate"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    Title="CustomButtonControlTemplate" Height="300" Width="300">
  <Window.Resources>
    <!-- Nastavim TargetType cim urcim, ze sa CT aplikuje na Buttons. -->
    <ControlTemplate x:Key="MButtonTemplate" TargetType="{x:Type Button}">
      <!-- Border VLASTNE PREDSTAVUJE SAMOTNE TELO Buttonu - okrem textu. -->
      <Border Name="MBorder" BorderBrush="Orange" BorderThickness="3" CornerRadius="2" Background="Red" TextBlock.Foreground="White">
        <!-- Grid sa pouzije nato, aby sa Rectangle a ContentPresenter ulozili jeden na druhom. -->
        <Grid>
          <!-- Skryty Rectangle, ktory sa vykresli IBA KED ZISKA BUTTON FOCUS. -->
          <Rectangle Name="FocusCue" Visibility="Hidden" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2" SnapsToDevicePixels="True"/>
          <!-- Nato aby mohol mat Button Content musim pouzit ContentPresenter. -->
          <!-- Kedze Padding musim implementovat rucne (u standardnych Button to robi prace CT) pouzijem jednoduchu fintu, ked odsadim (property Margin) ContentPresenter od Border hodnotou Padding a TYM ZISKAM FUNKCIONALITU Padding. -->
          <ContentPresenter RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"/>
        </Grid>
      </Border>
      <ControlTemplate.Triggers>
        <Trigger Property="IsMouseOver" Value="True">
          <!-- Pouzijem ako TargetName MBorder pre pracu s Border. -->
          <Setter TargetName="MBorder" Property="Background" Value="DarkRed"/>
        </Trigger>
        <Trigger Property="IsPressed" Value="True">
          <Setter TargetName="MBorder" Property="Background" Value="IndianRed"/>
          <Setter TargetName="MBorder" Property="BorderBrush" Value="DarkKhaki"/>
        </Trigger>
        <!-- Trigger na Focus. Zviditelni skryty Rectangle. -->
        <Trigger Property="IsKeyboardFocused" Value="True">
          <Setter TargetName="FocusCue" Property="Visibility" Value="Visible"/>
        </Trigger>
        <!-- Trigger na Enabled musi byt posledny, aby prebil funkcionality ostatnych Triggers. -->
        <Trigger Property="IsEnabled" Value="False">
          <Setter TargetName="MBorder" Property="TextBlock.Foreground" Value="Gray"/>
          <Setter TargetName="MBorder" Property="Background" Value="MistyRose"/>
        </Trigger>        
      </ControlTemplate.Triggers>      
    </ControlTemplate>
  </Window.Resources>
  <StackPanel>
    <Button Name="MButton1" Margin="10" Padding="5" Template="{StaticResource MButtonTemplate}" Click="OnClicked" Content="A Simple Button with a Custom Template"/>
    <Button Name="MButton2" Margin="10" Padding="5" Template="{StaticResource MButtonTemplate}" Click="OnClicked" Content="Another Button with a Custom Template"/>
    <Button Name="MButton3" Margin="10" Padding="5" Template="{StaticResource MButtonTemplate}" Click="OnClicked" Content="A Third Button"/>
    <Button Name="MButton4" Margin="10" Padding="5" Template="{StaticResource MButtonTemplate}" IsEnabled="False" Click="OnClicked" Content="A Disabled Button"/>
  </StackPanel>
</Window>