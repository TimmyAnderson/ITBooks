//----------------------------------------------------------------------------------------------------------------------
#pragma once
//----------------------------------------------------------------------------------------------------------------------
#include <stdio.h>
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<size_t ID>
class CCopyCounter
{
//----------------------------------------------------------------------------------------------------------------------
	private:
		inline static size_t									MCopies=0;

	public:
		static size_t GetCopies(void) noexcept;

	public:
		CCopyCounter(void);
		virtual ~CCopyCounter(void) noexcept;
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<size_t ID>
CCopyCounter<ID>::CCopyCounter(void)
{
	++MCopies;
}
//----------------------------------------------------------------------------------------------------------------------
template<size_t ID>
CCopyCounter<ID>::~CCopyCounter(void) noexcept
{
}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<size_t ID>
size_t CCopyCounter<ID>::GetCopies(void) noexcept
{
	return(MCopies);
}
//----------------------------------------------------------------------------------------------------------------------