//-------------------------------------------------------------------------------------------------------
1. Solution demonstruje DEDICNOST SERVICE CONTRACTS.
2. Pri dedeni SERVICE CONTRACTS musim si vytvorit rovnaku dedicsku hierachiu interfaces (SERVICE CONTRACTS) aka je na serveri.
3. Pre kazdy SERVICE CONTRACT imlementovat vlastne PROXY pricom tieto dve PROXIES nie su navzajom dedene.
!!! 4. Proxy pre PARENT SERVICE CONTRACT musi ClientBase<> musi mat ako paramter DERIVED rozhranie.
!!! 5. Proxy pre DERIVED SERVICE CONTRACT musi dedit z PROXY pre parent SERVICE CONTRACT.
6. Auto generovane proxy zakryje dedicsku hierachiu, takze sa service tvari akoby mal iba jeden endpoint, ktory implementuje obe rozhrania.
7. To, ze hierarchia je dedicska je ulozene v parametroch Action a ReplyAction atribute OperationContract auto generovane proxy triedy.
8. Auto generovane PROXY na ktore su aplikovane atributy je mozne vyhodit. Informaciu v nich mozem pouzit pri rucnom vytvarani proxy ak pristupujem k SERVICE, kde nepznam presnu deicsku hierarchu. V tychto atributoch ju najdem.
9. Musim si vytvorit rovnaku dedicsku hierachiu interfaces (contracts) aka je na serveri.
10. Pre kazdy contract imlementovat vlastne proxy pricom tieto dve proxy nie su navzajom dedene.
11. Technika ma par nevyhod, hlavne nutnost implementovat metody parent rozhrania v oboch proxy.
12. Ak ked v sktucnosoti server vystavuje iba 1 contract, kedze je to zdedena rozhranie mozem k nemu pristupovat cez 2 endpoint, kde kazdy ma ine rozhranie.
13. Ak vytvorim 2 instanci proxy tak sa na servri vytvoria 2 instancie objektu. Mam teda 2 separatne instancie na servri.
//-------------------------------------------------------------------------------------------------------