//----------------------------------------------------------------------------------------------------------------------
DOCKER FILE COMMANDS.

1. COMMAND [FROM IMAGE_NAME AS STAGE_NAME].
   A. PARAMETER [IMAGE_NAME] identifikuje IMAGE. VALUE moze obsahovat URL na IMAGE v IMAGE REGISTRY, alebo IMAGE NAME nastaveny v niektorom z predoslych BUILD STAGES.
   B. PARAMETER [STAGE_NAME] je nazov STAGE, ktory je mozne pouzit v nasledujucich COMMANDS.
   !!! C. COMMAND inicializuje BUILD STAGE nastavenim IMAGE, ktory sa bude pouzivat pre vykonanie nasledujucich COMMANDS.
2. COMMAND [USER USER_NAME].
   A. PARAMETER [USER_NAME] je nazov USER.
   B. COMMAND nastavuje USER, ktory sa pouzije pre vykonanie nasledujucich COMMANDS.
3. COMMAND [WORKDIR DIRECTORY_NAME].
   A. PARAMETER [DIRECTORY_NAME] je nazov DIRECTORY.
   B. COMMAND nastavuje WORKING DIRECTORY v ramci vytvaraneho DOCKER CONTAINER.
   !!! C. Ak DIRECTORY NEEXISTUJE, ja AUTOMATICKY VYTVORENY.
   D. CURRENT DIRECTORY je analogiou CHANGE DIRECTORY a aplikuje sa dalsie COMMANDS vykonane nad vytvaranym DOCKER CONTAINER.
4. COMMAND [EXPOSE PORT_NUMBER].
   A. PARAMETER [PORT_NUMBER] obsahuje cislo PORT.
   B. COMMAND urcuje PORT, ktory DOCKER IMAGE vystavi pre DOCKER CONTAINER.
   !!!!! C. PORT je vystaveny IBA z DOCKER IMAGE do DOCKER CONTAINER a nie z DOCKER CONTAINER do HOST MACHINE.
   !!!!! D. VISUAL STUDIO pri pridani DOCKER FILE do PROJECT prida do FILE [launchSettings.json] PROFILE pre DOCKER, ktory obsahuje PORTS na ktorych bude PROGRAM v DOCKER vystaveny.
   E. PORT je BY-DEFAULT TCP PORT.
5. COMMAND [ARG VARIABLE_NAME=VALUE].
   A. PARAMETER [VARIABLE_NAME] je VARIABLE NAME, ktorej VALUE sa nastavuje.
   B. PARAMETER [VALUE] je VALUE na ktoru bude nastavena VARIABLE.
   C. COMMAND nastavuje VARIABLE na VALUE, ktora moze byt pouzita v nasledujucich COMMANDS.
6. COMMAND [COPY [SOURCE_1,...,SOURCE_N,DESTINATION]].
   A. PARAMETER [SOURCE_X] obsahuje SOURCE FILE, alebo DIRECTORY, ktory sa ma kopirovat.
   B. PARAMETER [DESTINATION] obsahuje DESTINATION FILE, alebo DIRECTORY vo vytvaranom DOCKER CONTAINER, kde sa ma FILE, alebo DIRECTORY kopirovat.
   !!! C. OPTION [--from=IMAGE_OR_STAGE] umozuje definovat SOURCE IMAGE, alebo SOURCE STAGE z ktorej sa maju FILES a DIRECTORIES kopirovat.
   D. COMMAND kopiruje FILES, alebo DIRECTORY zo SOURCE PATH do DESTINATION PATH vytvaraneho DOCKER CONTAINER.
   !!!!! E. BY-DEFAULT SOURCE PATH odkazuje na LOCAL FILE SYSTEM.
   !!!!! F. Pouzitim OPTION [--from=IMAGE_OR_STAGE] je mozne nastavit, aby sa SOURCE PATH bral z definovaneho IMAGE, alebo definovanej STAGE.
7. COMMAND [RUN [COMMAND_1,...,COMMAND_N]].
   A. PARAMETER [COMMAND_X] obsahuje COMMAND, ktory sa ma pre dany IMAGE vykonat.
   !!! B. COMMAND vykonava specifikovane COMMANDS nad IMAGE, ktory je pre CURRENT STAGE nastaveny. Nasledne vytvori novy LAYER z vysledkov spustenych COMMANDS. LAYER moze byt pouzity v nasledujucich COMMANDS.
8. COMMAND [ENTRYPOINT [EXECUTABLE,,PARAMETER_1...,PARAMETER_N]].
   A. PARAMETER [EXECUTABLE] urcuje COMMAND, ktory sa ma spustit v DOCKER CONTAINER.
   B. PARAMETER [PARAMETER_X] obsahuje PARAMETER definovaneho COMMAND.
   C. COMMAND umoznuje spustit PROGRAM, ktory bude bezat v danom DOCKER CONTAINER.
//----------------------------------------------------------------------------------------------------------------------