//-------------------------------------------------------------------------------------------------------
1. Solution popisuje funkcionalitu IL ASSEMBLER a IL DISASSEMBLER.
2. PROGRAM IL ASSEMBLER [ILASM.EXE] vykonava KOMPILACIU MSIL CODE (.IL FILES) do MODULES, alebo ASSEMBLIES. PROGRAM [ILASM.EXE] teda reprezentuje MSIL COMPILER.
3. PROGRAM IL DISASSEMBLER [ILDASM.EXE] vykonava DISASSEMBLING MODULES a ASSEMBLIES. DISASSEMBLING pozostava z konverzie daneho MODULE, alebo ASSEMBLY do MSIL INSTRUCTIONS.
!!!!! 4. IL ASSEMBLER dokaze vytvarat aj MODULES. MODULES sa vytvaraju tak, ze sa nastavi OPTION [/DLL] a OPTION [/OUTPUT=XXX.NETMODULE], kde 'XXX' je meno MODULE FILE. FILE .IL zaroven NESMIE obsahovat KEYWORD [.assembly], inak by COMPILER vytvoril ASSEMBLY a NIE MODULE.
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------
COMAND LINE PARAMETERS pre IL ASSEMBLER.

1. PROGRAM IL ASSEMBLER [ILASM.EXE] ma nasledujuci COMMAND LINE [ILASM.EXE INPUT_FILE_1 ... INPUT_FILE_N OPTIONS], kde 'INPUT_FILE_1 ... INPUT_FILE_N' su mena .IL FILES a 'OPTIONS' je zoznam OPTIONS.
2. OPTION [/NOLOGO] zabrani zobrazeniu LOGO a CPOYRIGHT INFORMATION.
3. OPTION [/QUIET] zabrani zobrazeniu informacii o priebehu COMPILATION.
4. OPTION [/NOAUTOINHERIT] potlaci DEFAULT CLASS INHERITANCE (INHERITANCE z Object, ValueType ci Enum).
5. OPTION [/DLL] vykona COMPILATION do DLL PE FILE.
6. OPTION [/EXE] vykona COMPILATION do EXE PE FILE.
7. OPTION [/APPCONTAINER] vykona COMPILATION do APPCONTAINER EXE, alebo DLL PE FILE.
8. OPTION [/ARM] vykona COMPILATION do PE FILE pre ARM PLATFORM.
9. OPTION [/PDB] vytvori .PDB FILE, avsak bez zapnutia DEBUG INFO TRACKING.
10. OPTION [/DEBUG] vypne JIT OPTIMALIZATIONS a z .PDB FILE pouzije SEQUENCE POINTS.
11. OPTION [/DEBUG=IMPL] vypne JIT OPTIMALIZATIONS a vytvori .PDB FILE. Pouzije IMPLICIT SEQUENCE POINTS.
12. OPTION [/DEBUG=OPT] zapne JIT OPTIMALIZATIONS a vytvori .PDB FILE. Pouzije IMPLICIT SEQUENCE POINTS.
13. OPTION [/OPTIMALIZE] vykona OPTIMALIZATION LONG INSTRUCTIONS na SHORT INSTRUCTIONS ak je to mozne.
14. OPTION [/FOLD] vykona zlucenie METHODS, ktore maju IDENTICKY CODE.
15. OPTION [/CLOCK] zobrazi COMPILATION TIMES.
16. OPTION [/RESOURCE=RESOURCE_FILE.RES] vykona LINKING UNMANAGED RESOURCE FILE 'RESOURCE_FILE.RES'.
17. OPTION [/OUTPUT=FILENAME.EXT] nastavuje FILENAME s EXTENSION (.EXE,.DLL) do ktoreho sa vysledny PE FILE zapise.
18. OPTION [/KEY=KEYFILE] vykona COMPILATION, ktora vygeneruje OUTPUT FILE podpisany STRONG NAME. FILE 'KEYFILE' musi obsahovat PRIVATE KEY.
19. OPTION [/KEY=@KEYSOURCE] vykona COMPILATION, ktora vygeneruje OUTPUT FILE podpisany STRONG NAME. Hodnota 'KEYSOURCE' musi obsahovat nazov SECURE STORE v ktorom je ulozeny PRIVATE KEY.
20. OPTION [/INCLUDE=PATH] definuje PATH v ktorej sa budu hladat FILES uvedene v #include DIRECTIVES SOURCE CODES.
21. OPTION [/SUBSYSTEM=VALUE] urcuje typ generovaneho PE FILE. Hodnota 2 znamena GUI APPLICATION. Hodnota 3 znamena CONSOLE APPLICATION.
22. OPTION [/SSVER=MAJOR_VERSION.MINOR_VERSION] urcuje hodnotu SUBSYSTEM VERSION NUMBER v NT OPTIONAL HEADER.
23. OPTION [/FLAGS=VALUE] urcuje FLAGS CLR HEADER v ktorych su ulozene informacie ci generovany FILE je PURE IL CODE, MIXED IL CODE, alebo ci FILE je SIGNED.
24. OPTION [/ALIGNMENT=VALUE] urcuje hodnotu FileAlignment v NT OPTIONAL HEADER.
25. OPTION [/BASE=VALUE] urcuje hodnotu ImageBase v NT OPTIONAL HEADER.
26. OPTION [/STACK=VALUE] urcuje hodnotu SizeOfStackReserve v NT OPTIONAL HEADER.
27. OPTION [/MDV=VERSION_STRING] nastavuje verziu CLR METADATA v generovanom PE FILE.
28. OPTION [/MSV=MAJOR_VERSION.MINOR_VERSION] nastavuje verziu CLR STREAM v generovanom PE FILE.
29. OPTION [/PE64] generovany 64 BIT PE FILE bude vo verzii PE32+.
30. OPTION [/HIGHENTROPYVA] nastavi PE32+ FILE s HIGH ENTROPY VIRTUAL ADDRESS.
31. OPTION [/ITANIUM] generovany 64 BIT PE FILE bude vo verzii PE32+ pre PLATFORM ITANIUM.
32. OPTION [/X64] generovany 64 BIT PE FILE bude vo verzii PE32+ pre PLATFORM X64.
33. OPTION [/NOCORSTUB] zabrani generovaniu CORExeMain() STUB METHOD.
34. OPTION [/STRIPRELOC] indikuje, ze BASE ADDRESS REALOCATION nie je potrebna.
35. OPTION [/ENC=SOURCE_FILE] vytvori EDIT AND CONTINUE DELATAS zo definovaneho SOURCE FILE.
36. OPTION [/32BITPREFFERED] vytvori 32 BIT PREFFERED PE32 FILE.
//-------------------------------------------------------------------------------------------------------
COMAND LINE PARAMETERS pre IL DISASSEMBLER.

1. PROGRAM IL DISASSEMBLER [ILDASM.EXE] ma nasledujuci COMMAND LINE [ILDASM.EXE INPUT_FILE OPTIONS], kde 'INPUT_FILE' je meno MODULE/ASSEMBLY FILE a 'OPTIONS' je zoznam OPTIONS.
2. Ak sa [ILDASM.EXE] spusti BEZ COMMAND LINES, spusti sa ako GUI APPLICATION.
3. OPTION [/OUT=FILENAME] vypise vystup [ILDASM.EXE] do FILENAME 'FILENAME'.
4. OPTION [/TEXT] vypise vystup [ILDASM.EXE] na CONSOLE.
5. OPTION [/HTML] vypise vystup [ILDASM.EXE] do FILENAME 'FILENAME' urcenom OPTION [/OUT=FILENAME] vo formate HTML.
6. OPTION [/RTF] vypise vystup [ILDASM.EXE] do FILENAME 'FILENAME' urcenom OPTION [/OUT=FILENAME] vo formate RTF.
7. OPTION [/BYTES] vypise vo vystupe MSIL INSTRUCTIONS ako COMMENTS v BYTE FORMAT.
8. OPTION [/RAWEH] vypise vo vystupe EXCEPTION HANDLING CLAUSES v RAW FORMAT.
9. OPTION [/TOKENS] vypise vo vystupe METADATA TOKENS CLASSES a MEMBERS ako COMMENTS.
10. OPTION [/SOURCE] vypise vo vystupe SOURCE CODE LINES ako COMMENTS. V CURRENT DIRECTORY MUSI byt .PDB FILE.
11. OPTION [/LINENUM] vypise vo vystupe REFERENCES na SOURCE CODE LINES ako COMMENTS. V CURRENT DIRECTORY MUSI byt .PDB FILE.
12. OPTION [/VISIBILITY=XXX] vypise vo vystupe iba obsah tych ITEMS, ktore urci hodnota 'XXX'.
13. OPTION [/PUBONLY] vypise vo vystupe iba obsah PUBLIC ITEMS.
14. OPTION [/QUOTELLNAMES] vypise vo vystupe vsetky NAMES v UVODZOVKACH.
15. OPTION [/NOCA] zabrani vypisu CUSTOM ATTRIBUTES.
16. OPTION [/CAVERBAL] vypise CUSTOM ATTRIBUTES BLOBS vo VERBAL FORM.
17. OPTION [/NOBAR] zabrani zobrazeniu POPUP WINDOWS, ktore zobrazuje priebeh DISASSEMBLING.
18. OPTION [/UTF8] ak je OUTPUT do CONSOLE, tak ho zobrazi vo formate UTF8.
19. OPTION [/UNICODE] ak je OUTPUT do CONSOLE, tak ho zobrazi vo formate UNICODE.
20. OPTION [/NOIL] potlaci zobrazenie MSIL CODE.
21. OPTION [/FORWARD] pouzite FORWARD CLASS DECLARATION.
22. OPTION [/TYPELIST] zobrazi zoznam vsetkych TYPES.
23. OPTION [/PROJECT] zobrazi .NET PROJECTIONS, ak vstupom je .WINMD FILE.
24. OPTION [/ITEM=CLASS::METHOD(SIGNATURE)] zobrazi MSIL INSTRUCTIONS iba pre METHOD 'METHOD' so SIGNATURE 'SIGNATURE' v CLASS 'CLASS'.
25. OPTION [/STATS] zobrazi STATISTICS daneho MODULE/ASSEMBLY.
26. OPTION [/CLASSLIST] zobrazi zoznam vsetkych CLASSES v danom MODULE/ASSEMBLY.
27. OPTION [/ALL] kombinuje OPTIONS [/HEADER],[/BYTES],[/STATS],[/CLASSLIST] a [/TOKENS].
28. OPTION [/METADATA=SPECIFIER] zobrazi METADATA definovane v 'SPECIFIER'.
29. OPTION [/OBJECTFILE=OBJECT_FILE_NAME] zobrazi METADATA pre FILE 'OBJECT_FILE_NAME'. OPTION je validny iba pre 'LIB' FILES.
//-------------------------------------------------------------------------------------------------------