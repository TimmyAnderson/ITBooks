@page

@model ApplyingCoreIdentity.Pages.PerformLoginModel

@{
}

<!DOCTYPE html>
<html>
<head>
	<meta name="viewport" content="width=device-width" />
	<link rel="stylesheet" href="~/StaticFiles/Styles/Styles.css" />
	<link rel="stylesheet" href="~/StaticFiles/ClientLibraries/Bootstrap/css/bootstrap.css" />
	<!-- !!!!! BOOTSTRAP sa MUSI nachadzat PRED 'Errors.css', inak sa CSS CLASS 'Errors.css' NEAPLIKUJE. -->
	<link rel="stylesheet" href="~/StaticFiles/Styles/Errors.css" />
	<title>Login</title>
</head>
<body>
	<div class="OUTER_BOX">
		<h1>LOGIN</h1>

		<form method="post" asp-page="PerformLogin">
			<div class="INNER_BOX" asp-validation-summary="All"></div>

			<div class="form-group">
				<!-- !!!!! RETURN URL sa ulozi do HIDDEN INPUT ELEMENT. -->
				<input type="hidden" name="Login.ReturnURL" value="@Model.Login.ReturnURL" />

				<label asp-for="Login.UserName">User name:</label>

				@if (ViewContext.ModelState!=null && ViewContext.ModelState.GetFieldValidationState("Login.UserName")==ModelValidationState.Invalid)
				{
					<div class="ERROR_BOX">
						<span asp-validation-for="Login.UserName"></span>
					</div>
				}

				<input class="form-control" asp-for="Login.UserName" />
			</div>

			<div class="form-group">
				<label asp-for="Login.Password">Password:</label>

				@if (ViewContext.ModelState!=null && ViewContext.ModelState.GetFieldValidationState("Login.Password")==ModelValidationState.Invalid)
				{
					<div class="ERROR_BOX">
						<span asp-validation-for="Login.Password"></span>
					</div>
				}

				<input class="form-control" asp-for="Login.Password" value="" />
			</div>

			<div class="form-group">
				<button type="submit" class="btn btn-sm btn-primary">Login</button>
			</div>
		</form>
	</div>
</body>
</html>