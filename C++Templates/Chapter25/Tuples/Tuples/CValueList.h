//----------------------------------------------------------------------------------------------------------------------
#pragma once
//----------------------------------------------------------------------------------------------------------------------
#include "CCompileTimeValue.h"
#include "CTupleTypeListInterface.h"
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
// !!!!! DEFINITION VALUE LIST.
template<typename TType, TType... VALUES>
struct CValueList
{
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
// !!!!! IMPLEMENTACIE VALUE LIST OPERATIONS, ktore boli definovane povodne pre TYPE LIST.
// !!!!! Kedze OPERATIONS pre TYPE LIST su definovane ako TEMPLATE CLASSES, pre VALUE LIST staci definovat ich TEMPLATE CLASS SPECIALIZATIONS, aby tieto OPERATIONS boli implementovane aj pre VALUE LISTS.
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<typename TType, TType... VALUES>
struct CTupleTypeListIsEmpty<CValueList<TType,VALUES...>>
{
//----------------------------------------------------------------------------------------------------------------------
	public:
		static constexpr bool									VALUE=(sizeof...(VALUES)==0);
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<typename TType, TType Head, TType... Tail>
struct CTupleTypeListFrontType<CValueList<TType,Head,Tail...>>
{
//----------------------------------------------------------------------------------------------------------------------
	public:
		using													TYPE=CCompileTimeValue<TType,Head>;

	public:
		static constexpr TType									VALUE=Head;
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<typename TType, TType... VALUES, TType New>
struct CTupleTypeListPushFrontType<CValueList<TType,VALUES...>,CCompileTimeValue<TType,New>>
{
//----------------------------------------------------------------------------------------------------------------------
	public:
		using													TYPE=CValueList<TType,New,VALUES...>;
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<typename TType, TType... VALUES, TType New>
struct CTupleTypeListPushBackType<CValueList<TType,VALUES...>,CCompileTimeValue<TType,New>>
{
//----------------------------------------------------------------------------------------------------------------------
	public:
		using													TYPE=CValueList<TType,VALUES...,New>;
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<typename TType, TType Head, TType... Tail>
struct CTupleTypeListPopFrontType<CValueList<TType,Head,Tail...>>
{
//----------------------------------------------------------------------------------------------------------------------
	public:
		using													TYPE=CValueList<TType,Tail...>;
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------