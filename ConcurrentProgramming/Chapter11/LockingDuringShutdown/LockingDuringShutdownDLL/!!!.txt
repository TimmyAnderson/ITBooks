//------------------------------------------------------------------------------
1. Program demonstruje spravanie sa LOCKS pocas PROCESS SHUTDOWN.
!!! 2. PROCESS SHUTDOWN je spusteny pri volani ExitProcess(). Po zavolani tejto funkcie sa vykonava nasledujuca cinnost.
   A. Vsetky threads okrem toho, ktory zavolal ExitProcess() TERMINUJE.
   B. Thread, ktory zavolal ExitProcess() potom pokracuje vo vykonavani. AK VSAK CHCE ZISKAT LOCK tak chovanie ZAVISI OD TYPU LOCK a TYPU OS.
3. Chovanie sa LOCK pri PROCESS SHUTDOWN je nasledovne.
   A. V XP su CRITICAL SECTIONS pocas PROCESS SHUTDOWN IGNOROVANE a tym padom je dochadza k NARUSENIU KRITICKEJ SEKCIE.
   B. Vo Viste pri PRVOM POKUSE o ZISKANIE LOCK dojde k PROCESS TERMINATE.
   C. Vo Viste pri pokuse o ZISKANIE LOCK dojde k HANG celeho procesu.
!!! 4. V pripade MANAGED CODE CLR pri SHUTDOWN (volani Environment.Exit()) je dana moznost threadom skoncit. AK VSAK NIEKTORY THREAD chce LOCK, tak dojde k DEADLOCK. Toto je riesene tak, ze CLR zavedie WATCH, ktory monitoruje ci SHUTDOWN PROCESS netrva dlhsie ako 2 sekundy. Ak ano, tak je ostatna CLR cast SHUTDOWN PRESKOCENA a proces je ukonceny.
//------------------------------------------------------------------------------