//-------------------------------------------------------------------------------------------------------
1. Solution demonstruje pouzitie CONSTANTS a FIELDS.
2. CONSTANT je specialny type FIELD pre ktory platia nasledujuce zasady.
   A. CONSTANT je VZDY STATIC READONLY FIELD.
   B. CONSTANT je mozne definovat IBA pre PRIMITIVNE TYPES [Boolean], [Char], [Byte], [SByte], [Int16], [UInt16], [Int32], [UInt32], [Int64], [UInt64], [Single], [Double], [Decimal] a [String].
   C. Pre CONSTANT je vytvoreny RECORD v METADATA TABLE.
   !!!!! D. C# pri kompilacii nahradi KAZDY vyskyt CONSTANT v CODE jej REALNOU VALUE. To znaci, ze MSIL CODE NEOBSAHUJE referenciu na CONSTANT, ale PRIAMO VALUE danej CONSTANT. To znamena, ak CONSTANT definovana v ASSEMBLY 'A' je referovane z ASSEMBLY 'B', tak POCAS C# COMPILATION sa nahradi hodnota CONSTANT v CODE ASSEMBLY 'B' a ASSEMBLY 'B' sa na CONSTANT v ASSEMBLY 'A' VOBEC NEREFERUJE. Ak nasledne sa zmeni hodnota CONSTANT v ASSEMBLY 'A' tak je NUTNE vykonat RECOMPILATION ASSEMBLY 'B', aby sa zmenena hodnota CONSTANT vymenila v MSIL CODE ASSEMBLY 'B'.
   E. CONSTANTS nemoze byt prenasane BY-REFERENCE.
   F. Na CONSTANTS nie je mozne ziskat jej ADDRESSES.
3. V CLR je mozne definovat nasledujuce typy FIELDS.
   A. STATIC FIELDS su ukladane v TYPE OBJECT, ktory je pre dany TYPE vytvoreny pri prvom pristupe k nemu.
   B. INSTANCE FIELDS su klasickymi FIELDS zviazanymi s INSTANCE daneho TYPE, ktore umoznuju READ/WRITE pristup, alebo READ pristup pri pouziti KEYWORD [readonly].
   !!! C. READONLY FIELDS su READ-ONLY FIELDS, ktore je mozne inicializovat IBA v CONSTRUCTOR, no dalej v CODE sa NEDAJU MENIT.
   D. VOLATILE FIELDS prikazuju C# aj JIT COMPILER aby vypol vsetky OPTIMALIZATION nad danymi FIELDS, ktore by mohli byt THREAD-UNSAFE, ako je napriklad prehodenie poradia zapisovania ci citania z jednotlivych FIELDS.
!!!!! 4. READONLY FIELDS je MOZNE ZMENIT pomocou REFLECTION.
!!! 5. READONLY FIELDS znemoznuju iba to, aby REFERENCIA na OBJECT, ktory obsahuje nemohla byt zmenena. No vnutorne FIELDS a PROPERTIES daneho OBJECT, ktory dany FIELD obsahuje zmenene mozu byt.
!!! 6. FIELDS by mali byt VZDY oznacene ako PRIVATE, alebo PROTECTED. Najlepsie je vsak pouzivat PRIVATE.
//-------------------------------------------------------------------------------------------------------