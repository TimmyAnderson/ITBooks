//-------------------------------------------------------------------------------------------------------
#pragma once
//-------------------------------------------------------------------------------------------------------
// !!! TEMPLATE FUNCTION vyberie TYPE podla INDEXU [Index].
template<int Index, typename TType1, typename TType2, typename TType3, typename TType4>
class CSelect
{
//-------------------------------------------------------------------------------------------------------
	// !!! Kontrola, aby INDEX NEMOHOL byt MIMO hranic <1,4>.
	static_assert(Index>=1 && Index<=4,"Index MUST be in RANGE <1,4> !");

	public:
		using TYPE=void;
//-------------------------------------------------------------------------------------------------------
};
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------
// !!! SPECIALIZATION, ktora vyberie 1. TYPE PARAMETER.
template<typename TType1, typename TType2, typename TType3, typename TType4>
class CSelect<1,TType1,TType2,TType3,TType4>
{
//-------------------------------------------------------------------------------------------------------
	public:
		using TYPE=TType1;
//-------------------------------------------------------------------------------------------------------
};
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------
// !!! SPECIALIZATION, ktora vyberie 1. TYPE PARAMETER.
template<typename TType1, typename TType2, typename TType3, typename TType4>
class CSelect<2,TType1,TType2,TType3,TType4>
{
//-------------------------------------------------------------------------------------------------------
	public:
		using TYPE=TType2;
//-------------------------------------------------------------------------------------------------------
};
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------
// !!! SPECIALIZATION, ktora vyberie 3. TYPE PARAMETER.
template<typename TType1, typename TType2, typename TType3, typename TType4>
class CSelect<3,TType1,TType2,TType3,TType4>
{
//-------------------------------------------------------------------------------------------------------
	public:
		using TYPE=TType3;
//-------------------------------------------------------------------------------------------------------
};
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------
// !!! SPECIALIZATION, ktora vyberie 4. TYPE PARAMETER.
template<typename TType1, typename TType2, typename TType3, typename TType4>
class CSelect<4,TType1,TType2,TType3,TType4>
{
//-------------------------------------------------------------------------------------------------------
	public:
		using TYPE=TType4;
//-------------------------------------------------------------------------------------------------------
};
//-------------------------------------------------------------------------------------------------------