//----------------------------------------------------------------------------------------------------------------------
#pragma once
//----------------------------------------------------------------------------------------------------------------------
#include <utility>
#include "CString.h"
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
class CStructuredBindingTupleFunctions final
{
//----------------------------------------------------------------------------------------------------------------------
	private:
		CString													MValue1;
		int														MValue2;
		double													MValue3;

	public:
		CString& GetValue1(void);
		int& GetValue2(void);
		double& GetValue3(void);

	public:
		CStructuredBindingTupleFunctions(const CString& Value1, int Value2, double Value3);
		virtual ~CStructuredBindingTupleFunctions(void) noexcept;
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<>
class std::tuple_size<CStructuredBindingTupleFunctions> final
{
//----------------------------------------------------------------------------------------------------------------------
	public:
		static size_t const										value=3;
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<>
class std::tuple_element<0,CStructuredBindingTupleFunctions> final
{
//----------------------------------------------------------------------------------------------------------------------
	public:
		using													type=CString;
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<>
class std::tuple_element<1,CStructuredBindingTupleFunctions> final
{
//----------------------------------------------------------------------------------------------------------------------
	public:
		using													type=int;
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<>
class std::tuple_element<2,CStructuredBindingTupleFunctions> final
{
//----------------------------------------------------------------------------------------------------------------------
	public:
		using													type=double;
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<size_t>
auto get(CStructuredBindingTupleFunctions Value);
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<>
inline auto get<0>(CStructuredBindingTupleFunctions Value)
{ 
	return(Value.GetValue1());
}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<>
inline auto get<1>(CStructuredBindingTupleFunctions Value)
{ 
	return(Value.GetValue2());
}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<>
inline auto get<2>(CStructuredBindingTupleFunctions Value)
{
	return(Value.GetValue3());
}
//----------------------------------------------------------------------------------------------------------------------