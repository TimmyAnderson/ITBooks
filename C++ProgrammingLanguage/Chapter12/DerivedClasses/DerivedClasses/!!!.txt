//-------------------------------------------------------------------------------------------------------
1. Solution demonstruje dedenie CLASSES v C++.
2. C++ podporuje MULTIPLE INHERITANCE, kedy DERIVED CLASS moze mat VIACERO BASE CLASSES.
3. C++ CLASS podporuje 3 urovne PRISTUPOVYCH PRAV.
   A. PRIVATE - MEMBER je pristupny iba pre CLASS. Z DERIVED CLASS ani MIMO CLASS NIE JE MEMBER PRISTUPNY.
   B. PROTECTED - MEMBER je pristupny iba pre CLASS i VSETKY DERIVED CLASSES. MIMO CLASS NIE JE MEMBER PRISTUPNY.
   C. PUBLIC - MEMBER je pristupne z LUBOVOLNEHO MIESTA.
4. CONSTRUCTORS sa volaju v nasledujucom poradi.
   A. Volaju sa CONSTRUCTORS VSETKYCH BASE CLASSES a to v poradi v akom su dedene v DERIVED CLASS.
   B. Volaju sa CONSTRUCTORS VSETKYCH MEMBERS pre DERIVED CLASS v poradi v akom su v DERIVED CLASS DEKLAROVANE.
   C. Vola sa CONSTRUCTOR DERIVED CLASS.
5. DESTRUCTORS sa volaju v nasledujucom poradi.
   A. Vola sa DESTRUCTOR DERIVED CLASS.
   B. Volaju sa DESTRUCTORS VSETKYCH MEMBERS pre DERIVED CLASS v OPACNOM poradi v akom su v DERIVED CLASS DEKLAROVANE.
   C. Volaju sa DESTRUCTORS VSETKYCH BASE CLASSES a to v OPACNOM poradi v akom su dedene v DERIVED CLASS.
!!! 6. Ak BASE aj DERIVED CLASSES definuju MEMBER s TYM ISTYM MENOM, tak DERIVED CLASS k tomuto MEMBER v BASE CLASS moze pristupit cez OPERATOR:: s menom BASE CLASS.
!!!!! 7. Pri priradzovani DERIVED CLASS do BASE CLASS je volany OPERATOR=. Ak tento NIE JE DEFINOVANY, tak kompilator skopiruje VSETKY FIELDS z DERIVED CLASS do BASE CLASS. Pri pokuse o opacne priradenie z BASE CLASS do DERIVED CLASS KOMPILATOR hodi CHYBU.
!!! 8. POLYMORFIZMUS sa aplikuje IBA pri pouziti POINTER na OBJECT a REFERENCE na OBJECT. Pri pouziti OBJEKTU sa samozrejme POLYMORFIZMUS NEAPLIKUJE, kedze DERIVED objekt 'PRETYPOVANY' na BASE CLASS je v skutocnosti BASE CLASS, ktory ma priradene VSETKY FIELDS z DERIVED CLASS.
9. VIRTUAL METHODS sa oznacuju pomocou KEYWORD 'virtual'. PURE VIRTUAL METHODS sa oznacuju '=0' za deklaraciou metody.
!!! 10. V C++ i PURE VIRTUAL METHODS mozu ma IMPLEMENTACIU.
!!!!! 11. VIRTUAL CLASS je CLASS, ktory ma ASPON 1 VIRTUAL METHOD. Takyto CLASS obsahuje SKRYTY POINTER, ktory odkazuje na VIRTUAL TABLE. Jeho SIZEOF je teda VACSI o 1 POINTER.
!!!!! 12. OPERATOR:: RUSI POLYMORFIZMUS. POLYMORFNA METODA, ktora je zavola cez OPERATOR:: bude volana NEPOLYMORFNE.
!!!!! 13. Takato C++ SYNTAX [DerivedClass.CSimpleBaseClass1::PrintAbstractWithImplementation()] je PLNE VALIDNA a metoda NEBUDE VOLANA POLYMORFNE, kedze OPERATOR:: RUSI POLYMORFIZMUS.
!!! 14. Ak CLASS obsahuje VIRTUAL METHODS tak je VHODNE, aby jej DESTRUCTOR bol VIRTUAL. VIRTUAL DESTRUCTOR zabezpecuje, ze pri odstranovani objektu z pamate, ak bol pretypovany na BASE CLASS sa zavola DESTRUCTOR pre DERIVED CLASS. Ak by DESTRUCTOR NEBOL VIRTUAL tak by sa pri likvidacii DERIVED objektu pretypovaneho na BASE objekt volal IBA DESTRUCTOR pre BASE objekt a DESTRUCTOR pre DERIVED objekt by sa NEVOLAL.
//-------------------------------------------------------------------------------------------------------