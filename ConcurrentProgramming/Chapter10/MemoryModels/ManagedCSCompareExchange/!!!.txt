//------------------------------------------------------------------------------
1. Program demonstruje pouzitie operacie Interlocked.CompareExchange() na implementaciu CS LOCK.
2. Operacia Interlocked.CompareExchange() ATOMICKY realizuje zapis hodnoty do pametovej lokacie AK je POVODNA HODNOTA rovna ZADANEJ HODNOTE. Zaroven vracia POVODNU HODNOTU pametovej lokacie.
3. Operacia Interlocked.CompareExchange() ma viacero pretazeni, vratane GENERICS pre parameter T, ktory MUSI BYT 'class' - nesmie byt 'struct', pretoze tie sa prenasaju hodnotou a ich dlzka moze byt lubovolna - dlhsia ako 32/64 bits, ktorych atomickost zarucuje CPU.
!!!!! 4. Aj ked to nie je nevyhnutne, je VELMI VHODNE aby pametova lokacia nad ktorou pracuje Operacia Interlocked.CompareExchange() bola oznacena ako VOLATILE - aby sa tak predislo optimailzaciam kompilatora, ktore by mohli viest k reorderingu operacii co moze viest k naruseniu atomicity operacii.
//------------------------------------------------------------------------------