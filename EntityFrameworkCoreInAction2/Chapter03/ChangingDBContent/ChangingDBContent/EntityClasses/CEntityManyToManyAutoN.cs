using System;
using System.Collections.Generic;
using System.Text;
using Helpers;
//----------------------------------------------------------------------------------------------------------------------
namespace ChangingDBContent
{
//----------------------------------------------------------------------------------------------------------------------
	// !!! CLASS reprezentuje RIGHT SIDE RELATIONSHIP M:N.
	public sealed class CEntityManyToManyAutoN
	{
//----------------------------------------------------------------------------------------------------------------------
		private int												MEntityNID;
//----------------------------------------------------------------------------------------------------------------------
		private string											MEntityNValue;
//----------------------------------------------------------------------------------------------------------------------
		// !!! NAVIGATION PROPERTY na ENTITY M.
		private ICollection<CEntityManyToManyAutoM>				MEntitiesM;
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
		public CEntityManyToManyAutoN()
		{
			MEntityNID=default(int);
			MEntityNValue=default(string);
			MEntitiesM=default(ICollection<CEntityManyToManyAutoM>);
		}
//----------------------------------------------------------------------------------------------------------------------
		public CEntityManyToManyAutoN(string EntityNValue)
		{
			MEntityNID=default(int);
			MEntityNValue=EntityNValue;
			MEntitiesM=new List<CEntityManyToManyAutoM>();
		}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
		public int												EntityNID
		{
			get
			{
				return(MEntityNID);
			}
			set
			{
				MEntityNID=value;
			}
		}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
		public string											EntityNValue
		{
			get
			{
				return(MEntityNValue);
			}
			set
			{
				MEntityNValue=value;
			}
		}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
		public ICollection<CEntityManyToManyAutoM>				EntitiesM
		{
			get
			{
				return(MEntitiesM);
			}
			set
			{
				MEntitiesM=value;
			}
		}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
		public static void PrintToConsole(CEntityManyToManyAutoN[] Entities)
		{
			for(int Index=0;Index<Entities.Length;Index++)
			{
				CEntityManyToManyAutoN							EntityN=Entities[Index];
				string											EntityNText=EntityN.Print(Index+1);
							
				if (Index>0)
				{
					CConsoleHelpers.WriteLineSeparator();
				}

				CConsoleHelpers.Write(EntityNText,ConsoleColor.Green);
			}
		}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
		public string Print(int? Index)
		{
			StringBuilder										SB=new StringBuilder();

			if (Index!=null)
			{
				SB.AppendLine($"ENTITY N [{Index}]:");
			}
			else
			{
				SB.AppendLine($"ENTITY N:");
			}

			SB.AppendLine($"\tENTITY N ID [{MEntityNID}] !");
			SB.AppendLine($"\tENTITY N VALUE [{MEntityNValue}] !");

			if (MEntitiesM!=null)
			{
				SB.AppendLine($"\tENTITIES MN:");

				int												EntityMIndex=1;

				foreach(CEntityManyToManyAutoM EntityM in MEntitiesM)
				{
					SB.AppendLine($"\t\tENTITY M [{EntityMIndex}]:");

					SB.AppendLine($"\t\t\tENTITY M ID [{EntityM.EntityMID}] !");
					SB.AppendLine($"\t\t\tENTITY M VALUE [{EntityM.EntityMValue}] !");

					EntityMIndex++;
				}
			}
			else
			{
				SB.AppendLine($"\t--- ENTITIES M is NULL ! ---");
			}

			return(SB.ToString());
		}
//----------------------------------------------------------------------------------------------------------------------
	}
//----------------------------------------------------------------------------------------------------------------------
}
//----------------------------------------------------------------------------------------------------------------------