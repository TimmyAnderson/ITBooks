//----------------------------------------------------------------------------------------------------------------------
#pragma once
//----------------------------------------------------------------------------------------------------------------------
#include <stdio.h>
#include "STraitsIfThenElse.h"
#include "SIntegralConstant.h"
#include "STypeFunctionIsSame.h"
#include "CTypeListIsEmpty.h"
#include "CTypeListFront.h"
#include "CTypeListPopFront.h"
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<typename TTypeList, typename TType, size_t INDEX=0, bool EMPTY=CTypeListIsEmpty<TTypeList>>
class CTypeListFindIndexOfType;
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<typename TTypeList, typename TType, size_t INDEX>
class CTypeListFindIndexOfType<TTypeList,TType,INDEX,false> : public STraitsIfThenElseUsing<STypeFunctionIsSame<CTypeListFront<TTypeList>,TType>::VALUE,SIntegralConstant<size_t,INDEX>,CTypeListFindIndexOfType<CTypeListPopFront<TTypeList>,TType,INDEX+1>>
{
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<typename TTypeList, typename TType, size_t INDEX>
class CTypeListFindIndexOfType<TTypeList,TType,INDEX,true>
{
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------