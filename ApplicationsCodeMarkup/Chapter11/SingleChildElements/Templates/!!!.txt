//------------------------------------------------------------------------------
1. Program demonstruje pouzitie TEMPLATES na customizaciu ELEMENTS.
2. Property Template, ktora umoznuje aplikaciu ELEMENTS je zdedena z triedy Control a teda ELEMENTS, ktore chcu implementovat TEMPLATES musia dedit z Control.
3. Template obsahuje objekt typu ControlTemplate, pomocou ktoreho definuje VYZOR ELEMENTU, ako bude vyzerat, ked sa nanho aplikuje TEMPLATE.
!!! 4. Kedze pri definovani TEMPLATE NEEXISTUJU REALNE OBJEKTY ELEMENTS (tie sa vytvoria az po aplikacii TEMPLATE na ELEMENT), tak pri definovanin TEMPLATE NAMIESTO pridavania CHILD ELEMENTS pridavam objekty typu FrameworkElementFactory, ktore sa TVARIA ako PROXY ELEMENTS na ktore je mozne aplikovat DP, AP a RE. Pri APLIKACII TEMPLATE sa z FrameworkElementFactory vytvori KONKRETNY ELEMENT, ktory FrameworkElementFactory reprezentoval a APLIKUJU sa nanho DP, AP a RE, ktore som pri deklaracii TEMPLATE aplikoval na FrameworkElementFactory.
!!! 5. TEMPLATES umoznuju definovat TRIGGERS. Trigger je objekt, ktory umoznuje MONITOROVAT HODNOTU DP ELEMENT v TEMPLATE a pri definovanej hodnote (napriklad IsMouseOver==true) VYKONAT istu akciu SETTER, ktora casto znamena ZMENIT HODNOTU INEJ DP (napriklad zmenit BorderThickness).
6. Triggers sa pridavaju do kolekcie Triggers triedy ControlTemplate. Jeden Trigger moze mat definovanych i viacero SETTERS - teda viacero akcii, ktore sa vykonaju pri odpaleni daneho TRIGGER.
//------------------------------------------------------------------------------