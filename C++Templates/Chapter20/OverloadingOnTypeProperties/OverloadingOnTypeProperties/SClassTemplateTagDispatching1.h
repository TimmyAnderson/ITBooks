//----------------------------------------------------------------------------------------------------------------------
#pragma once
//----------------------------------------------------------------------------------------------------------------------
#include <iostream>
#include "CClassTagDisptaching1.h"
#include "CClassTagDisptaching2.h"
#include "CClassTagDisptaching3.h"
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
// !!!!! DECLARATION PRIMARY TEMPLATE CLASS.
// !!!!! 2. TEMPLATE PARAMETER sa pouziva na rozlisenie, ktoru TEMPLATE CLASS SPECIALIZATION ma COMPILER pouzit.
template<typename TType, typename TTag>
struct SClassTemplateTagDispatching1;
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
// !!!!! TEMPLATE CLASS SPECIALIZATION pre TAG DISPATCHING CLASS [CClassTagDisptaching1].
template<typename TType>
struct SClassTemplateTagDispatching1<TType,CClassTagDisptaching1>
{
//----------------------------------------------------------------------------------------------------------------------
	public:
		void Print(TType Value) const;
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<typename TType>
void SClassTemplateTagDispatching1<TType,CClassTagDisptaching1>::Print(TType Value) const
{
	std::wcout << L"1 - TEMPLATE CLASS SPECALIZATION for TAG DISPATCHING 1 - TYPE [" << GetTypeInfoName<decltype(Value)>() << L"] VALUE [" << Value << L"]." << std::endl;
}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
// !!!!! TEMPLATE CLASS SPECIALIZATION pre TAG DISPATCHING CLASS [CClassTagDisptaching2].
template<typename TType>
struct SClassTemplateTagDispatching1<TType,CClassTagDisptaching2>
{
//----------------------------------------------------------------------------------------------------------------------
	public:
		void Print(TType Value) const;
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<typename TType>
void SClassTemplateTagDispatching1<TType,CClassTagDisptaching2>::Print(TType Value) const
{
	std::wcout << L"1 - TEMPLATE CLASS SPECALIZATION for TAG DISPATCHING 2 - TYPE [" << GetTypeInfoName<decltype(Value)>() << L"] VALUE [" << Value << L"]." << std::endl;
}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
// !!!!! TEMPLATE CLASS SPECIALIZATION pre TAG DISPATCHING CLASS [CClassTagDisptaching3].
template<typename TType>
struct SClassTemplateTagDispatching1<TType,CClassTagDisptaching3>
{
//----------------------------------------------------------------------------------------------------------------------
	public:
		void Print(TType Value) const;
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<typename TType>
void SClassTemplateTagDispatching1<TType,CClassTagDisptaching3>::Print(TType Value) const
{
	std::wcout << L"1 - TEMPLATE CLASS SPECALIZATION for TAG DISPATCHING 3 - TYPE [" << GetTypeInfoName<decltype(Value)>() << L"] VALUE [" << Value << L"]." << std::endl;
}
//----------------------------------------------------------------------------------------------------------------------