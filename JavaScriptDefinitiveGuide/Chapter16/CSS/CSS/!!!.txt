//-------------------------------------------------------------------------------------------------------
1. Solution demonstruje pouzitie CSS v JavaScripte.
2. CSS umoznuje nastavovat rozlicne vizualne aspekty HTML ELEMENTS ako su farby, rozmery, fonty, okraje ci pozicie ELEMENTS.
3. CSS je mozne menit pomocou SCIPTS napisanych v JavaScript ci je mozne vytvorit rozlicne graficky zaujimave vizualne efekty, ako posun ELEMENT po WEB PAGE, skryvanie obsahu WEB PAGE, animacie a tak podobne.
4. CSS pouziva na definovanie VALUE SYNTAX [Property:Value], alebo [ComplexProperty-Property:Value].
5. CSS oddeluje jednotlive VALUES od seba nasledujucou SYNTAXOU [Property1:Value1;Property2:Value2].
!!! 6. CSS STYLE moze byt aplikovany na HTML ELEMENT 2 sposobmi.
   A. CSS STYLE sa vlozi PRIAMO do 'style' ATTRIBUTE HTML ELEMENT.
   B. CSS STYLE sa vlozi do .CSS FILE a ten sa vlozi do WEB PAGE pomocou <link> ELEMENT SYNTAXOU [<link rel="Stylesheet" href="SomeCSSFile.css" type="text/css" />].
!!! 7. CSS sa aplikuju KASKADNE z viacerych SOURCES. Pri aplikacii CSS STYLES na danu CSS PROPERTY sa berie VZDY iba SOURCE s NAJVYSSOU PRIORITOU.
   A. NAJVYSSIOU PRIORITU ma STYLE aplikovany na 'style' ATTRIBUTE. Ak je na tejto urovni nastavena PROPERTY daneho STYLE, tak PREPISE PROPERTY aplikovanu na SOURCES z NIZSOU PRIORITOU.
   B. STREDNU PRIORITU ma STYLE aplikovany na dany DOCUMENT. Tento STYLE PREPISE STYLE aplikovany na WEB BROWSER, ale v pripade, ze PROPERTY je nastavena v STYLE aplikovanom na 'style' ATTRIBUTE, tak sa aplikuje tato a PROPERTY aplikovana na DOCUMENT sa NEPOUZIJE.
   C. NAJNIZSIU PRIORITU ma STYLE aplikovany na WEB BROWSER. SOURCES s VYSSOU PRIORITOU PROPERTY nastavenu v tomto SOURCE VZDY PREPISU.
!!!!! 8. V pripade, ze HTML ELEMENT je mozne aplikovat VIACERO STYLES (samozrejme musia mat rovnaku PRIORITU), tak prednost ma VIAC SPECIFICKY CSS STYLE.
!!! 9. CSS umoznuje definovat PROPERTIES vyzadujuce VELKOST ci POZICIU definovat v nasledujucich typoch jednotiek.
   A. VALUE 'Xpx' znamena, ze hodnota je zadana v PIXELOCH.
   B. VALUE 'Xin' znamena, ze hodnota je zadana v INCHES.
   C. VALUE 'Xcm' znamena, ze hodnota je zadana v CENTIMETROCH.
   D. VALUE 'Xpt' znamena, ze hodnota je zadana v BODOCH.
   E. VALUE 'Xems' znamena, ze hodnota je zadana vo velkosti FONTU.
   F. VALUE 'X%' znamena, ze hodnota je zadana v PERCENTACH.
10. CSS PROPERTIES 'width' a 'height' urcuju VELKOST HTML ELEMENT.
11. Nastavenie pozicie HTML ELEMENTS pomocou CSS STYLES je mozne vykonat nasledujucimi sposobmi.
   A. STATIC - HTML ELEMENTS sa umiestnuju podla NORMALNEHO DOCUMENT FLOW. Je to DEFAULT OPTION.
   B. ABSOLUTE - HTML ELEMENTS su umiestnene v ABSOLUTNYCH HODNOTACH od PARENT HTML ELEMENT, ktory ma nastavenu urcovanie pozicie na INU HODNOTU ako STATIC. Ak taky PARENT HTML ELEMENT NEEXISTUJE, HTML ELEMENT sa umiestnuje ABSOLUTNE voci WINDOW.
   C. RELATIVE - HTML ELEMENTS su umiestnene RELATIVNE voci miestu, kde by boli umiestnene podla NORMALNEHO DOCUMENT FLOW. Inak povedane, HTML ELEMENT je umiestneny najprv podla NORMALNEHO DOCUMENT FLOW a nasledne posunuty o tieto RELATIVNE HODNOTY.
   D. FIXED - HTML ELEMENTS su umiestnene v ABSOLUTNYCH HODNOTACH od WINDOW, pricom na svojej pozicii ostavaju AJ PO VYKONANI SCROLLING.
12. CSS PROPERTIES 'left', 'top', 'right' a 'bottom' urcuju od, ktorej hranice sa bude pozicia HTML ELEMENT urcovat.
13. CSS PROPERTY 'z-index' urcuje Z-ORDER daneho HTML ELEMENT. Vyssia hodnota znamena, ze HTML ELEMENT bude v POPREDI.
14. CSS PROPERTY 'border' a jej SUBPROPERTIES (napriklad 'border-top-width', 'border-bottom-color') umoznuje definovat BORDER, ktora sa moze vykreslit okolo celeho HTML ELEMENT, alebo iba z niektorych stran.
!!! 15. CSS PROPERTY 'padding' urcuje priestor medzi BORDER a HTML ELEMENT na ktorom je 'padding' aplikovany. Bez nastavenia BORDER na HTML ELEMENT pouzitie 'padding' NEMA VYZNAM.
!!! 16. CSS PROPERTY 'margin' urcuje priestor medzi BORDER a OSTATNYMI HTML ELEMENTS.
17. CSS PROPERTY 'visibility' umoznuje urcite viditelnost HTML ELEMENT. Pre HTML ELEMENT, ktory NIE JE VISIBLE je vsak REZERVOVANA PLOCHA pri DOCUMENT FLOW.
18. CSS PROPERTY 'display' umoznuje urcite viditelnost HTML ELEMENT. Pre HTML ELEMENT, ktory NIE JE VISIBLE NIE JE REZERVOVANA PLOCHA pri DOCUMENT FLOW.
19. CSS PROPERTY 'color' urcuje FOREGROUND COLOR daneho HTML ELEMENT.
20. CSS PROPERTY 'background-color' urcuje BACKGROUND COLOR daneho HTML ELEMENT.
21. CSS PROPERTY 'border-color' urcuje BORDER COLOR daneho HTML ELEMENT.
22. CSS PROPERTY 'background-image' urcuje BACKGROUND IMAGE daneho HTML ELEMENT.
23. CSS PROPERTY 'opacity' urcuje uroven transparentnosti daneho HTML ELEMENT. Povolene hodnoty su <0,1>, kde 0 je uplna TRANSPARENTNOST a 1 je uplna NEPRIEHLADNOST.
24. CSS PROPERTY 'overflow' urcuje ako sa ma vykreslit HTML ELEMENT, ktory svojim CONTENT PRESAHUJE velkost HTML ELEMENT.
   A. Hodnota 'visible' znamena, ze sa presahujuci CONTENT ZOBRAZI.
   B. Hodnota 'hidden' znamena, ze sa presahujuci CONTENT NEZOBRAZI.
   C. Hodnota 'scroll' znamena, ze HTML ELEMENT bude mat VZDY ZOBRAZENE SCROLL BARS, ktore ak CONTENT prekroci stanovenu velkost, je mozne vykonat SCROLLING.
   D. Hodnota 'auto' znamena, ze ako CONTENT PRESIAHNE stanovenu velkost, AUTOMATICKY sa zobrazia SCROLLBARS, ktore na ktorej mozne vykonat SCROLLING.
25. CSS PROPERTY 'clip' urcuje RECTANGLE v ktorom sa moze zobrazovat CONTENT HTML ELEMENT. Mimo RECTANGLE je CONTENT OREZANY.
!!! 26. CSS PROPERTIES sa v JavaScript daju menit pomocou PROPERTY Element.style. Tato PROPERTY je TYPU CSSStyleDeclaration a kopiruje CSS PROPERTIES.
!!!!! 27. Kedze znak '-' pouzivany v CSS je v JavaScript OPERATOR-, tak PROPERTIES obsahujuce '-' maju format NAME taky, ze vsetky znaky '-' su VYHODENE a prve pismena za znakmi '-' su napisane v UPPERCASE. Teda napriklad [font-size] ma PROPERTY NAME [CSSStyleDeclaration.fontSize]. CSS PROPERTIES, ktore su KEYWORDS v JavaScript maju PREFIX 'css', takze napriklad [float] zodpoveda [cssFloat].
!!! 28. VSETKY hodnoty CSS PROPERTIES zadavane cez JavaScript MUSIA byt typu STRING.
!!!!! 29. PROPERTY Element.style umoznuje nastavovat CSS STYLE pre KONKRETNY CSS ELEMENT. Avsak CITANIE EFEKTIVNEJ HODNOTY CSS PROPERTY, ktora moze byt ovplyvnena nastavenim danej CSS PROPERTY na urovni DOCUMENT, alebo WEB BROWSER PROPERTY Element.style NIE JE MOZNE POUZIT. Pomocou METHOD Window.getComputedStyle() je mozne zistit SKUTOCNE CSS PROPERTIES aplikovane na dany HTML ELEMENT.
!!! 30. NAJEFEKTIVNEJSOU zmenou STYLES je zmena Element.className PROPERTY na INY TYP CLASS, ktoremu je priradeny iny CSS STYLE. Do Element.className je mozne priradit aj VIACERO CLASS NAMES oddelenych MEDZEROU.
!!! 31. PROPERTY Element.classList definovana v HTML5 je COLLECTION typu DOMTokenList a obsahuje VSETKY CLASSES daneho HTML ELEMENT, ako ITEMS Element.classList COLLECTION. S Element.classList sa tym padom pracuje LAHSIE ako s Element.className, kde su jednotlive CLASSES odelene MEDZEROU a treba ich PARSOVAT.
!!! 32. CLASS CSSStyleSheet reprezentuje .CSS FILE, ktory je mozne pomocou METHODS tejto CLASS MODIFIKOVAT. Ma nasledujuce MEMBERS.
   A. PROPERTY CSSStyleSheet.disabled umoznuje spravit DISABLING daneho STYLESHEET.
   B. PROPERTY CSSStyleSheet.cssRules obsahuje ARRAY so vsetkymi RULES (CLASS typu CSSRule) daneho STYLESHEET.
   C. METHOD CSSStyleSheet.insertRule() (v IE CSSStyleSheet.addRule()) umoznuje pridavat RULES do STYLESHEET.
   D. METHOD CSSStyleSheet.deleteRule() (v IE CSSStyleSheet.removeRule()) umoznuje odstranovat RULES zo STYLESHEET.
!!! 33. PROPERTY Document.styleSheets obsahuje zoznam vsetkych CSS STYLESHEETS (OBJECT typu CSSStyleSheet), ktore su ASOCIOVANE s danym DOCUMENT.
34. CLASS CSSRule reprezentuje CSS RULE. Obsahuje nasledujuce MEMBERS.
   A. PROPERTY CSSRule.selectorText reprezentuje SELECTOR TEXT daneho RULE.
   B. PROPERTY CSSRule.style reprezentuje STYLE (CLASS typu CSSStyleDeclaration) daneho RULE.
//-------------------------------------------------------------------------------------------------------