//----------------------------------------------------------------------------------------------------------------------
#pragma once
//----------------------------------------------------------------------------------------------------------------------
#include <iostream>
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<typename TType>
class CAutomaticInstantiation2 final
{
//----------------------------------------------------------------------------------------------------------------------
	private:
		TType													MValue;

	public:
		const TType& GetValue(void) const noexcept;

	public:
		CAutomaticInstantiation2(TType Value);
		virtual ~CAutomaticInstantiation2(void) noexcept;
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<typename TType>
CAutomaticInstantiation2<TType>::CAutomaticInstantiation2(TType Value)
	: MValue(Value)
{
}
//----------------------------------------------------------------------------------------------------------------------
template<typename TType>
CAutomaticInstantiation2<TType>::~CAutomaticInstantiation2(void) noexcept
{
}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<typename TType>
const TType& CAutomaticInstantiation2<TType>::GetValue(void) const noexcept
{
	return(MValue);
}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
void TestAutomaticInstantiation2(int Parameter)
{
	std::wcout << L"INT - VALUE [" << Parameter << L"]." << std::endl;
}
//----------------------------------------------------------------------------------------------------------------------
void TestAutomaticInstantiation2(CAutomaticInstantiation2<double> Parameter)
{
	std::wcout << L"CAutomaticInstantiation2<double> - VALUE [" << Parameter.GetValue() << L"]." << std::endl;
}
//----------------------------------------------------------------------------------------------------------------------