using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Runtime.InteropServices;
//-------------------------------------------------------------------------------------------------------
namespace Finalizer
{
//-------------------------------------------------------------------------------------------------------
	public class CWorker
	{
//-------------------------------------------------------------------------------------------------------
        [DllImport("MyNative.dll")]
        static extern void Init(); 
        [DllImport("MyNative.dll")]
        static extern void UnInit();
        [DllImport("MyNative.dll")]
        static extern void Process(byte[] Data); 
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------
        public CWorker()
        {
			// Native code vola LOCK CS.
            Init();
        }
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------
		// Finalizer.
        ~CWorker()
        {
			// !!! Tu, ale uz z FINALIZER CODE, znova NATIVE CODE vola LOCK CS a dojde k DEADLOCK. Vysledkom je, ze FINALIZER THREAD STVRDNE a PRESTANE UVOLNOVAT PAMAT.
            UnInit();
        }
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------
        public void ProcessData(byte[] Data)
        {
            Process(Data);
        }
//-------------------------------------------------------------------------------------------------------
	}
//-------------------------------------------------------------------------------------------------------
}
//-------------------------------------------------------------------------------------------------------