//-------------------------------------------------------------------------------------------------------
1. Solution demonstruje pouzitie Window OBJECT vo WEB BROWSERS.
2. Window OBJECT je zakladny OBJECT pre pracu JavaScript kodu vo WEB BROWSERS. Okrem prace s WINDOW WEB BROWSERS umoznuje i mnozstvo inej funkcionality.
3. Pre pracu s TIMERS poskytuje Window OBJECT nasledujuce METHODS.
   A. METHOD Window.setTimeout() nastavuje FUNCTION, ktora sa zavola po stanovenom case. Jej RETURN VALUE je mozne pouzit ako PARAMETER do FUNCTION clearTimeout(). TIMEOUT 0 znamena, ze vykonanie TIMER sa zaradi do QUEUE a bude vykonane OKAMZITE (resp. ak su v QUEUE aj ine EVENTS, tak az potom co TIMER EVENT pride na vrchol QUEUE).
   B. METHOD Window.clearTimeout() umoznuje zastavit vyvolanie FUNCTION zaregistrovanej cez setTimeout().
   C. METHOD Window.setInterval() nastavuje FUNCTION, ktora sa PERIODICKY vola po stanovenom case. Jej RETURN VALUE je mozne pouzit ako PARAMETER do FUNCTION clearInterval().
   D. METHOD Window.clearInterval() umoznuje zastavit vyvolanie FUNCTION zaregistrovanej cez setInterval().
4. PROPERTY Window.location obsahuje Location OBJECT, ktory obsahuje informaciu o URL aktualnej WEB PAGE. Ma nasledujuce MEMBERS.
   A. PROPERTY Location.href obsahuje kompletnu URL.
   B. PROPERTY Location.protocol obsahuje PROTOCOL cast z URL.
   C. PROPERTY Location.host obsahuje HOST (HOSTNAME+PORT) cast z URL.
   D. PROPERTY Location.hostname obsahuje HOSTNAME cast z URL.
   E. PROPERTY Location.port obsahuje PORT cast z URL.
   F. PROPERTY Location.pathname obsahuje PATHNAME cast z URL.
   G. PROPERTY Location.search obsahuje URL PARAMETRE. Je to STRING, ktory sa v URL nachadza za znakom '?'.
   H. PROPERTY Location.hash obsahuje cast URL, ktora sa nachadza za znakom '#'.
   I. METHOD Location.assign() vyvola nacitanie NOVEJ WEB PAGE, pricom akutalna sa ZAPISE do BROWSING HISTORY.
   J. METHOD Location.replace() vyvola nacitanie NOVEJ WEB PAGE, pricom akutalna sa NEZAPISE do BROWSING HISTORY. Toto sa s vyhodou pouziva napriklad pri presmerovani WEB PAGES.
   K. METHOD Location.reload() vyvola nacitanie TEJ ISTEJ WEB PAGE.
!!! 5. PROPERTY Window.location je WRITABLE. Zapis do nej znamena OKAMZITE NACITANIE NOVEJ WEB PAGE. Takisto i VSETKY PROPERTIES ako napriklad 'search', 'hostname' ci 'pathname' su WRITABLE a znova zapis do nich znamena nacitanie NOVE PAGE.
6. PROPERTY Window.location obsahuje History OBJECT, ktory obsahuje informaciou o HISTORII navstivenych WEB PAGES. Kvoli SECURITY History OBJECT NEMOZE pristupovat k URL adresam WEB PAGES, ale moze medzi nimi navigovat. Ma nasledujuce MEMBERS.
   A. PROPERTY History.length urcuje pocet WEB PAGE URL v History OBJECT.
   B. METHOD go() umoznuje presun medzi jednotlivymi WEB PAGES v HISTORII. Kladna hodnota znamena FORWARD, zaporna BACKWARD.
   C. METHOD back() umoznuje presun v HISTORII BACKWARD smerom.
   D. METHOD forward() umoznuje presun v HISTORII FORWARD smerom.
!!! 7. Do History OBJECT sa ukladaju aj vytvorene <iframe> ELEMENTS a ich URL. Preto napriklad vyvolanie History.back() na History OBJECT moze pri vytvorenom <iframe> vyvolat navigaciu spat v <iframe> a NIE v MAIN WINDOW.
8. PROPERTY Window.navigator obsahuje Navigator OBJECT, ktory vracia informacie o type a verzi BROWSER. Ma nasledujuce MEMBERS.
   A. PROPERTY Navigator.appName vracia meno WEB BROWSER. Kedze VACSINA BROWSER vracia kvoli kompatibilite STRING 'Netscape', tato hodnota nie je velmi pouzitelna.
   B. PROPERTY Navigator.appVersion vracia verziu WEB BROWSER. Hodnota nie je velmi zmysuplna, pretoze verzionovanie nie je standardizovane.
   C. PROPERTY Navigator.userAgent vracia USER-AGENT HTTP HEADER. Je to NAJCASTEJSIE pouzivana hondota Navigator OBJECT, aj ked ani tato NIE JE STANDARDIZOVANA.
   D. PROPERTY Navigator.platform urcuje typ operacneho systemu na ktorom WEB BROWSER bezi.
9. PROPERTY Window.screen obsahuje Screen OBJECT, ktory vracia informacie o velkosti a type DISPLAY. Ma nasledujuce MEMBERS.
   A. PROPERTY Screen.width urcuje SIRKU DISPLAY v PIXELOCH.
   B. PROPERTY Screen.height urcuje VYSKU DISPLAY v PIXELOCH.
   C. PROPERTY Screen.availWidth urcuje POUZITELNU SIRKU (bez TOOLBARS, SLIDERS) DISPLAY v PIXELOCH.
   D. PROPERTY Screen.availHeight urcuje POUZITELNU VYSKU (bez TOOLBARS, SLIDERS) v PIXELOCH.
   E. PROPERTY Screen.colorDepth urcuje COLOR DEPTH DISPLAY.
10. METHOD Window.alert() zobrazuje MODALNE dialogove okno s tlacitkom OK.
11. METHOD Window.confirm() zobrazuje MODALNE dialogove okno s tlacitkami OK a CANCEL. METHOD Window.confirm() vracia BOOLEAN hodnotu.
!!! 12. METHOD Window.prompt() zobrazuje MODALNE dialogove okno s TEXTBOXOM a tlacitkami OK a CANCEL. METHOD Window.prompt() vracia STRING zadany do TEXTBOXU.
!!! 13. METHOD Window.showModalWindow() zobrazuje MODALNE dialogove okno. Platia prenho nasledujuce pravidla.
   A. DIALOG BOX je reprezentovany URL na WEB PAGE, ktora obsahuje DIALOG BOX.
   B. DIALOG BOX  je MODALNY a teda Window.showModalWindow() sa ukonci az po jeho uzavreti.
   C. Do DIALOG BOX je mozne zaslat PARAMETER, ktory sa zasiela ako 2. PARAMETER showModalWindow(). Tento PARAMETER je v DIALOG BOX pristupny pomocou PROPERTY window.dialogArguments.
   D. RETURN VALUE Window.showModalWindow() je hodnota Window.returnValue DIALOG BOX.
   E. DIALOG BOX by MAL mat tlacitko OK ktore zavola Window.close().
!!! 14. PROPERTY Window.onerror je volana ked na WEB PAGE je detekovana chyba. Ma 3 PARAMETRE Message, URL a ErrorLine (urcuje cislo riadku, kde doslo k chybe). Ak RETURN VALUE je 'false', tak ERROR sa povazuje za OSETRENY a ERROR MESSAGE sa NEZOBRAZI.
!!! 15. HTML ELEMENTS, ktore maju priradene 'id' AUTOMATICKY su zaradene ako PROPERTIES do Window OBJECT. Ak dojde ku KOLIZII, teda PROPERTY s rovnakym menom ako 'id' HTML ELEMENT uz EXISTUJE, tak PROPERTY vo Window OBJECT sa NEVYTVORI. Pouzivanie tychto PROPERTIES je povazovane za OBSOLETE.
!!!!! 16. Ak WEB PAGE vytvara <iframe> ELEMENTS, alebo otvara nove TABS (WINDOWS), tak tieto <iframes>, TAGS, WINDOWS MOZU medzi sebou KOMUNIKOVAT (pristupovat k ELEMENTS). Avsak TAGS a WINDOWS, ktore boli vytvorene NEZAVISLE z inych WEB PAGES NEMOZU VZAJOMNE KOMUNIKOVAT (pristupovat k ELEMENTS), aby nedoslo k NARUSENIU SECURITY.
17. METHOD Window.open() vytvara novy TAB, alebo WINDOW. Platia prenho nasledujuce zasady.
   A. WEB PAGE, ktoru Window.open() sa zadava v tvare URL ako 1. PARAMETER Window.open().
   B. METHOD Window.open() ako RETURN VALUE vracia Window OBJECT NOVEHO TAB, alebo WINDOW. Tento OBJECT je mozne pouzit napriklad pri ZATVARANI vytvoreneho TAB resp. WINDOW.
   C. NOVEMU TAB, alebo WINDOW je mozne nastavit NAME (je pristupne cez Window.name). Toto NAME sa pouziva pri referovani na UZ EXISTUJUCI TAB resp. WINDOW. Ak sa pouzije TEN ISTY NAME, tak vacsina BROWSERS zobrazi UZ EXISTUJUCI TAB, alebo FRAME.
   D. WEB PAGE moze pristupovat IBA k TABS, alebo WINDOWS, ktore SAM VYTVORIL.
   E. NOVY TAB, resp. WINDOW obsahuje PROPERTY 'opener' co je odkaz na Window OBJECT, ktory NOVY TAB, resp. WINDOW VYTVORIL.
18. METHOD Window.close() uzatvara TAB, alebo WINDOW. Platia prenho nasledujuce zasady.
   A. METHOD Window.close() je volana na Window OBJECT, ktory bol vrateny volanim METHOD Window.open().
   B. WEB PAGE moze zatvarat IBA k TABS, alebo WINDOWS, ktore SAM VYTVORIL.
   !!! C. Po uzatvoreni TAB, alebo WINDOW Window OBJECT NIE JE HNED ODSTRANENY z PAMATE, ale jeho 'document' PROPERTY je nastaveny na 'null' a PROPERTY 'closed' je nastaveny na 'true'.
!!!!! 19. Pre pracu s FRAMES Window OBJECT implementuje nasledujuce MEMBERS.
   A. PROPERTY Window.frames obsahuje COLLECTION Window OBJECT reprezentujucich VSETKY FRAMES na WEB PAGE.
   B. PROPERTY Window.parent vracia Window OBJECT PARENT FRAME, alebo WINDOW.
   C. PROPERTY Window.top vracia Window OBJECT MAIN WINDOW.
!!! 20. ELEMENT <iframe> obsahuje PROPERTY 'contentWindow', ktory referuje na Window OBJECT reprezentujuci dany FRAME.
//-------------------------------------------------------------------------------------------------------