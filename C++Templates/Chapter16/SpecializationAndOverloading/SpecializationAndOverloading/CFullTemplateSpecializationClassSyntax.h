//----------------------------------------------------------------------------------------------------------------------
#pragma once
//----------------------------------------------------------------------------------------------------------------------
#include <iostream>
#include "CString.h"
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
// !!! Toto je PRIMARY TEMPLATE CLASS.
template<typename TType>
class CFullTemplateSpecializationClassSyntax final
{
//----------------------------------------------------------------------------------------------------------------------
	private:
		TType													MValue;

	public:
		void Print(void) const;

	public:
		CFullTemplateSpecializationClassSyntax(TType Value);
		virtual ~CFullTemplateSpecializationClassSyntax(void) noexcept;
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<typename TType>
CFullTemplateSpecializationClassSyntax<TType>::CFullTemplateSpecializationClassSyntax(TType Value)
	: MValue(Value)
{
}
//----------------------------------------------------------------------------------------------------------------------
template<typename TType>
CFullTemplateSpecializationClassSyntax<TType>::~CFullTemplateSpecializationClassSyntax(void) noexcept
{
}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<typename TType>
void CFullTemplateSpecializationClassSyntax<TType>::Print(void) const
{
	std::wcout << L"SYNTAX - PRIMARY TEMPLATE CLASS - VALUE [" << MValue << L"]." << std::endl;
}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
// !!! Toto je TEMPLATE CLASS SPECIALIZATION.
template<>
class CFullTemplateSpecializationClassSyntax<void> final
{
//----------------------------------------------------------------------------------------------------------------------
	public:
		CString ToString(void) const;
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------