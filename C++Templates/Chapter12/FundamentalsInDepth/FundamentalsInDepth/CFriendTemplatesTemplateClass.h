//----------------------------------------------------------------------------------------------------------------------
#pragma once
//----------------------------------------------------------------------------------------------------------------------
#include <iostream>
#include "CFriendTemplatesClassMakingFriend.h"
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<typename TType>
class CFriendTemplatesTemplateClass final
{
//----------------------------------------------------------------------------------------------------------------------
	private:
		TType													MField;

	public:
		void Print(void) const;

	public:
		CFriendTemplatesTemplateClass(const TType& MField);
		virtual ~CFriendTemplatesTemplateClass(void) noexcept;
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<typename TType>
CFriendTemplatesTemplateClass<TType>::CFriendTemplatesTemplateClass(const TType& MField)
	: MField(MField)
{
}
//----------------------------------------------------------------------------------------------------------------------
template<typename TType>
CFriendTemplatesTemplateClass<TType>::~CFriendTemplatesTemplateClass(void) noexcept
{
}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<typename TType>
void CFriendTemplatesTemplateClass<TType>::Print(void) const
{
	CFriendTemplatesClassMakingFriend							Value(L"LOCAL");

	// !!!!! Ak je METHOD deklarovana ako FRIEND, moze pristupit k PRIVATE MEMBERS.
	std::wcout << L"TEMPLATE CLASS - LOCAL FIELD [" << MField << L"] REMOTE FIELD [" << Value.MField << L"]." << std::endl;
}
//----------------------------------------------------------------------------------------------------------------------