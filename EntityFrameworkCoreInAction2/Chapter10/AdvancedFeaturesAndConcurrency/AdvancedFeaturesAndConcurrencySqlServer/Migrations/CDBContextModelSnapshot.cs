// <auto-generated />
using AdvancedFeaturesAndConcurrencySqlServer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AdvancedFeaturesAndConcurrencySqlServer.Migrations
{
    [DbContext(typeof(CDBContext))]
    partial class CDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence("MySequence", "TestSchema")
                .StartsAt(1000L)
                .IncrementsBy(4);

            modelBuilder.Entity("AdvancedFeaturesAndConcurrencySqlServer.CEntityTableValuedFunctionResult", b =>
                {
                    b.Property<double>("DoubleValue")
                        .HasColumnType("float");

                    b.Property<int>("IntValue")
                        .HasColumnType("int");

                    b.Property<string>("StringValue")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("EntitiesTableValuedFunctionResult");
                });

            modelBuilder.Entity("AdvancedFeaturesAndConcurrencySqlServer.CEntityTimestampsDataAnnotations", b =>
                {
                    b.Property<int>("EntityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityID"));

                    b.Property<int>("EntityValue")
                        .HasColumnType("int");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("EntityID");

                    b.ToTable("EntitiesTimestampsDataAnnotations", (string)null);
                });

            modelBuilder.Entity("AdvancedFeaturesAndConcurrencySqlServer.CEntityTimestampsFluentAPI", b =>
                {
                    b.Property<int>("EntityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityID"));

                    b.Property<int>("EntityValue")
                        .HasColumnType("int");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("EntityID");

                    b.ToTable("EntitiesTimestampsFluentAPI", (string)null);
                });

            modelBuilder.Entity("AdvancedFeaturesAndConcurrencySqlServer.CEntityUsingSequence", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("SequenceValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR TestSchema.MySequence");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("EntitiesUsingSequence", (string)null);
                });

            modelBuilder.Entity("AdvancedFeaturesAndConcurrencySqlServer.CEntityUsingUDF", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<double>("DoubleValue")
                        .HasColumnType("float");

                    b.Property<int>("IntValue")
                        .HasColumnType("int");

                    b.Property<string>("StringValue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("EntitiesUsingUDF", (string)null);
                });

            modelBuilder.Entity("AdvancedFeaturesAndConcurrencySqlServer.CTestEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("TestEntities", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
