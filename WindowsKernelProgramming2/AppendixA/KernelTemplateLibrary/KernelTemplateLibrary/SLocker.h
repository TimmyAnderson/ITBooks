//----------------------------------------------------------------------------------------------------------------------
#pragma once
//----------------------------------------------------------------------------------------------------------------------
namespace KTL
{
//----------------------------------------------------------------------------------------------------------------------
	template<typename TLock>
	struct SLocker final
	{
//----------------------------------------------------------------------------------------------------------------------
		private:
			TLock&												MLock;

		public:
			SLocker(TLock& Lock);
			~SLocker(void) noexcept;
//----------------------------------------------------------------------------------------------------------------------
	};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
	template<typename TLock>
	SLocker<TLock>::SLocker(TLock& Lock)
		: MLock(Lock)
	{
		Lock.Lock();
	}
//----------------------------------------------------------------------------------------------------------------------
	template<typename TLock>
	SLocker<TLock>::~SLocker(void) noexcept
	{
		MLock.Unlock();
	}
//----------------------------------------------------------------------------------------------------------------------
}
//----------------------------------------------------------------------------------------------------------------------