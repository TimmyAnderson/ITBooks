//----------------------------------------------------------------------------------------------------------------------
#pragma once
//----------------------------------------------------------------------------------------------------------------------
#include <iostream>
#include "CMixinVirtualityMixinBase.h"
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
// !!!!! MIXIN DERIVED CLASS.
template<typename... TTypes>
class CMixinVirtualityMixinDerived : public CMixinVirtualityMixinBase<TTypes...>
{
//----------------------------------------------------------------------------------------------------------------------
	public:
		// !!! METHOD PROTOTYPE sa musi zhodovat s METHOD v CLASS [CMixinVirtualityClassVirtual] a CLASS [CMixinVirtualityMixinBase].
		// !!! KEYWORD [virtual] NIE JE aplikovny.
		void SomeVirtualMethod(void) const;
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<typename... TTypes>
void CMixinVirtualityMixinDerived<TTypes...>::SomeVirtualMethod(void) const
{
	std::wcout << L"METHOD [void CMixinVirtualityMixinDerived<TTypes...>::SomeVirtualMethod(void) const] CALLED !" << std::endl;
}
//----------------------------------------------------------------------------------------------------------------------