//----------------------------------------------------------------------------------------------------------------------
#pragma once
//----------------------------------------------------------------------------------------------------------------------
template<typename TType>
class CNoImmediateContext final
{
//----------------------------------------------------------------------------------------------------------------------
	public:
		using													Iterator=TType*;

	private:
		TType*													MStartPointer;
		TType*													MEndPointer;

	public:
		TType* GetStartPointer(void);
		TType* GetEndPointer(void);

	public:
		CNoImmediateContext(TType* StartPointer, TType* EndPointer);
		virtual ~CNoImmediateContext(void) noexcept;
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<typename TType>
CNoImmediateContext<TType>::CNoImmediateContext(TType* StartPointer, TType* EndPointer)
	: MStartPointer(StartPointer), MEndPointer(EndPointer)
{
}
//----------------------------------------------------------------------------------------------------------------------
template<typename TType>
CNoImmediateContext<TType>::~CNoImmediateContext(void) noexcept
{
}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<typename TType>
TType* CNoImmediateContext<TType>::GetStartPointer(void)
{
	return(MStartPointer);
}
//----------------------------------------------------------------------------------------------------------------------
template<typename TType>
TType* CNoImmediateContext<TType>::GetEndPointer(void)
{
	return(MEndPointer);
}
//----------------------------------------------------------------------------------------------------------------------