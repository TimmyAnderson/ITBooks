using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Components;
using Microsoft.AspNetCore.Components.Forms;
using Microsoft.AspNetCore.Components.Web;
using BlazorForms.Model;
//----------------------------------------------------------------------------------------------------------------------
namespace BlazorForms.Blazor
{
//----------------------------------------------------------------------------------------------------------------------
    public partial class CustomSelectComponentWrapper : ComponentBase
    {
//----------------------------------------------------------------------------------------------------------------------
		private Dictionary<string,ESex>							MValues=CreateValues();
		private ESex											MSelectedValue;
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
		public Dictionary<string,ESex>							Values
		{
			get
			{
				return(MValues);
			}
			set
			{
				MValues=value;
			}
		}
//----------------------------------------------------------------------------------------------------------------------
		public ESex												SelectedValue
		{
			get
			{
				return(MSelectedValue);
			}
			set
			{
				MSelectedValue=value;
			}
		}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
		public static Dictionary<string,ESex> CreateValues()
		{
			Dictionary<string,ESex>								Values=new Dictionary<string,ESex>();

			Values.Add("Male",ESex.Male);
			Values.Add("Female",ESex.Female);

			return(Values);
		}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
		public ESex Parser(string Value)
		{
			if (Value=="Male")
			{
				return(ESex.Male);
			}
			else if (Value=="Female")
			{
				return(ESex.Female);
			}
			else
			{
				throw(new InvalidOperationException($"UNSUPPORTED VALUE [{Value}] !"));
			}
		}
//----------------------------------------------------------------------------------------------------------------------
    }
//----------------------------------------------------------------------------------------------------------------------
}
//----------------------------------------------------------------------------------------------------------------------