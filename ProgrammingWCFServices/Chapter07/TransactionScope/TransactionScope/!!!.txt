//-------------------------------------------------------------------------------------------------------
1. Solution demonstruje pouzitie TransactionScope.
2. Transakcia moze skoncit chybou aj pri volani Dispose(), pretoze prave vtedy sa robi Commit transakcie.
3. Ak mam vnorene 2 transakcie obe musia robit voting inak transakcia bude Rollbacknuta.
4. Vnorenie moze byt realizovane aj pri volani metody, ktora obsahuje TransactionScope ak toto volanie je tiez v TransactionScope.
5. Nastavenie TransactionScopeOption.Required znamena, ze vnorena transakcia sa zapoji do vonkajsej.
6. Nastavenie TransactionScopeOption.RequiresNew znamena, ze vnorena sa vytvori nova transakcia, ktora nema nic spolocna s tou vonkajsou.
7. Nastavenie TransactionScopeOption.Suppress znamena, ze vnoreny blok TransactionScope nema abmientnu transakciu a nemusi ani robit voting. Sluzi na tie casti kodu, ktore neobsahuju transakcny kod v ramci transakcie, alebo chcem robit vlastnu transakciu, ktora je nezavisla na TransactionScope. Takato transakcia v ramci TransactionScopeOption.Suppress nema nic spolocne s tou vonkajsou ani nenastavuje ambientu transakciu. Je uplne nezavisla.
8. Transakcia medzi KONSTRUKTOROM TransactionScope a volanim Dispose() musi skoncit do maximalneho casu trvania transakcie. Ak prekroci sa cas potom skonci transakcia Rollback. Aj ked sa zavola Scope.Complete() a po nom pretecie timeout tak sa pri ukonceni TransactionScope - volani Dispose() dojde k Rollback a TransactionAbortedException.
//-------------------------------------------------------------------------------------------------------