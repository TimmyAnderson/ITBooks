//----------------------------------------------------------------------------------------------------------------------
#pragma once
//----------------------------------------------------------------------------------------------------------------------
#include <string>
#include <sstream>
//----------------------------------------------------------------------------------------------------------------------
// !!! TEMPLATE ma 1. TEMPLATE TYPE PARAMETER a 2. TEMPLATE NON-TYPE PARAMETER.
template<typename TType, int VALUE>
class CTemplateTemplateArguments3 final
{
//----------------------------------------------------------------------------------------------------------------------
	private:
		TType													MField;

	public:
		std::wstring ToString(void) const;

	public:
		CTemplateTemplateArguments3(TType Field);
		virtual ~CTemplateTemplateArguments3(void) noexcept;
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<typename TType, int VALUE>
CTemplateTemplateArguments3<TType,VALUE>::CTemplateTemplateArguments3(TType Field)
	: MField(Field)
{
}
//----------------------------------------------------------------------------------------------------------------------
template<typename TType, int VALUE>
CTemplateTemplateArguments3<TType,VALUE>::~CTemplateTemplateArguments3(void) noexcept
{
}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<typename TType, int VALUE>
std::wstring CTemplateTemplateArguments3<TType,VALUE>::ToString(void) const
{
	std::wstringstream											Stream;

	Stream << "TEMPLATE TEMPLATE ARGUMENTS 3 - FIELD [" << MField << L"] VALUE [" << VALUE << L"].";

	return(Stream.str());
}
//----------------------------------------------------------------------------------------------------------------------