<div class="OUTER_BOX">
	<table class="table table-bordered table-striped">
		<tr>
			<th>ID</th>
			<th>First name</th>
			<th>Last name</th>
			<th>Age</th>
			<th>Sex</th>
		</tr>

		@foreach(CChild Child in Children)
		{
			<!-- !!! Ak sa SEX zhoduje so SELECTED SEX, tak sa zmeni farba celeho riadku. -->
			<tr class="@GetClass(Child.Sex)">
				<td>
					[@Child.ID]
				</td>
						
				<td>
					[@Child.FirstName]
				</td>
						
				<td>
					[@Child.LastName]
				</td>
						
				<td>
					[@Child.Age]
				</td>
						
				<td>
					[@Child.Sex] !
				</td>
			</tr>
		}
	</table>
</div>

<!-- !!! Do PARENT BLAZOR COMPONENT sa vlozi CHILD BLAZOR COMPONENT. -->
<!-- !!! PARENT BLAZOR COMPONENT vykona BINDING na PROPERTY 'SelectedValue' CHILD BLAZOR COMPONENT. -->
<!-- !!!!! BINDING C# PROPERTY 'SelectedSex' PARENT BLAZOR COMPONENT na PROPERTY 'SelectedValue' CHILD BLAZOR COMPONENT zabezpeci to, ze zmena C# PROPERTY 'SelectedValue' CHILD BLAZOR COMPONENT sa OKAMZITE PRENESIE do C# PROPERTY 'SelectedSex' PARENT BLAZOR COMPONENT. -->
<CustomBindingChild ValueName="Sex" Values="@GetSexes()" @bind-SelectedValue="SelectedSex"></CustomBindingChild>

<div class="OUTER_BOX">
	<!-- !!! BUTTONS prezentuju funkciu 2 WAY BINDING, kedy zmena VALUE C# PROPERTY PARENT BLAZOR COMPONENT sa prenesie do C# PROPERTY CHILD COMPONENT, na ktoru je C# PROPERTY PARENT COMPONENT BOUND. -->
	<button class="btn btn-primary" @onclick="SetSexToMale">Set SEX to MALE</button>
	<button class="btn btn-primary" @onclick="SetSexToFemale">Set SEX to FEMALE</button>
</div>