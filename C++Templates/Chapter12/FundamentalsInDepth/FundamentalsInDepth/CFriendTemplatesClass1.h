//----------------------------------------------------------------------------------------------------------------------
#pragma once
//----------------------------------------------------------------------------------------------------------------------
#include <iostream>
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
class CFriendTemplatesClassMakingFriend;
//----------------------------------------------------------------------------------------------------------------------
template<typename TType>
class CFriendTemplatesClass final
{ 
//----------------------------------------------------------------------------------------------------------------------
	private:
		TType													MField;

	public:
		void Print1(const CFriendTemplatesClassMakingFriend& Value) const;
		void Print2(void) const;

	public:
		CFriendTemplatesClass(const TType& Field);
		virtual ~CFriendTemplatesClass(void) noexcept;
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<typename TType>
CFriendTemplatesClass<TType>::CFriendTemplatesClass(const TType& Field)
	: MField(Field)
{
}
//----------------------------------------------------------------------------------------------------------------------
template<typename TType>
CFriendTemplatesClass<TType>::~CFriendTemplatesClass(void) noexcept
{
}
//----------------------------------------------------------------------------------------------------------------------