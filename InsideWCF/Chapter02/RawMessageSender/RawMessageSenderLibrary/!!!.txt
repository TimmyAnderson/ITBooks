//---------------------------------------------------------------------------------------------------------------------------------
1. Solution ukazuje zaslanie custom MESSAGE.
2. Solution demonstruje posielanie RAW MESSAGES. Trieda Message je jedinym parametrom operacie vystaveneho CONTRACT.
3. Pri prenose MESSAGES v SOA systemoch existuju 3 typy ucastnikov.
   A. SEDNER - je CLIENT, ktory odosiela MESSAGE.
   B. INTERMEDIARY - je jedna, alebo viacero vrstiev zabezpecujucich prenos MESSAGE do RECEIVER.
   C. RECEIVER - je SERVICE, ktora prijima MESSAGE.
4. Kazda SOAP MESSAGE sa sklada z nasledujucich casti.
   A. ENVELOPE - XML ROOT ELEMENT, ktory obsahuje HEADERS a BODY.
   !!! B. HEADER - je to 1. SUBELEMENT ENVELOPE. Obsahuje data potrebne pre SPRACOVANIE MESSAGE medzi ktore patria ADRESA, ROUTING informacie, SECURITY informacie, TRANSACTION informacie a mnozstvo dalsich informacii. KAZDA INTERMEDIARY vrstva moze PRIDAVAT, alebo MENIT IBA TIE HEADERS, ktore su PRE NU URCENE. Ine NESMIE MODIFIKOVAT.
   C. BODY - je samotny OBSAH MESSAGE a obsahuje PARAMETRE METODY, alebo NAVRATOVU HODNOTU METODY, ktora sa na SERVICE ma volat, alebo v pripade RESPOSNE bola zavolana.
!!! 5. XML INFOSET urcuje na rozdiel od XML presnu specifikaciu ako moze XML dokument vyzarat. NEOBSAHUJE napriklad PRESNE KODOVANIE, ktore by sa MUSELO POUZIT, ale definuje presne pravidla ako ma XML dokument reprezentujuci XML INFOSET obsahovat. Sem patria napriklad nasledujuce pravidla.
   A. XML dokument ma JEDINY DOKUMENT INFORMATION ITEM, ktory obsahuje CHILDREN, DOCUTMENT TYPE, NOTATIONS, VERSION a hlavne ROOT ELEMENT, ktory sa nazyva DOKUMENT ELEMENT.
   B. ELEMENT obsahuje NAMESPACE, LOCAL NAME, PREFIX, CHILDREN, ATTRIBUTES, PARENT.
   C. ATTRIBUTE obsahuje NAMESPACE, LOCAL NAME, PREFIX, VALUE, PARENT ELEMENT.
   !!! D. Tieto a dalsie definicie su sucastou XML INFOSET a NIE SAMOTNEHO XML.
!!! 6. XML INFOSET je teda WELL-DEFINED XML DOKUMENT, ktory splna pravidla definovane XML INFOSET.
!!! 7. SOAP 1.2. uz PODPORUJE XML INFOSET, zatial co SOAP 1.1. INFOSET este NEPODPOROVAL.
8. WCF podporuje 3 rozlicne typy kodovania v ktorych je mozne ukladat SOAP spravy.
   A. Textove kodovanie - pouziva na kodovanie klasicky UNICODE. Data su teda kodovane v textovom formate a ak chcem preniest BINARNE DATA, mozem pouzit 'Base64Binary' XSD datovy typ.
   B. Binarne kodovanie - pouziva na kodovanie XML INFOSET BINARNY FORMAT, ktory je VYSOKO EFEKTIVNY, avsak zatial NEBOL STANDARDIZOVANY.
   C. MTOM - pouziva kodovanie zalozene na standarde MTOM. Tym, ze MTOM je STANDARD, je mozne ho pouzit aj pri komunikacii s NON-WCF aplikaciami. Vyhodou MTOM je, ze umoznuje EFEKTIVNEJSIE uklada BINARNE DATA ako TEXTOVE KODOVANIE a zaroven JE STANDARDOM.
!!! 9. Message MOZEM ZAPISAT IBA RAZ. Potom uz ma stav Written a nie je mozne ju znova zapisat. Je jedno kam sa bude zapisovat, ci na konzolu, alebo do suboru, ale moze sa zapisat IBA RAZ.
!!! 10. Message na klientovi neobsahuje vsetky headery. Rozdiely su nasleldovne.
   A. Klientsky Message neobsahuje <ReplyTo>.
   B. Klientsky Message neobsahuje <To>.
   C. Service ich obe obsahuje. Ine rozdiely tam nie su.
   ??? D. Pravdepodobne si tieto dve headers doplna WCF.
11. SERVICE je vo WS-Addressing adresovany pomocou XML ELEMENTU 'EndpointReference', ktore ma nasledujuce SUBELEMENTS.
   A. Address.
   B. ReferenceProperties.
   C. ReferenceParameters.
   D. PortyType.
   E. ServiceName.
   F. Policy.
12. MESSAGE HEADERS vo WCF obsahuju nasledujuce SUBELEMENTS.
   A. MessageID.
   B. RelatesTo.
   !!! C. To - je typu URI. je to ROZDIEL oproti From, ReplyTo a FaultTo, ktore su typu EndpointReference.
   D. Action.
   E. From - je typu EndpointReference.
   F. ReplyTo - je typu EndpointReference.
   G. FaultTo - je typu EndpointReference.
!!! 13. SUBELEMENT 'To' NIE JE TYPU 'EndpointReference' kvoli sposobu ako je 'To' SERIALIZOVANE, kde 'To' je SERIALIZOVANY ako dalsi SUBELEMENT v MESSAGE HEADERS.
!!! 14. Contract sa vo WCF definuje pomocou .NET INTERFACE, ktory je oznaceny atributom [ServiceContract]. Tento INTERFACE WCF transformuje do podoby WSDL.
//---------------------------------------------------------------------------------------------------------------------------------