//-------------------------------------------------------------------------------------------------------
#include "Base1.h"
//-------------------------------------------------------------------------------------------------------
using namespace std;
//-------------------------------------------------------------------------------------------------------
CBase1::CBase1(wstring SharedName)
	: MSharedName(SharedName), CBase(L"CBase - " + SharedName)
{
}
//-------------------------------------------------------------------------------------------------------
CBase1::~CBase1(void)
{
}
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------
void CBase1::NotOverrided(void)
{
	wprintf_s(L"CBase1 - NotOverrided() CALLED !\n");
}
//-------------------------------------------------------------------------------------------------------
void CBase1::Overrided(void)
{
	wprintf_s(L"CBase1 - Overrided() CALLED !\n");
}
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------
void CBase1::Ambiguity1(int Value)
{
	wprintf_s(L"CBase1 INT - Ambiguity1() with PARAM [%d] CALLED !\n",Value);
}
//-------------------------------------------------------------------------------------------------------
void CBase1::Ambiguity2(int Value)
{
	wprintf_s(L"CBase1 INT - Ambiguity2() with PARAM [%d] CALLED !\n",Value);
}
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------
void CBase1::Virtual2(void)
{
	wprintf_s(L"CBase1 - Virtual2() CALLED !\n");
}
//-------------------------------------------------------------------------------------------------------
void CBase1::Virtual3(void)
{
	wprintf_s(L"CBase1 - Virtual3() CALLED !\n");
}
//-------------------------------------------------------------------------------------------------------