using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
//----------------------------------------------------------------------------------------------------------------------
namespace DataAccess3Web
{
//----------------------------------------------------------------------------------------------------------------------
    public sealed class CDBContext2 : DbContext
    {
//----------------------------------------------------------------------------------------------------------------------
		private DbSet<CEntityName>								MEntitiesNames;
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
		public CDBContext2(DbContextOptions<CDBContext2> Options)
			: base(Options)
		{
			Console.WriteLine($"!!!!!!!!!! DB CONTEXT 2 [{this.ContextId.InstanceId}] CREATED.");
		}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
		public DbSet<CEntityName>								EntitiesNames
		{
			get
			{
				return(MEntitiesNames);
			}
			set
			{
				MEntitiesNames=value;
			}
		}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
		private void ConfigureEntityNames(ModelBuilder ModelBuilder)
		{
			ModelBuilder.Entity<CEntityName>().ToTable("EntitiesNames");

			ModelBuilder.Entity<CEntityName>().HasKey(P => P.ID);
		}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
		protected override void OnModelCreating(ModelBuilder ModelBuilder)
		{
			ConfigureEntityNames(ModelBuilder);

			EntityTypeBuilder<CEntityName>						Entity=ModelBuilder.Entity<CEntityName>();

			List<CEntityName>									Names=new List<CEntityName>();

			Names.Add(new CEntityName(1,"Timmy","Anderson",12));
			Names.Add(new CEntityName(2,"Jenny","Thompson",13));

			Entity.HasData(Names);
		}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
		public override void Dispose()
		{
			base.Dispose();

			Console.WriteLine($"!!!!!!!!!! DB CONTEXT 2 [{this.ContextId.InstanceId}] DISPOSED.");
		}
//----------------------------------------------------------------------------------------------------------------------
		public override ValueTask DisposeAsync()
		{
			ValueTask											Result=base.DisposeAsync();

			Console.WriteLine($"!!!!!!!!!! DB CONTEXT 2 [{this.ContextId.InstanceId}] DISPOSED ASYNCHRONOUSLY.");

			return(Result);
		}
//----------------------------------------------------------------------------------------------------------------------
    }
//----------------------------------------------------------------------------------------------------------------------
}
//----------------------------------------------------------------------------------------------------------------------