<Window x:Class="XAMLConverter.MainWindow"
    xmlns:local="clr-namespace:XAMLConverter"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:z="http://www.microsoft.com/windowssdk/2007/xaml"
    Title="XAMLConverter" Height="300" Width="500">
  <Window.Resources>
    <!-- Tu sa pouziju CUSTOM Converters. -->
    <z:CMyCustomClassMaster x:Key="MMyCustomClass1" SlaveValue1="AAA" SlaveValue2="BBB"/>
    <!-- Aj tu sa pouzivaju CUSTOM Converters. -->
    <!-- Zaroven pouzivam komplexnu syntax, ale nie az na nastavenie CMyCustomClassSlave1 a CMyCustomClassSlave2. -->
    <z:CMyCustomClassMaster x:Key="MMyCustomClass2">
      <!-- Nastavujem property SlaveValue1. -->
      <z:CMyCustomClassMaster.SlaveValue1>
      <!-- !!! Tu vsak hodim iba STRING a nie instanicu CMyCustomClassSlave1 A PRETO SA MUSI POUZIT CUSTOM CONVERTER. -->
        CCC
      </z:CMyCustomClassMaster.SlaveValue1>
      <!-- Nastavujem property SlaveValue2. -->
      <z:CMyCustomClassMaster.SlaveValue2>
        <!-- !!! Tu vsak hodim iba STRING a nie instanicu CMyCustomClassSlave2 A PRETO SA MUSI POUZIT CUSTOM CONVERTER. -->
        DDD
      </z:CMyCustomClassMaster.SlaveValue2>
    </z:CMyCustomClassMaster>
    <!-- !!! TU SA NEPOUZIVA CUSTOM CONVERTER. -->
    <!-- Pouzivam tu komplexnu syntax na nastavenie CMyCustomClassSlave1 a CMyCustomClassSlave2. -->
    <z:CMyCustomClassMaster x:Key="MMyCustomClass3">
      <!-- Nastavujem property SlaveValue1. -->
      <z:CMyCustomClassMaster.SlaveValue1>
        <!-- Kedze vytvorim obejkt typu CMyCustomClassSlave1 (cez dafault konstruktor a nastavenie property SlaveValue) tak sa CUSTOM CONVERTER NEPOUZIVA. -->
        <z:CMyCustomClassSlave1 SlaveValue="EEE"/>
      </z:CMyCustomClassMaster.SlaveValue1>
      <!-- Nastavujem property SlaveValue2. -->
      <z:CMyCustomClassMaster.SlaveValue2>
        <!-- Kedze vytvorim obejkt typu CMyCustomClassSlave2 (cez dafault konstruktor a nastavenie property SlaveValue) tak sa CUSTOM CONVERTER NEPOUZIVA. -->
        <z:CMyCustomClassSlave2 SlaveValue="FFF"/>
      </z:CMyCustomClassMaster.SlaveValue2>
    </z:CMyCustomClassMaster>
    <!-- Pouzivam tu komplexnu syntax na nastavenie CMyCustomClassSlave1 a CMyCustomClassSlave2. -->
    <z:CMyCustomClassMaster x:Key="MMyCustomClass4">
      <!-- Nastavujem property SlaveValue1. -->
      <z:CMyCustomClassMaster.SlaveValue1>
        <!-- Kedze vytvorim obejkt typu CMyCustomClassSlave1 (cez dafault konstruktor a nastavenie property SlaveValue) tak sa CUSTOM CONVERTER NEPOUZIVA. -->
        <z:CMyCustomClassSlave1>
        <!-- !!! Tu sa musi pouzit TypeConverter pre CMyCustomClassSlave1 (CMyCustomClassSlaveConverter1). -->
          GGG
        </z:CMyCustomClassSlave1>
      </z:CMyCustomClassMaster.SlaveValue1>
      <!-- Nastavujem property SlaveValue2. -->
      <z:CMyCustomClassMaster.SlaveValue2>
        <!-- Kedze vytvorim obejkt typu CMyCustomClassSlave2 (cez dafault konstruktor a nastavenie property SlaveValue) tak sa CUSTOM CONVERTER NEPOUZIVA. -->
        <!-- !!! Tu sa musi pouzit TypeConverter pre CMyCustomClassSlave1. -->
        <!-- !!!!! Ten sice MAM IMPLMENTOVANY, ale je ascoiovany nie s triedou, ale property CMyCustomClassMaster.CMyCustomClassSlave2 a PRETO HO WPF nepozna. -->
        <!-- !!!!! Aby ho sponzal musel by som CUSTOM CONVERTER (CMyCustomClassSlaveConverter2) asociovat s celou triedou CMyCustomClassSlave2. -->
        <!--z:CMyCustomClassSlave2>
          HHH
        </z:CMyCustomClassSlave2-->

        <!-- !!! Preto pouzivam klasicku deklaraciu. -->
        <z:CMyCustomClassSlave2 SlaveValue="HHH"/>
      </z:CMyCustomClassMaster.SlaveValue2>
    </z:CMyCustomClassMaster>

    <z:CMyCustomClassMaster x:Key="MMyCustomClass5" SlaveValue1="{z:CMyXXX1Custom Hello}" SlaveValue2="{z:CMyXXX2Custom World}"/>

  </Window.Resources>
  <StackPanel>
    <Label Content="{StaticResource MMyCustomClass1}"/>
    <Label Content="{StaticResource MMyCustomClass2}"/>
    <Label Content="{StaticResource MMyCustomClass3}"/>
    <Label Content="{StaticResource MMyCustomClass4}"/>
    <Label Content="{StaticResource MMyCustomClass5}"/>
    <!-- Pouzije sa konstruktor, ktoreho pocet parametrov musi sediet s poctom ktory dam tu. -->
    <Label Content="{z:CMyXXX1Custom Hello}"/>
    <Label Content="{z:CMyXXX2Custom World}"/>
    <!-- Pouzije sa DEFAULT konstruktor a explicitne nastavim Property. -->
    <Label Content="{z:CMyXXX1Custom Value=Hello World}"/>

    <Button Content="Button">
      <Button.Foreground>
        <!-- !!! Alternativna deklaracia MarkupExtension vyuzivajuca to, ze aj StaticExtension je trieda a teda ju deklarujem ako objekt. -->
        <x:Static Member="SystemColors.DesktopBrush"></x:Static>
      </Button.Foreground>
    </Button>
  </StackPanel>
</Window>