//----------------------------------------------------------------------------------------------------------------------
1. Solution demonstruje ako su implementovane ASYNCHONOUS IO METHODS.
2. ASYNCHONOUS IO METHODS su implementovane nasledovne.
   A. ASYNCHONOUS IO METHOD vytvori instanciu CLASS [Task], ktory sa spusti PO DOKONCENI IO OPERATION.
   B. ASYNCHONOUS IO METHOD spusti vykonavanie ASYNCHRONOUS IO OPERATION pomocou WIN32 API pricom zaregistruje CALLBACK FUNCTION, ktora bude mat ako PARAMETER instanciu CLASS [Task].
   !!! C. ASYNCHONOUS IO METHOD vrati NESPUSTENU instanciu CLASS [Task] ako RETURN VALUE.
   D. CODE, ktory volal ASYNCHONOUS IO METHOD moze na instanciu CLASS [Task] naviazat vlastne TASK pomocou niektorej z METHODS [ContinueWith()].
   E. Ked ASYNCHRONOUS IO OPERATION na WIN32 API skonci, spusti sa CALLBACK FUNCTION, ktora ma ako PARAMETER instanciu CLASS [Task].
   !!! F. CALLBACK FUNCTION ukonci ASYNCHRONOUS IO OPERATION a SPUSTI instanciu CLASS [Task], ktory vysledok ASYNCHRONOUS IO OPERATION vrati ako RETURN VALUE.
   !!! G. Nasledne sa moze spustit instancia CLASS [Task], ktora bol zaregistrovana pomocou pomocou niektorej z METHODS [ContinueWith()], aby spracoval vysledky ASYNCHONOUS IO OPERATION.
//----------------------------------------------------------------------------------------------------------------------