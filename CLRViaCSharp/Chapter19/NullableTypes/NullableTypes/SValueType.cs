using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
//-------------------------------------------------------------------------------------------------------
namespace NullableTypes
{
//-------------------------------------------------------------------------------------------------------
	public struct SValueType : IComparable<SValueType>
	{
//-------------------------------------------------------------------------------------------------------
		private int												MInt;
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------
		public SValueType(int Int)
		{
			MInt=Int;
		}
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------
		public int												Int
		{
			get
			{
				return(MInt);
			}
		}
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------
		public static bool operator==(SValueType Value1, SValueType Value2)
		{
			Console.WriteLine("OPERATOR== CALLED !");

			if (Value1.MInt==Value2.MInt)
			{
				return(true);
			}
			else
			{
				return(false);
			}
		}
//-------------------------------------------------------------------------------------------------------
		public static bool operator!=(SValueType Value1, SValueType Value2)
		{
			Console.WriteLine("OPERATOR!= CALLED !");

			if (Value1.MInt!=Value2.MInt)
			{
				return(true);
			}
			else
			{
				return(false);
			}
		}
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------
		public int CompareTo(SValueType Other)
		{
			return(MInt.CompareTo(Other.MInt));
		}
//-------------------------------------------------------------------------------------------------------
		public override bool Equals(object Obj)
		{
			if (Obj.GetType()!=typeof(SValueType))
			{
				return(false);
			}

			SValueType											TypedObj=(SValueType) Obj;

			return(this==TypedObj);
		}
//-------------------------------------------------------------------------------------------------------
		public override int GetHashCode()
		{
			return(MInt);
		}
//-------------------------------------------------------------------------------------------------------
	}
//-------------------------------------------------------------------------------------------------------
}
//-------------------------------------------------------------------------------------------------------