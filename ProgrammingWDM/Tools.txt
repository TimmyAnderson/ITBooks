DBGView.exe

1. Bol vytvoreny SYS INTERNALS.
2. Umoznuje prezerat KERNEL LOGS.
3. Pomocou Capture->Log Boot je mozne nastavit mod, kedy sa zapisu KERNEL LOGS od RESTARTU PC. To umoznuje prezeranie KERNEL LOGS vytvorenych pocase SYSTEM BOOT.

WinObj.exe

1. Bol vytvoreny SYS INTERNALS.
2. Umoznuje prezerat SYSTEM OBJECTS.

CODE ANALYSIS

1. Je sucastou VISUAL STUDIO.
2. Spusta sa pomocou prikazu [Build->Run Code Analysis on Solution].
3. Vysledky sa zobrazia v [Code Analysis] WINDOW, ktore je mozne zobrazit pomocou prikazu [View->Other Windows->Code Analysis].
!!! 4. POZOR. Spustenie CODE ANALYSIS moze spustit instalaciu DRIVER, aj ked nastaveny DEPLOYMENT na PACKAGE PROJECT.
!!! 5. Po uspesnom vykonani CODE ANALYSIS je mozne spustit STATIC VERIFIER.

Verifier.exe

1. Umoznuje testovat DRIVER.
2. Je spustany na GUEST SYSTEM, kde je nainstalovany DRIVER, ktory sa ma testovat.
3. Po spusteni BEZ COMMAND LINE OPTIONS je mozne v GUI nastavit testovaciu proceduru.
!!! 4. V GUI VERIFIER sa pomocou OPTION [Create custom settings (for code developers)] sa vytvare TESTOVACI SETTINGS, ktory sa spusti Az PO RESTART GUEST SYSTEM.
!!!!! 5. Testovacia procedura bezi az kym sa EXPLICITE NEODSTRANI spustenim Verifier.exe a vybratim OPTION [Delete existing settings].
!!! 6. Pomocou OPTION [Display information about the currently verified drivers] (alternativne COMMAND LINE OPTION [/query]) zobrazi VYSLEDOK TESTOVANIA, ktore AKUTALNE BEZI.
!!! 7. Ak je nakonfigurovana simulacia LOW RESOURCES, tak po 8 MINUTACH od vykonania BOOT bude VERIFIER NAHODNE generovat CHYBY ALOKACIE MEMORY. 8 MINUT je standardna doba, ktora sluzi, aby system mal cas korektne nabehnut.
!!!!! 8. VERIFIER je schopny kontrolovat MEMORY LEAKS. Tieto sa detekuju pri ODSTRANOVANI DRIVER z MEMORY, napriklad pri DISABLE daneho DRIVER. Pritomnost MEMORY LEAK je mozne simulovat nasledovne.
   A. Zapne sa VERIFIER s detekciou MEMORY POOLS.
   B. V DRIVER sa vyvola CODE u ktoreho je podozrenie na vznik MEMORY LEAKS.
   !!! C. V DEVICE MANAGER sa spravi DISABLE daneho DRIVER. Ak doslo k MEMORY LEAK, tak VERIFIER vygeneruje BUG CHECK.

MSInfo32.exe

1. Umoznuje zistit systemove informacie o PC.
2. Umoznuje ziskat informacie o IRP, DMA, MEMORY, HW a SW COMPONENTS.

DevCon.exe

1. Umoznuje instalovat, odinstalovat, zapnut ci vypnut DEVICE DRIVERS.
2. COMMAND [DevCon.exe hwids *] umoznuje ziskat HARDWARE ID (HW_ID) pre dany DRIVER. Ten je nasledne mozne pouzit v inych COMMANDS.
3. COMMAND [DevCon.exe enable HW_ID], kde HW_ID je HARDWARE ID (napriklad Root\SynchronizationDriver) daneho DRIVER umoznuje ZAPNUT VYPNUTY DRIVER.
4. COMMAND [DevCon.exe disable HW_ID], kde HW_ID je HARDWARE ID (napriklad Root\SynchronizationDriver) daneho DRIVER umoznuje VYPNUT ZAPNUTY DRIVER.
5. COMMAND [DevCon.exe remove HW_ID], kde HW_ID je HARDWARE ID (napriklad Root\SynchronizationDriver) daneho DRIVER odinstaluje DRIVER.
6. COMMAND [DevCon.exe install INFFile.INF HW_ID], kde INFFile.INF je PATH k .INF FILE a HW_ID je HARDWARE ID (napriklad Root\SynchronizationDriver) daneho DRIVER odinstaluje DRIVER.
!!!!! 7. HW_ID NEMOZE BYT HOCIJAKY STRING, ale musi mat presny format, napriklad [Root\SynchronizationDriver], ktory zodpoveda nazvu DRIVER v .INF FILE.