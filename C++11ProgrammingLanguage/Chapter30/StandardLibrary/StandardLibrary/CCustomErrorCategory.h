//-------------------------------------------------------------------------------------------------------
#pragma once
//-------------------------------------------------------------------------------------------------------
#include <system_error>
#include "ECustomErrorCode.h"
#include "ECustomErrorCondition.h"
//-------------------------------------------------------------------------------------------------------
using namespace std;
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------
namespace std
{
//-------------------------------------------------------------------------------------------------------
	// !!!!! CUSTOM SPECIALIZATION TEMPLATE MUSI byt v NAMESPACE [std].
	// !!! CUSTOM TEMPLATE SPECIALIZATION, ktore urcuje ci CUSTOM ENUM je validny ERROR CODE.
	template<>
	struct is_error_code_enum<ECustomErrorCode> : public true_type
	{
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------
	};
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------
	// !!!!! CUSTOM SPECIALIZATION TEMPLATE MUSI byt v NAMESPACE [std].
	// !!! CUSTOM TEMPLATE SPECIALIZATION, ktore urcuje ci CUSTOM ENUM je validny ERROR CONDITION.
	template<>
	struct is_error_condition_enum<ECustomErrorCondition> : public true_type
	{
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------
	};
//-------------------------------------------------------------------------------------------------------
}
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------
error_code make_error_code(ECustomErrorCode ErrorCode);
error_condition make_error_condition(ECustomErrorCondition ErrorCondition);
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------
class CCustomErrorCategory : public error_category
{
//-------------------------------------------------------------------------------------------------------
	public:
		static const CCustomErrorCategory						CATEGORY;

	public:
		virtual const char* name(void) const noexcept override;
		virtual string message(int ErrorCondition) const override;
		// Mapuje ERROR CODE na ERROR CONDITION.
		virtual error_condition default_error_condition(int Code) const noexcept override;
		virtual bool equivalent(int Code, const error_condition& Condition) const noexcept override;
		virtual bool equivalent(const error_code& Code, int Condition) const noexcept override;

	public:
		CCustomErrorCategory(void);
		virtual ~CCustomErrorCategory(void) override;
//-------------------------------------------------------------------------------------------------------
};
//-------------------------------------------------------------------------------------------------------