//-----------------------------------------------------------------------------------------------------------------
1. Program demonstruje pouzitie XAML.
2. XAML je rozsirenim WPF, ktore umoznuje jednoduchym sposobom v XML formate definovat LAYOUT WINDOW - teda jednotlive ELEMENTS a ich umiestnenie na Window.
!!! 3. XAML sa pouziva na VYTVORENIE OBSAHU WINDOW a tym padom dokaze nahradit RUCNE VYTVARANIE C# OBJEKTOV reprezentujucich ELEMENTS na Window. Vdaka XMAL je mozne oddelit vizualny design Windows od ich business logiky.
4. XAML je specialny typ XML s vlastnou schemou, ktory pouziva ako kazdy XML namespaces, element a attributes.
!!! 5. XAML parser, ktory je sucastou WPF dokaze transformovat XAML do C# kodu, ktory vytvori objekty reprezenujuce ELEMENTS a naviaze i EVENTS v C# kode.
!!! 6. Subor typu .XAML je mozne spustit vdaka tomu, ze Windows ma s .XAML suborom asociovany program PresentationHost.exe, ktory XAML subor parsuje, spusti IE a v nom zobrazi obzah XAML uz i s vytvorenim OBJEKTOV .NET. Tato funkcionalita sa s vyhodou da pouzit na zobrazenie vizualnej stranky XAML suboru.
7. XAML subor moze byt umiestneny i na Web server, ale musi byt povoleny aby .XAML subor Web server posielal na klienta.
!!!!! 8. Ako ROOT v XAML, ktory ma byt zobrazeny cez PresentationHost.exe NESMIE BYT objekt Window, pretoze PresentationHost.exe zobrazuje ROOT XAML dokumentu ako CHILD svojho PARENT ELEMENT a Window NEMOZE BYT NIKDY AKO CHILD INEHO ELEMENTU. Vyhodne je pouzit Page, ktora ma property WindoTitle, ktory umoznuje zobrazit CUSTOM TITLE.
!!! 9. WPF obsahuje triedu XamlReader, ktora umznuje CITAT a ZAPISOVAT XAML SUBOR. Pri citani VYTVROI HIERARCHIU ELEMENTS (objektov typu FrameworkElement), ktore je mozne zobrazit v nejakom PARENT ELEMENT - napriklad Window.
!!! 10. XAML subor je VYHODNE ULOZIT AKO RESOURCE - nastavit na subor kompilacny priznak Resource a potom pomocou metody Application.GetResourceStream() ziskat STREAM na RESOURCE, ktory je nasledne mozne nacitat volanim XamlReader.Load().
!!! 11. Ak mae subor .XAML nastaveny kompilacny priznak na Page, tak sa XAML KOMPILUJE pomocou XAML kompilatora, ktory vytvara BAML - BINARNY XAML a zaroven i .CS subor s deklaraciami premennych (podla hodnoty parametru Name daneho ELEMENTU v XAML subore) a triedu, ktorej meno je zhodne s menom uvedenym v parametri Class v ROOT ELEMENTE. Vygenerovana trieda DEDI z ROOT ELEMENTU. Ak je ROOT ELEMENT Window, tak .CS subor vytvori triedu, ktora dedi z Window.
!!! 12. Pri generovani .CS z XAML (pri jeho kompilacii) je generovana v .CS subore i metoda InitializeComponent(), ktora NACITA BAML a takisto inicializuje MEMBERS na instancie objektov typu ELEMENT.
13. V XAML mozem pouzivat i CUSTOM CLASSES, ale musim deklarovat XML NAMESPACE s prefixom 'clr-namespace'.
14. Subor .XAML NEMUSI obsahovat iba Window, ale moze reprezentovat i MENSIU CAST GUI - napriklad USER CONTROL, alebo obycajny CUSTOM ELEMENT. K tomuto .XAML moze byt asociovany .CS subor, ktory sluzi ako CODE-BEHIND file.
!!!!! 15. Okrem Window a ELEMENTS je mozne i triedu Application definovat v XAML. Ak pre .XAML subor definujuci Application definujem Build Action na ApplicationDefinition, tak NIE JE POTREBNE DEFINOVAT metodu Main(), kedze pri kompilacii .XAML sa automaticky vytvori.
16. Subor .XAML reprezentujuci Application MUSI mat nastavenu property StartupUri udavajuci .XAML subor s MAIN WINDOW.
!!! 17. Teoreticky je mozne napisat i CELY PROGRAM v XAML, i ked jeho funkionalita je znacne obmedzena. V tomto pripade musim definovat .XAML subor reprezentujuci Application, ktoremu nastavim Build Action na ApplicationDefinition a .XAML reprezentujuci Window na ktory sa pomocou StartupUri budem odkazovat.
18. XAML umoznuje pomocou XAML atributu <x:code> definovat C# kod PRIAMO v .XAML subore. Su tam vsak urcite obmedzenia, ako napriklad nemoznost definovania FILEDS. Celkovo vkladanie C# kodu do .XAML vyrazne zneprehladnuje kod.
!!! 19. Ak chcem v XAML pouzivat nejake embedded resources, tak Build Action musi byt nastavena na Resource.
//-----------------------------------------------------------------------------------------------------------------