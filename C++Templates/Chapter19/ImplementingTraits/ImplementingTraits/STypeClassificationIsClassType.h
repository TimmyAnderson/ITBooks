//----------------------------------------------------------------------------------------------------------------------
#pragma once
//----------------------------------------------------------------------------------------------------------------------
#include "STypeFunctionBoolConstant.h"
#include "SVoidType.h"
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
// !!!!! PRIMARY TEMPLATE CLASS.
template<typename TType, typename=SVoidType<>>
struct STypeClassificationIsClassType : public TypeFunctionFalseType
{
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
// !!!!! TEMPLATE SPECIALIZATION CLASS.
// !!!!! Na detekciu ci TYPE je CLASS TYPE sa pouziva finta, ked iba pre CLASS/STRUCT TYPES a UNION TYPES je deklarovanie POINTER TO MEMBER validne. Tym padom kazdy TYPE pre ktory je mozne definovat POINTER TO MEMBER je bud CLASS/STRUCT TYPE, alebo UNION TYPE. UNION TYPE podla definicie C++ je TIEZ CLASS TYPE.
// !!!!! Na rozlisenie medzi CLASS/STRUCT TYPE a UNION TYPE je potrebna podpora COMPILER.
template<typename TType>
struct STypeClassificationIsClassType<TType,SVoidType<int TType::*>> : public TypeFunctionTrueType
{
//----------------------------------------------------------------------------------------------------------------------
	public:
		using													BASE=TType;
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------