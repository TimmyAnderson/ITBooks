//----------------------------------------------------------------------------------------------------------------------
DOCKER COMMANDS.

1. COMMAND [docker build -t TAG_NAME -f PATH_DOCKER_FILE PATH_BUILD_DIRECTORY].
   A. PARAMETER [TAG_NAME] obsahuje TAG NAME identifikujuci DOCKER IMAGE. TAG NAME ma nasledujuci FORMAT.
      A. FORMAT [[HOST[:PORT]/]NAMESPACE/REPOSITORY[:TAG]].
	  B. VALUE [HOST] je nazov HOST NAME DOCKER REGISTRY.
	  C. VALUE [PORT] je nazov PORT DOCKER REGISTRY.
	  D. VALUE [NAMESPACE] je nazov NAMESPACE. Spravidla reprezentuje USER, alebo ORGANIZATION. Ak sa NAMESPACE nezada, pouzije sa DEFAULT VALUE [library].
	  E. VALUE [REPOSITORY] je nazov DOCKER IMAGE.
	  F. VALUE [TAG] je TAG DOCKER IMAGE.
   B. PARAMETER [PATH_DOCKER_FILE] obsahuje PATH k DOCKER FILE.
   C. PARAMETER [PATH_BUILD_DIRECTORY] obsahuje PATH k BUILD DIRECTORY, ktory urcuje pre DOCKER FILE BASE DIRECTORY.
   D. COMMAND vykonava BUILD DOCKER IMAGE z DOCKER FILE.
   !!! E. COMMAND moze byt vykonany IBA, ak je zapnuty DOCKER DESKTOP.
2. COMMAND [docker image list --digests TAG].
   A. OPTIONAL PARAMETER [TAG] umoznuje zobrazit iba IMAGES, ktore maju definovany TAG.
   B. OPTION [--digests] umoznuje zobrazit DIGEST kazdeho DOCKER IMAGE.
   C. COMMAND zobrazuje zoznam vsetkych DOCKER IMAGES.
   D. COMMAND ma ALIAS [docker images].
3. COMMAND [docker image remove IMAGE_ID].
   A. PARAMETER [IMAGE_ID] obsahuje IMAGE IDENTIFIER.
   B. COMMAND odstrani DOCKER IMAGE.
4. COMMAND [docker image pull IMAGE_NAME_OR_DIGEST].
   A. PARAMETER [IMAGE_NAME_OR_DIGEST] obsahuje identifikator IMAGE. Identifikator moze mat nasledujuce formaty.
      A. Identifikator vo formate TAG [NAME:VERSION]. Ak VALUE [VERSION] nie je zadana, ako DEFAULT sa pouziva VALUE [latest].
	  B. Identifikator vo formate DIGEST. Prikladom DIGEST je VALUE [Digest: sha256:2e863c44b718727c860746568e1d54afd13b2fa71b160f5cd9058fc436217b30]. DIGEST identifikator sa pouziva, ak je potrebne stiahnut konkretnu verziu daneho IMAGE.
	  C. Identifikator vo formate URL. Prikladom URL je VALUE [myregistry.local:5000/testing/test-image]. DIGEST identifikator sa pouziva, ak je potrebne stiahnut IMAGE z NON-DEFAULT IMAGE REPOSITORY.
   B. COMMAND stiahne IMAGE z IMAGE REPOSITORY.
   C. Ak je pozadovany IMAGE uz ulozeny v LOCAL STORAGE, tak sa stahuje iba ak existuje novsia verzia DOCKER IMAGE v DOCKER REPOSITORY.
5. COMMAND [docker image tag SOURCE_IMAGE DESTINATION_IMAGE].
   A. PARAMETER [SOURCE_IMAGE] predstavuje nazov SOURCE IMAGE.
   B. PARAMETER [DESTINATION_IMAGE] predstavuje nazov DESTINATION IMAGE.
   C. PARAMETER [SOURCE_IMAGE] a PARAMETER [DESTINATION_IMAGE] maju nasledujuci FORMAT.
      A. FORMAT [[HOST[:PORT]/]NAMESPACE/REPOSITORY[:TAG]].
	  B. VALUE [HOST] je nazov HOST NAME DOCKER REGISTRY.
	  C. VALUE [PORT] je nazov PORT DOCKER REGISTRY.
	  D. VALUE [NAMESPACE] je nazov NAMESPACE. Spravidla reprezentuje USER, alebo ORGANIZATION. Ak sa NAMESPACE nezada, pouzije sa DEFAULT VALUE [library].
	  E. VALUE [REPOSITORY] je nazov DOCKER IMAGE.
	  F. VALUE [TAG] je TAG DOCKER IMAGE.
   D. COMMAND vytvara pre SOURCE IMAGE novy DESTINATION IMAGE s novym TAG.
6. COMMAND [docker container run -d --publish HOST_MACHINE_PORT:DOCKER_CONTAINER_PORT --name CONTAINER_NAME IMAGE_NAME]
   A. PARAMETER [CONTAINER_NAME] obsahuje CONTAINER NAME.
   B. PARAMETER [IMAGE_NAME] obsahuje IMAGE NAME z ktoreho sa ma spustit CONTAINER.
   !!! C. OPTION [--publish HOST_MACHINE_PORT:DOCKER_CONTAINER_PORT] umoznuje MAPPING CONTAINER PORT na HOST MACHINE PORT. OPTION sa moze pouzit aj OPAKOVANE.
      A. PARAMETER [HOST_MACHINE_PORT] obsahuje cislo HOST MACHINE PORT, do ktoreho bude mapovany na DOCKER CONTAINER PORT.
      B. PARAMETER [DOCKER_CONTAINER_PORT] obsahuje cislo DOCKER CONTAINER PORT, ktory mat byt mapovany na HOST MACHINE PORT.
   !!! D. OPTION [--env ENVIRONMENT_VARIABLE_NAME:ENVIRONMENT_VARIABLE_VALUE] umoznuje nastavenie ENVIRONMENT VARIABLE. OPTION sa moze pouzit aj OPAKOVANE.
      A. PARAMETER [ENVIRONMENT_VARIABLE_NAME] obsahuje ENVIRONMENT VARIABLE NAME.
      B. PARAMETER [ENVIRONMENT_VARIABLE_VALUE] obsahuje ENVIRONMENT VARIABLE VALUE.
   !!! E. OPTION [-d] urcuje, ze CONTAINER ma byt spusteny v DETACHED MODE co znamena, ze CONTAINER bude bezat v BACKGROUND. Ak sa OPTION NEPOUZIJE, tak je CONTAINER spusteni na FOREGROUND a zobrazuje hned LOGS.
   F. COMMAND spusta DOCKER CONTAINER z definovaneho DOCKER IMAGE.
   !!! G. COMMAND ziskava IMAGE nasledujucim sposobom.
      A. DOCKER DEAMON sa pokusa najst DOCKER IMAGE najprv v LOCAL STORE. Ak ho najde, tak spusti DOCKER CONTAINER.
	  B. Ak DOCKER IMAGE nebol najdeny v LOCAL STORE, DOCKER DEAMON sa ho pokusi stiahnut z DEFAULT CONTAINER REPOSITORY. Pre DOCKER DESKTOP je DEFAULT CONTAINER REPOSITORY nastaveny na DOCKER HUB. Ak sa DOCKER IMAGE v DEFAULT CONTAINER REPOSITORY, je stiahnuty a nasledne sa pre DOCKER IMAGE spusti DOCKER CONTAINER.
7. COMMAND [docker container list -a].
   A. OPTION [-a] zobrazuje vsetky DOCKER CONTAINERS, vratane tych, ktore nebezia.
   B. COMMAND zobrazuje zoznam DOCKER CONTAINERS.
!!! 8. COMMAND [docker container logs DOCKER_NAME_OR_ID].
   A. PARAMETER [DOCKER_NAME_OR_ID] obsahuje nazov DOCKER CONTAINER, alebo DOCKER CONTAINER ID.
   B. COMMAND zobrazuje LOGS, ktore vygeneroval DOCKER CONTAINER.
!!! 9. COMMAND [docker container remove DOCKER_NAME_OR_ID].
   A. PARAMETER [DOCKER_NAME_OR_ID] obsahuje nazov DOCKER CONTAINER, alebo DOCKER CONTAINER ID.
   B. COMMAND odstranuje DOCKER CONTAINER.
10. COMMAND [docker container port DOCKER_NAME_OR_ID].
   A. PARAMETER [DOCKER_NAME_OR_ID] obsahuje nazov DOCKER CONTAINER, alebo DOCKER CONTAINER ID.
   B. COMMAND zobrazuje mapovanie PORTS pre CONTAINER.
11. COMMAND [docker container port DOCKER_NAME_OR_ID].
   A. PARAMETER [DOCKER_NAME_OR_ID] obsahuje nazov DOCKER CONTAINER, alebo DOCKER CONTAINER ID.
   B. COMMAND zobrazuje mapovanie PORTS pre CONTAINER.
12. COMMAND [docker container start DOCKER_NAME_OR_ID].
   A. PARAMETER [DOCKER_NAME_OR_ID] obsahuje nazov DOCKER CONTAINER, alebo DOCKER CONTAINER ID.
   B. COMMAND spusta CONTAINER.
13. COMMAND [docker container stop DOCKER_NAME_OR_ID].
   A. PARAMETER [DOCKER_NAME_OR_ID] obsahuje nazov DOCKER CONTAINER, alebo DOCKER CONTAINER ID.
   B. COMMAND zastavuje CONTAINER.
14. COMMAND [docker container restart DOCKER_NAME_OR_ID].
   A. PARAMETER [DOCKER_NAME_OR_ID] obsahuje nazov DOCKER CONTAINER, alebo DOCKER CONTAINER ID.
   B. COMMAND vykona restart CONTAINER.
15. COMMAND [docker container stats DOCKER_NAME_OR_ID].
   A. PARAMETER [DOCKER_NAME_OR_ID] obsahuje nazov DOCKER CONTAINER, alebo DOCKER CONTAINER ID.
   B. COMMAND zobrazuje RESOURCE STATISTICS.
16. COMMAND [docker container top DOCKER_NAME_OR_ID].
   A. PARAMETER [DOCKER_NAME_OR_ID] obsahuje nazov DOCKER CONTAINER, alebo DOCKER CONTAINER ID.
   B. COMMAND zobrazuje zoznam PROCESSES, ktore bezia v danom CONTAINER.
17. COMMAND [docker login SERVER_NAME].
   A. PARAMETER [SERVER_NAME] obsahuje nazov DOCKER IMAGE REPOSITORY SERVER pre ktory ma byt vykonany LOGIN.
   B. COMMAND vykonava LOGIN na DOCKER REPOSITORY.
18. COMMAND [docker logout SERVER_NAME].
   A. PARAMETER [SERVER_NAME] obsahuje nazov DOCKER IMAGE REPOSITORY SERVER pre ktory ma byt vykonany LOGOUT.
   B. COMMAND vykonava LOGOUT na DOCKER REPOSITORY.
19. COMMAND [docker push DOCKER_NAME_OR_ID].
   A. PARAMETER [DOCKER_NAME_OR_ID] obsahuje nazov DOCKER CONTAINER, alebo DOCKER CONTAINER ID.
   B. COMMAND vklada IMAGE do CONTAINER REPOSITORY.
20. COMMAND [docker pull DOCKER_NAME_OR_ID].
   A. PARAMETER [DOCKER_NAME_OR_ID] obsahuje nazov DOCKER CONTAINER, alebo DOCKER CONTAINER ID.
   B. COMMAND vybera IMAGE z CONTAINER REPOSITORY.
21. COMMAND [docker version]. COMMAND zobrazuje VERSION DOCKER.
22. COMMAND [docker system info]. COMMAND zobrazuje SYSTEM INFORMATION.
23. COMMAND [docker help]. COMMAND zobrazuje HELP o vsetkych DOCKER COMMANDS.
//----------------------------------------------------------------------------------------------------------------------