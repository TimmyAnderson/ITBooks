//----------------------------------------------------------------------------------------------------------------------
1. Solution demonstruje sposoby vytvarania BLAZOR FORMS v BLAZOR SERVER.
2. BLAZOR FRAMEWORK definuje nasledujuce BLAZOR FORM COMPONENTS pre jednotlive FORM HTML ELEMENTS.
   A. BLAZOR COMPONENT [EditForm].
   B. BLAZOR COMPONENT [InputText].
   C. BLAZOR COMPONENT [InputCheckbox].
   D. BLAZOR COMPONENT [InputDate<TValue>].
   E. BLAZOR COMPONENT [InputNumber<TValue>].
   F. BLAZOR COMPONENT [InputSelect<TValue>].
   G. BLAZOR COMPONENT [InputTextArea].
3. Pre BLAZOR COMPONENT [EditForm] platia nasledujuce fakty.
   A. BLAZOR COMPONENT [EditForm] vykonava RENDERING HTML ELEMENT [<form>].
   B. BLAZOR COMPONENT [EditForm] musi byt PARENT BLAZOR COMPONENT pre vsetky BLAZOR FORM COMPONENTS.
   C. BLAZOR COMPONENT [EditForm] definuje PROPERTY [Model] TYPE [object], ktora obsahuje MODEL OBJECT pre FORM.
   D. BLAZOR COMPONENT [EditForm] zvazuje jednotlive BLAZOR FORM COMPONENTS pre vykonavanie DATA VALIDATION.
4. Pre BLAZOR COMPONENT [InputText] platia nasledujuce fakty.
   A. BLAZOR COMPONENT [InputText] vykonava RENDERING HTML ELEMENT [<input>].
   B. BLAZOR COMPONENT [InputText] definuje PROPERTY [Value] TYPE [string], ktora umoznuje BINIDNG na C# PROPERTY TYPE [string].
   C. BLAZOR COMPONENT [InputText] definuje PROPERTY [ValueChanged] TYPE [EventCallback<string>], ktora realizuje CALLBACK volanie pri zmene C# PROPERTY [InputText.Value].
5. Pre BLAZOR COMPONENT [InputCheckbox] platia nasledujuce fakty.
   A. BLAZOR COMPONENT [InputCheckbox] vykonava RENDERING HTML ELEMENT [<input>], ktora ma HTML ATTRIBUTE [type] nastavenu na VALUE [checkbox].
   B. BLAZOR COMPONENT [InputCheckbox] definuje PROPERTY [Value] TYPE [bool], ktora umoznuje BINIDNG na C# PROPERTY TYPE [bool].
   C. BLAZOR COMPONENT [InputCheckbox] definuje PROPERTY [ValueChanged] TYPE [EventCallback<bool>], ktora realizuje CALLBACK volanie pri zmene C# PROPERTY [InputCheckbox.Value].
6. Pre BLAZOR COMPONENT [InputDate<TValue>] platia nasledujuce fakty.
   A. BLAZOR COMPONENT [InputDate<TValue>] vykonava RENDERING HTML ELEMENT [<input>], ktora ma HTML ATTRIBUTE [type] nastavenu na VALUE [date].
   !!! B. BLAZOR COMPONENT [InputDate<TValue>] moze mat ako TYPE PARAMETER [TValue] pouzity TYPE [DateTime], alebo TYPE [DateTimeOffset].
   C. BLAZOR COMPONENT [InputDate<TValue>] definuje PROPERTY [Value] TYPE [TValue], ktora umoznuje BINIDNG na C# PROPERTY TYPE [TValue].
   D. BLAZOR COMPONENT [InputDate<TValue>] definuje PROPERTY [ValueChanged] TYPE [EventCallback<TValue>], ktora realizuje CALLBACK volanie pri zmene C# PROPERTY [InputDate<TValue>.Value].
7. Pre BLAZOR COMPONENT [InputNumber<TValue>] platia nasledujuce fakty.
   A. BLAZOR COMPONENT [InputNumber<TValue>] vykonava RENDERING HTML ELEMENT [<input>], ktora ma HTML ATTRIBUTE [type] nastavenu na VALUE [number].
   !!! B. BLAZOR COMPONENT [InputNumber<TValue>] moze mat ako TYPE PARAMETER [TValue] pouzity TYPE [int], TYPE [long], TYPE [float], TYPE [double], alebo TYPE [decimal].
   C. BLAZOR COMPONENT [InputNumber<TValue>] definuje PROPERTY [Value] TYPE [TValue], ktora umoznuje BINIDNG na C# PROPERTY TYPE [TValue].
   D. BLAZOR COMPONENT [InputNumber<TValue>] definuje PROPERTY [ValueChanged] TYPE [EventCallback<TValue>], ktora realizuje CALLBACK volanie pri zmene C# PROPERTY [InputNumber<TValue>.Value].
8. Pre BLAZOR COMPONENT [InputSelect<TValue>] platia nasledujuce fakty.
   A. BLAZOR COMPONENT [InputSelect<TValue>] vykonava RENDERING HTML ELEMENT [<select>].
   !!! B. BLAZOR COMPONENT [InputSelect<TValue>] moze mat ako TYPE PARAMETER [TValue] pouzity lubovolny TYPE.
   C. BLAZOR COMPONENT [InputSelect<TValue>] definuje PROPERTY [Value] TYPE [TValue], ktora umoznuje BINIDNG na C# PROPERTY TYPE [TValue].
   D. BLAZOR COMPONENT [InputSelect<TValue>] definuje PROPERTY [ValueChanged] TYPE [EventCallback<TValue>], ktora realizuje CALLBACK volanie pri zmene C# PROPERTY [InputSelect<TValue>.Value].
   E. BLAZOR COMPONENT [InputSelect<TValue>] moze obsahovat CHILD HTML ELEMENTS [<option>], ktore definuju VALUES COMBOBOX.
9. Pre BLAZOR COMPONENT [InputTextArea] platia nasledujuce fakty.
   A. BLAZOR COMPONENT [InputTextArea] vykonava RENDERING HTML ELEMENT [<textarea>].
   B. BLAZOR COMPONENT [InputTextArea] definuje PROPERTY [Value] TYPE [string], ktora umoznuje BINIDNG na C# PROPERTY TYPE [string].
   C. BLAZOR COMPONENT [InputTextArea] definuje PROPERTY [ValueChanged] TYPE [EventCallback<string>], ktora realizuje CALLBACK volanie pri zmene C# PROPERTY [InputTextArea.Value].
!!! 10. Kazdy BLAZOR FORM COMPONENT okrem BLAZOR COMPONENT [EditForm] MUSI mat PARENT BLAZOR COMPONENT [EditForm], inak BLAZOR RUNTIME hodi EXCEPTION.
11. CUSTOM BLAZOR COMPONENTS je mozne vytvarat dedenim z BLAZOR FORM COMPONENTS.
12. BLAZOR FRAMEWORK podporuje vykonavanie DATA VALIDATION. DATA VALIDATION sa realizuje nasledujucim sposobom.
   A. PROPERTIES MODEL OBJECT su oznacene DATA VALIDATION ATTRIBUTES, ktore urcuju podmienky za ktorych su VALUES jednotlivych C# PROPERTIES validne.
   B. BLAZOR FRAMEWORK definuje sadu BLAZOR COMPONENTS, ktore je potrebne vlozit ako CHILD BLAZOR COMPONENTS BLAZOR COMPONENT [EditForm]. Tieto BLAZOR COMPONENTS detekuju VALIDATION ERRORS a zobrazuju textovy popis ERRORS ako aj menia CSS STYLES HTML INPUT ELEMENTS, ktorych VALUES nie je VALID.
13. BLAZOR FRAMEWORK definuje nasledujuce BLAZOR DATA VALIDATION COMPONENTS.
   A. BLAZOR COMPONENT [DataAnnotationsValidator].
   B. BLAZOR COMPONENT [ValidationSummary].
   C. BLAZOR COMPONENT [ValidationMessage<TValue>].
14. Pre BLAZOR COMPONENT [DataAnnotationsValidator] platia nasledujuce fakty.
   A. BLAZOR COMPONENT [DataAnnotationsValidator] vykonava VALIDATION VALIDATION ATTRIBUTES, ktore su aplikovane na C# PROPERTIES MODEL OBJECTS.
   B. BLAZOR COMPONENT [DataAnnotationsValidator] musi byt CHILD voci BLAZOR COMPONENT [EditForm].
15. Pre BLAZOR COMPONENT [ValidationSummary] platia nasledujuce fakty.
   A. BLAZOR COMPONENT [ValidationSummary] vykonava VALIDATION celeho MODEL OBJECT.
   B. BLAZOR COMPONENT [ValidationSummary] musi byt CHILD voci BLAZOR COMPONENT [EditForm].
   C. BLAZOR COMPONENT [ValidationSummary] definuje PROPERTY [Model] TYPE [object], ktora obsahuje MODEL OBJECT.
   D. BLAZOR COMPONENT [ValidationSummary] v pripade existencie VALIDATION ERRORS generuje HTML ELEMENT [<ul>] obsahujuci UNORDERED LIST na ktory aplikuje CSS CLASS [validation-errors].
   E. BLAZOR COMPONENT [ValidationSummary] v pripade existencie VALIDATION ERRORS generuje pre KAZDU VALIDATION ERROR HTML ELEMENT [<li>], ktory vlozi do HTML ELEMENT [<ul>]. Na kazdy HTML ELEMENT [<li>] je aplikovany CSS CLASS [validation-message].
16. Pre BLAZOR COMPONENT [ValidationMessage<TValue>] platia nasledujuce fakty.
   A. BLAZOR COMPONENT [ValidationMessage<TValue>] zobrazuje ERROR MESSAGES, ktore vznikli pri VALIDATION danej C# PROPERTY.
   B. BLAZOR COMPONENT [ValidationMessage<TValue>] musi byt CHILD voci BLAZOR COMPONENT [EditForm].
   C. BLAZOR COMPONENT [ValidationMessage<TValue>] definuje PROPERTY [For] TYPE [Expression<Func<TValue>>], ktora definuje C# PROPERTY, ktorej VALIDATION sa ma vykonat.
   D. BLAZOR COMPONENT [ValidationMessage<TValue>] v pripade existencie VALIDATION ERRORS generuje pre HTML ELEMENT [<div>] do ktoreho zapise VALIDATION ERRORS. Na HTML ELEMENT [<div>] je aplikovany CSS CLASS [validation-message].
   !!! E. BLAZOR COMPONENT [ValidationMessage<TValue>] NIE VZDY dokaze spravne odvodit TYPE C# PROPERTY. V takom pripade je nutne na BLAZOR COMPONENT [ValidationMessage<TValue>] aplikovat HTML ATTRIBUTE [TValue], ktory obsahuje TYPE C# PROPERTY.
17. BLAZOR FORM COMPONENTS aplikuju na HTML ELEMENTS, ktore generuju rozlicne CSS CLASSES podla toho ci doslo k zmene VALUE, vzniku VALIDATION ERROR, alebo VALIDATION ERROR bola opravena.
   A. CSS CLASS [modified] je pridana ak VALUE daneho HTML ELEMENT bola MODIFIED.
   B. CSS CLASS [valid] je pridana ak VALUE daneho HTML ELEMENT bola USPESNE VALIDATED.
   C. CSS CLASS [invalid] je pridana ak VALUE daneho HTML ELEMENT generovala VALIDATION ERROR.
!!! 18. Ak BLAZOR COMPONENT [EditForm] obsahuje HTML ELEMENT [<button>], ktory ma nastaveny HTML ATTRIBUTE [type] na VALUE [submit], potom BLAZOR COMPONENT [EditForm] spracovava EVENT [onsumbit] HTML ELEMENT [<form>], vykonava DATA VALIDATION a podla vysledku DATA VALIDATION generuje nasledujuce EVENTS.
   A. EVENT [OnSubmit] TYPE [EventCallback<EditContext>] je volany ked FORM DATA su SUBMITTED, ale este NIE su VALIDATED.
   B. EVENT [OnValidSubmit] TYPE [EventCallback<EditContext>] je volany ked FORM DATA su SUBMITTED a USPESNE VALIDATED.
   C. EVENT [OnInvalidSubmit] TYPE [EventCallback<EditContext>] je volany ked FORM DATA su SUBMITTED ale VALIDATION FAILED.
!!! 19. Ak BLAZOR COMPONENTS zobrazuju v BLAZOR FORM COMPONENTS priamo ENTITY OBJECTS a nie BUSINESS OBJECTS, tak moze dojst k nasledujucemu problemu.
   A. USER pomocou BLAZOR FORM COMPONENTS modifikuje C# PROPERTIES ENTITY OBJECTS.
   B. USER da CANCEL, aby zrusil editaciu.
   !!!!! C. ENTITY OBJECT AJ NAPRIEK vykonaniu CANCEL obsahuje MODIFIKOVANE C# PROPERTIES ENTITY OBJECTS. NIE su sice ULOZENE do DB, ale ENTITY OBJECT ma MODIFIKOVANE C# PROPERTIES.
   !!! D. Dovodom je, ze v BLAZOR COMPONENTS sa ENTITY FRAMEWORK DB CONTEXT OBJECTS NEVYTVARAJU pri kazdom RELOAD BLAZOR COMPONENT. Standardne, su ENTITY FRAMEWORK DB CONTEXT OBJECTS vytvarane so SCOPED LIFETIME v DEPENDENCY INJECTION FRAMEWORK. No kedze novy SCOPE sa vytvara IBA pri prichode noveho HTTP REQUEST, ktory BLAZOR COMPONENTS NEZASIELAJU (komunikuju cez SIGNALR), tak sa NEVYTVORI NOVY SCOPE a NOVY ENTITY FRAMEWORK DB CONTEXT OBJECT. Tym padom ENTITY OBJECT ostane v POVODNOM MODIFIKOVANOM tvare.
   !!! E. Riesenim PROBLEMU je, aby BLAZOR COMPONENT, ktora obsahuje BLAZOR FORM COMPONENTS implementovala INTERFACE [IDisposable] a v METHOD [void Dispose()] vratila zmenene C# PROPERTIES ENTITY OBJECT do podovneho STATE spoustenim CODE [DbContext.Entry().State=EntityState.Detached].
   !!! F. Riesenim PROBLEMU moze byt aj zaregistrovanie ENTITY FRAMEWORK DB CONTEXT OBJECT ako DEPENDENCY INJECTION SERVICE OBJECT a vytvarat ho so SCOPED LIFETIME. V takomto pripade bude mat BLAZOR COMPONENT vlastnu verziu ENTITY FRAMEWORK DB CONTEXT OBJECT, nezavislu na ostatnych ENTITY FRAMEWORK DB CONTEXT OBJECTS a zmeny, ktore vykona na svojom ENTITY FRAMEWORK DB CONTEXT OBJECT sa NEPREMIETNU do ostatnych ENTITY FRAMEWORK DB CONTEXT OBJECTS. Ziskanie INTERFACE [IServiceProvider], ktory umoznuje vytvarat SERVICES je v BLAZOR COMPONENTS moze tak, ze BLAZOR COMPONENTS su DERIVED z CLASS [OwningComponentBase], alebo CLASS [OwningComponentBase<TServiceType>], kde VALUE 'TServiceType' je TYPE pozadovaneho SERVICE. Tieto BASE CLASSES maju pristup k DEPENDENCY INJECTION FRAMEWORK vdaka, ktoremu je mozne vytvaranie ENTITY FRAMEWORK DB CONTEXT OBJECT s pozadovanym LIFETIME.
20. Ak BLAZOR COMPONENT potrebuje explicitne vytvarat DEPENDENCY INJECTION OBJECTS s pozadovanym LIFETIME, musi byt BLAZOR COMPONENT DERIVED z CLASS [OwningComponentBase], alebo CLASS [OwningComponentBase<TServiceType>], kde VALUE 'TServiceType' je TYPE pozadovaneho SERVICE.
21. Explicitne vytvaranie DEPENDENCY INJECTION SERVICES s pozadovanym LIFETIME v BLAZOR COMPONENTS, ktore su DERIVED z CLASS [OwningComponentBase] sa realizuje nasledujucim sposobom.
   A. BLAZOR COMPONENT je DERIVED z CLASS [OwningComponentBase].
   B. Pomocou METHODS PROPERTY [OwningComponentBase.ScopedServices] je mozne vytvarat SERVICES s pozadovanym LIFETIME.
22. Explicitne vytvaranie DEPENDENCY INJECTION SERVICES s pozadovanym LIFETIME v BLAZOR COMPONENTS, ktore su DERIVED z CLASS [OwningComponentBase<TServiceType>] sa realizuje nasledujucim sposobom.
   A. BLAZOR COMPONENT je DERIVED z CLASS [OwningComponentBase<TServiceType>], kde VALUE 'TServiceType' je TYPE pozadovaneho SERVICE.
   B. Pomocou METHODS PROPERTY [OwningComponentBase.ScopedServices] je mozne vytvarat SERVICES s pozadovanym LIFETIME.
   !!! C. CLASS [OwningComponentBase<TServiceType>] definuje PROPERTY [Service] TYPE [<TServiceType>], ktora obsahuje instanciu SERVICE, ktora je asociovana s danou BLAZOR COMPONENT.
23. BLAZOR COMPONENT [EditForm] definuje CASCADING PARAMETER TYPE [EditContext], ktory definuje MEMBERS umoznujuce vykonavat CUSTOMIZATION DATA VALIDATION PROCESS. CLASS [EditContext] ma nasledujuce MEMBERS.
   A. EVENT [OnFieldChanged] TYPE [EventHandler<FieldChangedEventArgs>] je vyvolany, ak VALUE niektoreho z BLAZOR FORM COMPONENTS sa zmenila.
   B. EVENT [OnValidationRequested] TYPE [EventHandler<ValidationRequestedEventArgs>] je vyvolany, ak BLAZOR FRAMEWORK potrebuje vykonat DATA VALIDATION. Pomocou tohto EVENT moze byt proces DATA VALIDATION CUSTOMIZED.
   C. EVENT [OnValidationStateChanged] TYPE [EventHandler<ValidationStateChangedEventArgs>] je vyvolany, ak doslo k zmene VALIDATION STATE.
   D. PROPERTY [Model] TYPE [object] obsahuje MODEL OBJECT do ktoreho sa ukladaju VALUES BLAZOR FORM COMPONENTS, ktore su VALIDATED.
   E. METHOD [FieldIdentifier Field(string FieldName)] vracia pre FIELD (C# PROPERTY) MODEL OBJECT instanciu CLASS [FieldIdentifier], ktora popisuje dany FIELD.
   F. METHOD [bool IsModified()] vracia informaciu ci niektory FIELD (C# PROPERTY) MODEL OBJECT bol modifikovany.
   G. METHOD [bool IsModified(in FieldIdentifier FieldIdentifier)] vracia informaciu ci dany FIELD (C# PROPERTY) MODEL OBJECT bol modifikovany.
   H. METHOD [bool IsModified(Expression<Func<object>> Accessor)] vracia informaciu ci dany FIELD (C# PROPERTY) MODEL OBJECT bol modifikovany.
   I. METHOD [IEnumerable<string> GetValidationMessages()] vracia VALIDATION ERROR MESSAGES pre cely FORM.
   J. METHOD [IEnumerable<string> GetValidationMessages(FieldIdentifier FieldIdentifier)] vracia VALIDATION ERROR MESSAGES pre dany FIELD (C# PROPERTY) MODEL OBJECT.
   K. METHOD [IEnumerable<string> GetValidationMessages(Expression<Func<object>> Accessor)] vracia VALIDATION ERROR MESSAGES pre dany FIELD (C# PROPERTY) MODEL OBJECT.
   L. METHOD [void MarkAsUnmodified()] oznaci vsetky FIELDS (C# PROPERTY) MODEL OBJECT za UNMODIFIED.
   M. METHOD [void MarkAsUnmodified(in FieldIdentifier FieldIdentifier)] oznaci dany FIELD (C# PROPERTY) MODEL OBJECT za UNMODIFIED.
   N. METHOD [void NotifyValidationStateChanged()] signalizuje BLAZOR FRAMEWORK, ze VALIDATION STATE danej FORM bol zmeneny.
   O. METHOD [void NotifyFieldChanged(in FieldIdentifier FieldIdentifier)] signalizuje BLAZOR FRAMEWORK, ze VALIDATION STATE daneho FIELD (C# PROPERTY) MODEL OBJECT bol zmeneny.
   P. METHOD [bool Validate()] vykona VALIDATION danej FORM.
!!! 24. CASCADING PARAMETER TYPE [EditContext] je naplnany BLAZOR COMPONENT [EditForm]. To znaci, ze CASCADING PARAMETER TYPE [EditContext] mozu vyuzivat iba tie BLAZOR COMPONENTS, ktore su CHILD BLAZOR COMPONENTS voci BLAZOR COMPONENT [EditForm].
//----------------------------------------------------------------------------------------------------------------------