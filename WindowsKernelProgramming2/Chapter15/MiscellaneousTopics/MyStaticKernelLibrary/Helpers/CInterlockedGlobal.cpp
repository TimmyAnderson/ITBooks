//----------------------------------------------------------------------------------------------------------------------
#include "CInterlockedGlobal.h"
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
LONG64 CInterlockedGlobal<LONG64>::GetValue(void)
{
	LONG64														Result=Or(0);

	return(Result);
}
//----------------------------------------------------------------------------------------------------------------------
void CInterlockedGlobal<LONG64>::SetValue(LONG64 Value)
{
	Exchange(Value);
}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
LONG64 CInterlockedGlobal<LONG64>::Exchange(LONG64 Value)
{
	LONG64														Result=InterlockedExchange64(&MVariable,Value);

	return(Result);
}
//----------------------------------------------------------------------------------------------------------------------
LONG64 CInterlockedGlobal<LONG64>::CompareExchange(LONG64 Value, LONG64 Comperand)
{
	LONG64														Result=InterlockedCompareExchange64(&MVariable,Value,Comperand);

	return(Result);
}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
LONG64 CInterlockedGlobal<LONG64>::And(LONG64 Value)
{
	LONG64														Result=InterlockedAdd64(&MVariable,Value);

	return(Result);
}
//----------------------------------------------------------------------------------------------------------------------
LONG64 CInterlockedGlobal<LONG64>::Or(LONG64 Value)
{
	LONG64														Result=InterlockedOr64(&MVariable,Value);

	return(Result);
}
//----------------------------------------------------------------------------------------------------------------------
LONG64 CInterlockedGlobal<LONG64>::Xor(LONG64 Value)
{
	LONG64														Result=InterlockedXor64(&MVariable,Value);

	return(Result);
}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
LONG64 CInterlockedGlobal<LONG64>::BitTestAndSetBit(LONG64 Offset)
{
	LONG64														Result=InterlockedBitTestAndSet64(&MVariable,Offset);

	return(Result);
}
//----------------------------------------------------------------------------------------------------------------------
LONG64 CInterlockedGlobal<LONG64>::BitTestAndResetBit(LONG64 Offset)
{
	LONG64														Result=InterlockedBitTestAndReset64(&MVariable,Offset);

	return(Result);
}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
LONG64 CInterlockedGlobal<LONG64>::Increment(void)
{
	LONG64														Result=InterlockedIncrement64(&MVariable);

	return(Result);
}
//----------------------------------------------------------------------------------------------------------------------
LONG64 CInterlockedGlobal<LONG64>::Decrement(void)
{
	LONG64														Result=InterlockedDecrement64(&MVariable);

	return(Result);
}
//----------------------------------------------------------------------------------------------------------------------