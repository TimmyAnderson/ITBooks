//------------------------------------------------------------------------------
1. Program demonstruje pouzitie Concurrent Collections, ktore su sucastou Parallel Extensions.
2. BlockingCollection<T> predstavuje klasicku Producer-Consumer collection, ktora je BLOCKED pre Consumer ak je EMPTY a naopak je BLOCKED pre Producer, ak je PLNA.
3. BlockingCollection<T> umoznuje ako STORAGE pouzit LUBOVOLNU COLLECTION, ktora implementuje IProducerConsumerCollection<T>.
!!! 4. Typicky scenar pouzitia je, ze Producer (jeden, alebo viac) produkuje nove Items a Consumer (jeden, alebo viac) ich spracuvava. To trva AZ POKYM Producer nezavola CompleteAdding(), ktory SIGNALIZUJE CONSUMER, ze PRODUCER SKONCIL.
!!! 5. BlockingCollection<T> podporuje i enumerator volanim GetConsumingEnumerable(), ktory sa posuva na NEXT ITEM, ked ho Producer doda do Collection a KONCI ENUMERACIU, ked Producer zavola CompleteAdding().
!!! 6. Po zavolani CompleteAdding() ak Collection este obsahuje Items, tak SU NAJPRV SPRACOVANE. Enumerator teda skonci az po spracovani vsetkych Items.
7. ConcurrentQueue<T> sluzi ako optimalizovany LOCK-FREE Queue.
7. ConcurrentStack<T> sluzi ako optimalizovany LOCK-FREE Stack.
//------------------------------------------------------------------------------