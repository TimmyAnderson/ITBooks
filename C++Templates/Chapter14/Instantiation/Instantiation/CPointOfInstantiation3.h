//----------------------------------------------------------------------------------------------------------------------
#pragma once
//----------------------------------------------------------------------------------------------------------------------
#include <cstddef>
#include <iostream>
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<typename TType>
class CPointOfInstantiation3 final
{
//----------------------------------------------------------------------------------------------------------------------
	private:
		TType													MValue;

	public:
		const TType& GetValue(void) const noexcept;

	public:
		CPointOfInstantiation3(const TType& Value);
		virtual ~CPointOfInstantiation3(void) noexcept;
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<typename TType>
CPointOfInstantiation3<TType>::CPointOfInstantiation3(const TType& Value)
	: MValue(Value)
{
}
//----------------------------------------------------------------------------------------------------------------------
template<typename TType>
CPointOfInstantiation3<TType>::~CPointOfInstantiation3(void) noexcept
{
}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<typename TType>
const TType& CPointOfInstantiation3<TType>::GetValue(void) const noexcept
{
	return(MValue);
}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
// !!!!! Uz tu sa nachadza POINT OF INSTANTIATION pre TEMPLATE [CPointOfInstantiation3<int>]. Je to preto, lebo ak by sa nachadzal az za FUNCTION, tak by CODE [sizeof(CPointOfInstantiation3<int>)] NEPOZNAL CLASS [CPointOfInstantiation3<int>].
//----------------------------------------------------------------------------------------------------------------------
inline void PointOfInstantiation3Test(void)
{
	size_t														Size=sizeof(CPointOfInstantiation3<int>);

	std::wcout << L"CPointOfInstantiation3 - TEST - SIZE [" << Size << L"]." << std::endl;
}
//----------------------------------------------------------------------------------------------------------------------