//----------------------------------------------------------------------------------------------------------------------
1. Solution demonstruje pouzitie STANDARD TAG HELPERS v ASP.NET CORE APPLICATIONS.
2. STANDARD TAG HELPERS su definovane v ASSEMBLY [Microsoft.AspNetCore.Mvc.TagHelpers] a je do VIEW (RAZOR PAGE) je ich mozne pridat pomocou DIRECTIVE [@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers].
3. TAG HELPER CLASS [AnchorTagHelper] je aplikovany na HTML ELEMENT [<a>]. Umoznuje generovat URLs, ktore su v sulade s ROUTES v ROUTING SYSTEM. TAG HELPER CLASS [AnchorTagHelper] ma nasledujuce definuje nasledujuce HTML ATTRIBUTES, ktore su mapovane na C# PROPERTIES TAG HELPER.
   A. HTML ATTRIBUTE [asp-controller] TYPE [string] definuje CONTROLLER, ktory bude vlozeny do vygenerovanej OUTGOING URL.
   B. HTML ATTRIBUTE [asp-action] TYPE [string] definuje ACTION METHOD, ktora bude vlozena do vygenerovanej OUTGOING URL.
   C. HTML ATTRIBUTE [asp-route-XXX] definuje VALUE ROUTE VARIABLE 'XXX', ktora sa vlozi do vygenerovanej OUTGOING URL.
   D. HTML ATTRIBUTE [asp-fragment] TYPE [string] definuje FRAGMENT, ktory bude vlozeny do vygenerovanej OUTGOING URL.
   E. HTML ATTRIBUTE [asp-route] TYPE [string] umoznuje definovat speficku ROUTE, ktora sa ma pouzit pre vygenerovanie OUTGOING URL.
   F. HTML ATTRIBUTE [asp-area] TYPE [string] umoznuje definovat nazov AREA, ktora sa ma pouzit pre vygenerovanie OUTGOING URL.
   G. HTML ATTRIBUTE [asp-host] TYPE [string] definuje HOST NAME, ktory bude vlozeny do vygenerovanej OUTGOING URL.
   H. HTML ATTRIBUTE [asp-protocol] TYPE [string] definuje PROTOCOL, ktory bude vlozeny do vygenerovanej OUTGOING URL.
   I. HTML ATTRIBUTE [asp-page] TYPE [string] definuje nazov RAZOR PAGE, ktora bude vlozena do vygenerovanej OUTGOING URL FORM ACTION.
   J. HTML ATTRIBUTE [asp-page-handler] TYPE [string] definuje nazov HANDLER RAZOR PAGE, ktora bude vlozena do vygenerovanej OUTGOING URL FORM ACTION. Ak HTML ATTRIBUTE [asp-page-handler] bude obsahovat VALUE 'YYY', potom RAZOR PAGE musi mat definovanu METHOD [RETURN_TYPE OnXXXYYY(PARAMETERS)], alebo METHOD [Task<RETURN_TYPE> OnXXXYYYAsync(PARAMETERS)], kde VALUE 'XXX' je nazov HTTP VERB a VALUE 'YYY' je VALUE HTML ATTRIBUTE [asp-page-handler].
   K. HTML ATTRIBUTE [asp-all-route-data] TYPE [string] definuje vsetky VALUES pre ROUTING v jednom HTML ELEMENT.
4. ASP.NET umoznuje generovat URLs, ktore respektuju pravidla ROUTES v ROUTING SYSTEM pomocou CLASS, ktora implementuje INTERFACE [IUrlHelper]. INTERFACE [IUrlHelper] ma nasledujuce MEMBERS.
   A. EXTENSION METHOD [string Action(this IUrlHelper Helper, string Action, string Controller)] umoznuje generovat URL na pozadovany VIEW.
   B. EXTENSION METHOD [string Page(this IUrlHelper UrlHelper, string PageName, string PageHandler)] umoznuje generovat URL na pozadovany RAZOR PAGE.
5. TAG HELPER CLASS [ScriptTagHelper] je aplikovany na HTML ELEMENT [<script>]. TAG HELPER CLASS [ScriptTagHelper] ma nasledujuce definuje nasledujuce HTML ATTRIBUTES, ktore su mapovane na C# PROPERTIES TAG HELPER.
   A. HTML ATTRIBUTE [asp-src-include] TYPE [string] obsahuje zoznam GLOBBING PATTERNS oddelenych CHARACTER ',' pre JAVA SCRIPT FILES, ktore maju byt vlozene do VIEW (RAZOR PAGE).
   B. HTML ATTRIBUTE [asp-src-exclude] TYPE [string] obsahuje zoznam GLOBBING PATTERNS oddelenych CHARACTER ',' pre JAVA SCRIPT FILES, ktore NESMU byt vlozene do VIEW (RAZOR PAGE).
   C. HTML ATTRIBUTE [asp-append-version] TYPE [bool?] obsahuje informaciu ci pri nacitavani JAVA SCRIPT FILES sa ma pouzit CACHE BUSTING. CACHE BUSTING vklada pri dotaze na JAVA SCRIPT FILES do QUERY STRING aj verziu pozadovaneho JAVA SCRIPT FILE (vo formate CHECKSUM) co umoznuje definovat, ktora verzia JAVA SCRIPT FILE sa ma pouzit.
   D. HTML ATTRIBUTE [asp-fallback-src] TYPE [string] obsahuje URL k FALLBACK JAVA SCRIPT FILE, ktory ma byt vlozeny do VIEW (RAZOR PAGE) v pripade, ze CONTENT DELIVERY NETWORK ZLYHALA.
   E. HTML ATTRIBUTE [asp-fallback-src-include] TYPE [string] obsahuje zoznam GLOBBING PATTERNS oddelenych CHARACTER ',' pre FALLBACK JAVA SCRIPT FILES, ktore maju byt vlozene do VIEW (RAZOR PAGE) v pripade, ze CONTENT DELIVERY NETWORK ZLYHALA.
   F. HTML ATTRIBUTE [asp-fallback-src-exclude] TYPE [string] obsahuje zoznam GLOBBING PATTERNS oddelenych CHARACTER ',' pre FALLBACK JAVA SCRIPT FILES, ktore NESMU byt vlozene do VIEW (RAZOR PAGE) v pripade, ze CONTENT DELIVERY NETWORK ZLYHALA.
   G. HTML ATTRIBUTE [asp-fallback-test] TYPE [string] obsahuje nazov JAVA SCRIPT FUNCTION, ktora sa pouzije na kontrolu ci JAVA SCRIPT FILE bol korektne nacitany z CONTENT DELIVERY NETWORK. CODE na ktory odkazuje HTML ATTRIBUTE [asp-fallback-test] musi byt EXPRESSION, ktora vracia BOOL RETURN VALUE.
!!! 6. Aby HTML ATTRIBUTE [asp-src-exclude] fungoval MUSI byt aplikovany na ten HTML ELEMENT [<script>] na ktory je aplikovany HTML ATTRIBUTE [asp-src-include]. To znaci, ze HTML ATTRIBUTE [asp-src-include] vykona INCLUDE FILES pricom HTML ATTRIBUTE [asp-src-exclude] z nich odoberie tie, ktore splnaju GLOBBING PATTERN v HTML ATTRIBUTE [asp-src-exclude]. To iste plati aj pre HTML ATTRIBUTE [asp-fallback-src-include] a HTML ATTRIBUTE [asp-fallback-src-exclude].
!!!!! 7. BY-DEFAULT PATHS na ktore referuje TAG HELPER CLASS [ScriptTagHelper] su RELATIVNE voci DIRECTORY [wwwroot]. Tento DIRECTORY je mozne zmenit nastavenim PROPERTY [IWebHostEnvironment.WebRootFileProvider] na CLASS implementujucu INTERFACE [IFileProvider] ako napriklad CLASS [PhysicalFileProvider], kde sa explicitne nastavi ROOT DIRECTORY voci ktoremu budu PATHS v TAG HELPER CLASS [ScriptTagHelper] RELATIVNE.
8. GLOBBING PATTERN je FILE PATTERN, ktory sa pouziva na definovanie, s ktorymi JAVA SCRIPT FILES ma TAG HELPER CLASS [ScriptTagHelper] ma pracovat. GLOBBING PATTERN definuje nasledujuce WILDCARDS.
   A. WILDCARD [*] nahradzuje LUBOVOLNY POCET CHARACTERS, okrem CHARACTER '/'.
   B. WILDCARD [**] nahradzuje LUBOVOLNY POCET CHARACTERS, vratane CHARACTER '/'.
9. CACHE BUSTING je mechanizmus, ktory umoznuje obist problem s FILE CACHING, ak FILE CACHE obsahuje starsiu verziu FILE, aku pozaduje WEB APPLICATION. CACHE BUSTING zabezpecuje, ze sa z CACHE SERVER pozaduje ta verzia FILE, ktoru WEB APPLICATION potrebuje. CACHE BUSTING funguje nasledujucim sposobom.
   A. Ak WEB APPLICATION pouziva nejaky FILE, na ktory sa referuje cez URL, tak sa do QUERY STRING URL pozadujucej nacitanie daneho FILE prida CHECKSUM FILE, ktory WEB APPLICATION pouziva. Tym sa zabezpecuje, ze URL sa referuje vzdy na spravnu verziu FILE.
   B. Ak URL spracovava CACHE SERVER, ktory bol nainstalovany napriklad INTERNET PROVIDEROM, tak URL neobsahuje iba nazov FILE, ktory moze byt rovnaky pre viacero verzii daneho FILE, ale v QUERY STRING aj CHECKSUM pozadovaneho FILE. Ak pre danu URL, vratane QUERY STRING sa v CACHE nachadza dany FILE, tak sa pozadovana verzia FILE vrati z CACHE. Ak sa v CACHE NENACHADZA, tak CACHE SERVER nacita z WEB SERVER kde bezi WEB APPLICATION nacita spravnu verziu FILE, ktoru posle na CLIENT, a zaroven si tuto verziu FILE pre danu URL (ktora obsahuje CHECKSUM) ulozi do CACHE.
   C. Vdaka CACHE BUSTING je zabezpecene, ze sa VZDY nacita SPRAVNA VERZIA FILE ktoru WEB APPLICATION pozaduje.
10. CONTENT DELIVERY NETWORK je plateny SERVICE WEB SERVERS, ktore su geograficky distribuovane po svete a su schopne bezne vyzadovane FILES ako napriklad bezne JAVA SCRIPT LIBRARIES poskytovat rychlejsie a odlahcit tak WORKLOAD WEB SERVER na ktorom bezi WEB APPLICATION.
!!! 11. Ak HTML ATTRIBUTE [asp-src-include], alebo HTML ATTRIBUTE [asp-src-exclude] odkazuju na CONTENT DELIVERY NETWORK URLs, je vhodne nastavit HTML ATTRIBUTE [asp-fallback-src-include] a HTML ATTRIBUTE [asp-fallback-src-exclude], ktore referuju na FILES na LOCAL WEB SERVERS. FILES na tychto PATHS su pouzite v pripade, ze CONTENT DELIVERY NETWORK ZLYHA.
!!! 12. To ci CONTENT DELIVERY NETWORK zlyhala, alebo nie urcuje CODE na ktory referuje HTML ATTRIBUTE [asp-fallback-test]. CODE na ktory referueje HTML ATTRIBUTE [asp-fallback-test] MUSI byt EXPRESSION, ktora vracia BOOL RETURN VALUE, pricom TRUE VALUE znamena, ze sa FILES z CONTENT DELIVERY NETWORK podarilo USPESNE NACITAT. FALSE VALUE znamena, ze sa FILES z CONTENT DELIVERY NETWORK NEPODARILO USPESNE NACITAT a teda sa maju pouzit HTML ATTRIBUTE [asp-fallback-src-include] a HTML ATTRIBUTE [asp-fallback-src-exclude].
13. FALLBACK MECHANISM TAG HELPER CLASS [ScriptTagHelper] funguje nasledujucim sposobom.
   A. ASP.NET sa pre dany HTML ELEMENT [<script>] pokusi nacitat FILES definovane pomocou HTML ATTRIBUTE [asp-src-include] a HTML ATTRIBUTE [asp-src-exclude], ktore spravidla referuju na EXTERNE WEB SERVERS patriace do CONTENT DELIVERY NETWORK.
   B. ASP.NET sa pre dany HTML ELEMENT [<script>] zavola EXPRESSION definovanu v HTML ATTRIBUTE [asp-fallback-test]. V pripade, ze ta vrati TRUE, je nacitavanie FILES z CONTENT DELIVERY NETWORK povazovane za USPESNE. V pripade, ze vrati FALSE je citanie FILES z CONTENT DELIVERY NETWORK povazovane za NEUSPESNE a pouzije sa FALLBACK MECHANISM.
   C. ASP.NET pri pouziti FALLBACK MECHANISM nacita FILES definovane pomocou HTML ATTRIBUTE [asp-fallback-src-include] a HTML ATTRIBUTE [asp-fallback-src-exclude].
   !!! D. Vdaka pouzitiu FALLBACK MECHANISM ma WEB APPLICATION garantovane, ze potrebne FILES budu dostupne, aj keby CONTENT DELIVERY NETWORK ZLYHALA.
14. TAG HELPER CLASS [LinkTagHelper] je aplikovany na HTML ELEMENT [<link>]. TAG HELPER CLASS [LinkTagHelper] ma nasledujuce definuje nasledujuce HTML ATTRIBUTES, ktore su mapovane na C# PROPERTIES TAG HELPER.
   A. HTML ATTRIBUTE [asp-href-include] TYPE [string] obsahuje zoznam GLOBBING PATTERNS oddelenych CHARACTER ',' pre CSS FILES, ktore maju byt vlozene do VIEW (RAZOR PAGE).
   B. HTML ATTRIBUTE [asp-href-exclude] TYPE [string] obsahuje zoznam GLOBBING PATTERNS oddelenych CHARACTER ',' pre CSS FILES, ktore NESMU byt vlozene do VIEW (RAZOR PAGE).
   C. HTML ATTRIBUTE [asp-append-version] TYPE [bool?] obsahuje informaciu ci pri nacitavani CSS FILES sa ma pouzit CACHE BUSTING. CACHE BUSTING vklada pri dotaze na CSS FILES do QUERY STRING aj verziu pozadovaneho CSS FILE (vo formate CHECKSUM) co umoznuje definovat, ktora verzia CSS FILE sa ma pouzit.
   D. HTML ATTRIBUTE [asp-fallback-href] TYPE [string] obsahuje URL k FALLBACK CSS FILE, ktory ma byt vlozeny do VIEW (RAZOR PAGE) v pripade, ze CONTENT DELIVERY NETWORK ZLYHALA.
   E. HTML ATTRIBUTE [asp-fallback-href-include] TYPE [string] obsahuje zoznam GLOBBING PATTERNS oddelenych CHARACTER ',' pre FALLBACK CSS FILES, ktore maju byt vlozene do VIEW (RAZOR PAGE) v pripade, ze CONTENT DELIVERY NETWORK ZLYHALA.
   F. HTML ATTRIBUTE [asp-fallback-href-exclude] TYPE [string] obsahuje zoznam GLOBBING PATTERNS oddelenych CHARACTER ',' pre FALLBACK CSS FILES, ktore NESMU byt vlozene do VIEW (RAZOR PAGE) v pripade, ze CONTENT DELIVERY NETWORK ZLYHALA.
   G. HTML ATTRIBUTE [asp-fallback-test-class] TYPE [string] obsahuje nazov CSS CLASS, ktora sa pouzije na kontrolu ci CSS FILE bol korektne nacitany z CONTENT DELIVERY NETWORK.
   H. HTML ATTRIBUTE [asp-fallback-test-property] TYPE [string] obsahuje nazov CSS PROPERTY, ktora sa pouzije na kontrolu ci CSS FILE bol korektne nacitany z CONTENT DELIVERY NETWORK.
   I. HTML ATTRIBUTE [asp-fallback-test-value] TYPE [string] obsahuje nazov CSS VALUE, ktora sa pouzije na kontrolu ci CSS FILE bol korektne nacitany z CONTENT DELIVERY NETWORK.
15. FALLBACK MECHANISM TAG HELPER CLASS [LinkTagHelper] funguje nasledujucim sposobom.
   A. ASP.NET sa pre dany HTML ELEMENT [<link>] pokusi nacitat FILES definovane pomocou HTML ATTRIBUTE [asp-href-include] a HTML ATTRIBUTE [asp-href-exclude], ktore spravidla referuju na EXTERNE WEB SERVERS patriace do CONTENT DELIVERY NETWORK.
   B. ASP.NET sa pre dany HTML ELEMENT [<link>] skontroluje ci existuje CSS CLASS nastaveny pomocou HTML ATTRIBUTE [asp-fallback-test-class], ktory obsahuje PROPERTY nastavenu pomocou HTML ATTRIBUTE [asp-fallback-test-property] a ci tato ma VALUE nastavenu pomocou HTML ATTRIBUTE [asp-fallback-test-value]. Ak ano, je nacitavanie FILES z CONTENT DELIVERY NETWORK povazovane za USPESNE. V pripade, ze vrati FALSE je citanie FILES z CONTENT DELIVERY NETWORK povazovane za NEUSPESNE a pouzije sa FALLBACK MECHANISM.
   C. ASP.NET pri pouziti FALLBACK MECHANISM nacita FILES definovane pomocou HTML ATTRIBUTE [asp-fallback-href-include] a HTML ATTRIBUTE [asp-fallback-href-exclude].
   !!! D. Vdaka pouzitiu FALLBACK MECHANISM ma WEB APPLICATION garantovane, ze potrebne FILES budu dostupne, aj keby CONTENT DELIVERY NETWORK ZLYHALA.
16. TAG HELPER CLASS [ImageTagHelper] je aplikovany na HTML ELEMENT [<img>]. TAG HELPER CLASS [ImageTagHelper] definuje HTML ATTRIBUTE [asp-append-version] TYPE [bool?] obsahuje informaciu ci pri nacitavani IMAGE FILE sa ma pouzit CACHE BUSTING. CACHE BUSTING vklada pri dotaze na IMAGE FILE do QUERY STRING aj verziu pozadovaneho IMAGE FILE (vo formate CHECKSUM) co umoznuje definovat, ktora verzia IMAGE FILE sa ma pouzit.
17. ASP.NET pomocou TAG HELPER [CacheTagHelper] podporuje CACHING. Pre CACHING platia nasledujuce fakty.
   A. TAG HELPER CLASS [CacheTagHelper] implementuje MEMORY CACHING. To znaci, ze CACHED DATA su ulozene v RAM.
   B. TAG HELPER CLASS [CacheTagHelper] sa aplikuje na HTML ELEMENT [<cache>].
   C. TAG HELPER CLASS [CacheTagHelper] vykonava CACHING CONTENT HTML ELEMENT [<cache>].
18. TAG HELPER CLASS [CacheTagHelper] vykonava MEMORY CACHING. TAG HELPER CLASS [CacheTagHelper] ma nasledujuce definuje nasledujuce HTML ATTRIBUTES, ktore su mapovane na C# PROPERTIES TAG HELPER.
   A. HTML ATTRBITE [enabled] TYPE [bool] urcuje ci je MEMORY CACHING na dany HTML ELEMENT [<cache>] aplikovany, alebo nie.
   B. HTML ATTRBITE [expires-on] TYPE [DateTimeOffset?] urcuje ABSOLUTE TIME, kedy sa platnost CACHE RECORD konci.
   C. HTML ATTRBITE [expires-after] TYPE [TimeSpan?] urcuje RELATIVE TIME, kedy sa platnost CACHE RECORD konci.
   D. HTML ATTRBITE [expires-sliding] TYPE [TimeSpan?] urcuje RELATIVE TIME od posledneho pristupu ku CACHED CONTENT, kedy sa platnost CACHE RECORD konci.
   E. HTML ATTRBITE [vary-by-header] TYPE [string] obsahuje mena HEADERS oddelene CHARACTER ',', ktorych VALUES su urcene na identifikaciu rozlicnych verzii CACHE RECORDS.
   F. HTML ATTRBITE [vary-by-query] TYPE [string] obsahuje mena QUERY STRING PARAMETERS oddelene CHARACTER ',', ktorych VALUES su urcene na identifikaciu rozlicnych verzii CACHE RECORDS.
   G. HTML ATTRBITE [vary-by-route] TYPE [string] obsahuje mena ROUTE VARIABLES oddelene CHARACTER ',', ktorych VALUES su urcene na identifikaciu rozlicnych verzii CACHE RECORDS.
   H. HTML ATTRBITE [vary-by-cookie] TYPE [string] obsahuje mena COOKIES oddelene CHARACTER ',', ktorych VALUES su urcene na identifikaciu rozlicnych verzii CACHE RECORDS.
   I. HTML ATTRBITE [vary-by-user] TYPE [bool] urcuje ci meno prihlaseneho USER ma byt pouzite na identifikaciu rozlicnych verzii CACHE RECORDS.
   J. HTML ATTRBITE [vary-by] TYPE [string] obsahuje STRING VALUE, ktora sa pouzije na identifikaciu rozlicnych verzii CACHE RECORDS.
   K. HTML ATTRBITE [priority] TYPE [CacheItemPriority?] urcuje relativnu PRIORITY daneho CACHE RECORD. Tato PRIORITY urcuje v akom poradi sa maju odstranovat CACHE RECORDS v pripade nedostatku RAM MEMORY urcene pre CACHE.
!!! 19. TAG HELPER CLASS [DistributedCacheTagHelper] vykonava CACHING to EXTERNAL STORAGE. Aplikuje sa na HTML ELEMENT [<distributed-cache>]. TAG HELPER CLASS [DistributedCacheTagHelper] ma nasledujuce definuje nasledujuce HTML ATTRIBUTES, ktore su mapovane na C# PROPERTIES TAG HELPER.
   A. HTML ATTRBITE [enabled] TYPE [bool] urcuje ci je MEMORY CACHING na dany HTML ELEMENT [<cache>] aplikovany, alebo nie.
   B. HTML ATTRBITE [expires-on] TYPE [DateTimeOffset?] urcuje ABSOLUTE TIME, kedy sa platnost CACHE RECORD konci.
   C. HTML ATTRBITE [expires-after] TYPE [TimeSpan?] urcuje RELATIVE TIME, kedy sa platnost CACHE RECORD konci.
   D. HTML ATTRBITE [expires-sliding] TYPE [TimeSpan?] urcuje RELATIVE TIME od posledneho pristupu ku CACHED CONTENT, kedy sa platnost CACHE RECORD konci.
   E. HTML ATTRBITE [vary-by-header] TYPE [string] obsahuje mena HEADERS oddelene CHARACTER ',', ktorych VALUES su urcene na identifikaciu rozlicnych verzii CACHE RECORDS.
   F. HTML ATTRBITE [vary-by-query] TYPE [string] obsahuje mena QUERY STRING PARAMETERS oddelene CHARACTER ',', ktorych VALUES su urcene na identifikaciu rozlicnych verzii CACHE RECORDS.
   G. HTML ATTRBITE [vary-by-route] TYPE [string] obsahuje mena ROUTE VARIABLES oddelene CHARACTER ',', ktorych VALUES su urcene na identifikaciu rozlicnych verzii CACHE RECORDS.
   H. HTML ATTRBITE [vary-by-cookie] TYPE [string] obsahuje mena COOKIES oddelene CHARACTER ',', ktorych VALUES su urcene na identifikaciu rozlicnych verzii CACHE RECORDS.
   I. HTML ATTRBITE [vary-by-user] TYPE [bool] urcuje ci meno prihlaseneho USER ma byt pouzite na identifikaciu rozlicnych verzii CACHE RECORDS.
   J. HTML ATTRBITE [vary-by] TYPE [string] obsahuje STRING VALUE, ktora sa pouzije na identifikaciu rozlicnych verzii CACHE RECORDS.
20. TAG HELPER CLASS [UrlResolutionTagHelper] vykonava konverziu RELATIVE URLs, ktore zacinaju CHARACTER '~' na ABSOLUTE URLs, ktore zacinaju WWWROOT DIRECTORY (respektive CUSTOM DIRECTORY, ktory bol nastaveny ako WWWROOT), pricom respektuje ROUTES. TAG HELPER CLASS [UrlResolutionTagHelper] je aplikovany na mnozstvo HTML ATTRIBUTES rozlicnych HTML ELEMENTS.
21. TAG HELPER CLASS [EnvironmentTagHelper] je aplikovany na CUSTOM HTML ELEMENT [<environment>]. TAG HELPER CLASS [EnvironmentTagHelper] mapuje HTML ATTRIBUTE [names], ktora obsahuje zoznam ENVIRONMENTS oddelenych CHARACTER ','. TAG HELPER CLASS [EnvironmentTagHelper] ak zisti, ze nazov aktualneho ENVIROMENT je zhodny s niektorou z VALUES HTML ATTRIBUTE [names], tak zobrazi CONTENT CUSTOM HTML ELEMENT [<environment>]. Inak sa CONTENT CUSTOM HTML ELEMENT [<environment>] NEZOBRAZI.
//----------------------------------------------------------------------------------------------------------------------