//----------------------------------------------------------------------------------------------------------------------
#pragma once
//----------------------------------------------------------------------------------------------------------------------
#include "STypeErasureCallbackWrapperHasOperatorEqual.h"
#include "CException.h"
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
// !!!!! PRIMARY TEMPLATE CLASS, pre ktoru sa pomocou principu SFINAE robi TEMPLATE INSTANTIATION, ak TYPE [TType] ma OPERATOR [OPERATOR==].
template<typename TType, bool IS_COMPARABLE=STypeErasureCallbackWrapperHasOperatorEqual<TType>::VALUE>
struct STypeErasureCallbackWrapperTryEquals final
{
//----------------------------------------------------------------------------------------------------------------------
	public:
		static bool Equals(const TType& Value1, const TType& Value2);
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<typename TType, bool IS_COMPARABLE>
bool STypeErasureCallbackWrapperTryEquals<TType,IS_COMPARABLE>::Equals(const TType& Value1, const TType& Value2)
{
	// !!!!! Vola sa OPERATOR [OPERATOR==].
	bool														Result=(Value1==Value2);

	return(Result);
}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
// !!!!! TEMPLATE CLASS SPECIALIZATION, pre ktoru sa pomocou principu SFINAE robi TEMPLATE INSTANTIATION, ak TYPE [TType] NEMA OPERATOR [OPERATOR==].
template<typename TType>
struct STypeErasureCallbackWrapperTryEquals<TType,false> final
{
//----------------------------------------------------------------------------------------------------------------------
	public:
		static bool Equals(const TType& Value1, const TType& Value2);
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<typename TType>
bool STypeErasureCallbackWrapperTryEquals<TType,false>::Equals(const TType&, const TType&)
{
	// !!!!! Hodi sa EXCEPTION.
	throw(CException(L"DOESN'T have OPERATOR [OPERATOR==]."));
}
//----------------------------------------------------------------------------------------------------------------------