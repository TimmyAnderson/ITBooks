//------------------------------------------------------------------------------
1. Program demonstruje pouzitie Menu vo WPF.
2. Menu je vo WPF tvorene dvoma trieda.
   A. Menu - trieda dedi z MenuBase a ta z ItemsControl. Obsahuje kolekciu Items, ktora obsahuje MENU ITEMS co mozu byt lubovolne objekty, ale zvycajne su to instancie triedy MenuItem. Menu je pouzite ako ROOT MENU.
   B. MenuItem - trieda dedi z HeaderedItemsControl a ta z ItemsControls. Obsahuje kolekciu Items, co su SUB MENUS daneho MenuItem.
!!! 3. Hoci Menu i MenuItems mozu do kolekcie Items ukladat LUBOVOLNE OBJEKTY, zvycajne to su obejktu typu MenuItem, ktore sa tam ukladaju.
4. Trieda MenuItem obsahuje viacere properties a events, ktore je mozne pri praci s menu s vyhodou pouzit.
   A. Header - obsahuje text MENU ITEM.
   B. Icon - ikona zobrazena vedla MENU ITEM.
   C. IsCheckable - ak je nastavena na TRUE, tak WPF AUTOMATICKY PREPINA stav property IsChecked pri kliknuti na nu. Ak je nastavena na FALSE, tak prepnutie musim robit MANUALNE.
   D. IsChecked - urcuje ci je menu CHECKED, alebo nie.
   E. Checked a Unchecked - events volane pri zmene stavu IsChecked.
   F. SubmenuOpenede - event volany pri otvarani SUB MENU, ktory je mozne s vyhodou pouzit pri zmene DISABLE stavu daneho MENU ITEM.
   !!! G. Click - klucovy event volany pri klepnuti na MENU ITEM.
!!! 5. Menu sa zvycajne umiestnuje hned pod Title bar okna. To sa da najlepsie dosiahnut pouziti DockPanel.
!!! 6. V MenuItem ma znacka pre CHECK MARK a Icon TU ISTU POZICIU (CHECK MARK je realizovany ako Icon) a tak NEMOZU BYT SUCASTNE v jednom MenuItem.
7. MenuItem ma property InputGestureText, ktory umoznuje specifikovat text ACCELERATOR, ktory sa zobrazi na ploch MenuItem.
8. Funkcionalitu ACCELERATORS mozem realizovat dvoma sposobmi.
   A. Pretazim OnPreviewKeyDown() pre Window v ktorej zistujem ci niektory ACCELERATOR nebol aktivovany a ak ano, tak vyvolam Click event MENU ITEM a nastavim Handled na TRUE. S vyhodou mozem pouzit triedu KeyGesture, ktora umoznuje zadat ACCELERATOR a ma metodu Matched, ktora ma ako parameter typ InputEventArgs co je parameter metody OnPreviewKeyDown().
   B. Pouzijem Command.
!!! 9. Commands su implementovane prostrednictvom triedy RoutedUICommand. WPF pre STANDARDNE (casto pouzivane) COMMANDS definuje instancie RoutedUICommand v statickych triedach ako napriklad ApplicationCommands, ComponentCommands, ci MediaCommands. Samozrejme v pripade, ze ziaden standardny COMMANDS nevyhovuje potrebam, mozem definovat CUSTOM COMMAND.
10. Pouzitie COMMAND je v Menu realizovane nasledujucimi krokmi.
   A. Do property Command priradim instanciu RoutedUICommand.
   B. Do kolekcie typu CommandBindingCollection definovanej property UIElement.CommandBinding pre ELEMENT, ktory ACCELERATOR SPRACOVAVAT (zvycajne Window) zaradim CommandBidning. Trieda CommandBidning umoznuje asociovat s Command dvojicu metod XXXCanExecute() a XXXOnExecute(), kde XXX je meno Command. Metoda XXXCanExecute() umoznuje v parametri CanExecuteRoutedEventArgs.CanExecute urcit ci sa dany COMMAND moze vyvolat (Paste sa napriklad nemoze, ak je Clipboard prazdny) a metod XXXOnExceute() je samotny obsah COMMAND, ktory sa ma vykonat.
!!! 11. Vytvorenie CUSTOM COMMAND sa realizuje v nasledujucich krokoch.
   A. Vytvorim InputGestureCollection do ktorej pridam KeyGesture objekty pre kazdy KEY GESTURE (ACCELERATOR), ktory ma dany CUSTOM COMMAND spustit.
   B. Vytvorim instanciu RoutedEventCommand v konstruktore ktorej specifikujem text COMMAND, ako i kolekciu GESTURES.
   C. Priradnim vytvorenu instanciu RoutedEventCommand do property MenuItem.Comand.
   D. Do kolekcie CommandBindings pridam novy CommandBinding, ktory previaze COMMAND s METODAMI XXXCanExecute() a XXXOnExecute().
!!! 12. ContextMenu umoznuje definovat CONTEXT MENU pre triedy dedene z FrameworkElement a FrameworkContentElement definovanim property ContextMenu. Ak tuto property nastavim na instanciu ContextMenu tak je AUTOMATICKY zobrazene CONTEXT MENU pri RIGHT BUTTON CLICK.
!!! 13. ContextMenu je mozne zobrazit i MANUALNE a to tak, ze nastavim jeho property IsOpen na TRUE. ContextMenu sa default zobrazi na aktualnej pozicii mysky.
!!!!! 14. Vo ContextMenu je este z roku 2007 CHYBA, ktora ak NEMA nejaky ELEMENT FOCUS, tak sa zobrazia MENU ITEMS DISABLED. Riesenim je nastavit MenuItem.CommandTarget na Window, alebo INY ELEMENT, pre ktory som nastavil CommandBindings.
//------------------------------------------------------------------------------