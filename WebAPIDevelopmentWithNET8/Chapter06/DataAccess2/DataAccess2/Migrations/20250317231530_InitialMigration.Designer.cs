// <auto-generated />
using DataAccess2;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess2.Migrations
{
    [DbContext(typeof(CDBContext))]
    [Migration("20250317231530_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("DataAccess2.CEntityManyToManyM", b =>
                {
                    b.Property<int>("EntityMID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EntityMValue")
                        .HasColumnType("TEXT");

                    b.HasKey("EntityMID");

                    b.ToTable("EntitiesManyToManyM", (string)null);

                    b.HasData(
                        new
                        {
                            EntityMID = 1,
                            EntityMValue = "ENTITY M - 111"
                        },
                        new
                        {
                            EntityMID = 2,
                            EntityMValue = "ENTITY M - 222"
                        });
                });

            modelBuilder.Entity("DataAccess2.CEntityManyToManyMN", b =>
                {
                    b.Property<int>("EntityMNID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EntityMID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EntityMNValue")
                        .HasColumnType("TEXT");

                    b.Property<int>("EntityNID")
                        .HasColumnType("INTEGER");

                    b.HasKey("EntityMNID");

                    b.HasIndex("EntityMID");

                    b.HasIndex("EntityNID");

                    b.ToTable("EntitiesManyToManyMN", (string)null);

                    b.HasData(
                        new
                        {
                            EntityMNID = 1,
                            EntityMID = 1,
                            EntityMNValue = "ENTITY MN - 11",
                            EntityNID = 1
                        },
                        new
                        {
                            EntityMNID = 2,
                            EntityMID = 1,
                            EntityMNValue = "ENTITY MN - 12",
                            EntityNID = 2
                        },
                        new
                        {
                            EntityMNID = 3,
                            EntityMID = 2,
                            EntityMNValue = "ENTITY MN - 21",
                            EntityNID = 1
                        },
                        new
                        {
                            EntityMNID = 4,
                            EntityMID = 2,
                            EntityMNValue = "ENTITY MN - 22",
                            EntityNID = 2
                        });
                });

            modelBuilder.Entity("DataAccess2.CEntityManyToManyN", b =>
                {
                    b.Property<int>("EntityNID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EntityNValue")
                        .HasColumnType("TEXT");

                    b.HasKey("EntityNID");

                    b.ToTable("EntitiesManyToManyN", (string)null);

                    b.HasData(
                        new
                        {
                            EntityNID = 1,
                            EntityNValue = "ENTITY N - 111"
                        },
                        new
                        {
                            EntityNID = 2,
                            EntityNValue = "ENTITY N - 222"
                        });
                });

            modelBuilder.Entity("DataAccess2.CEntityOneToManyDependent", b =>
                {
                    b.Property<int>("EntityDependentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EntityDependentValue")
                        .HasColumnType("TEXT");

                    b.Property<int>("EntityPrincipalID")
                        .HasColumnType("INTEGER");

                    b.HasKey("EntityDependentID");

                    b.HasIndex("EntityPrincipalID");

                    b.ToTable("EntitiesOneToManyDependent", (string)null);

                    b.HasData(
                        new
                        {
                            EntityDependentID = 1,
                            EntityDependentValue = "DEPENDENT 111",
                            EntityPrincipalID = 1
                        },
                        new
                        {
                            EntityDependentID = 2,
                            EntityDependentValue = "DEPENDENT 222",
                            EntityPrincipalID = 1
                        },
                        new
                        {
                            EntityDependentID = 3,
                            EntityDependentValue = "DEPENDENT 333",
                            EntityPrincipalID = 2
                        },
                        new
                        {
                            EntityDependentID = 4,
                            EntityDependentValue = "DEPENDENT 444",
                            EntityPrincipalID = 2
                        });
                });

            modelBuilder.Entity("DataAccess2.CEntityOneToManyPrincipal", b =>
                {
                    b.Property<int>("EntityPrincipalID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EntityPrincipalValue")
                        .HasColumnType("TEXT");

                    b.HasKey("EntityPrincipalID");

                    b.ToTable("EntitiesOneToManyPrincipal", (string)null);

                    b.HasData(
                        new
                        {
                            EntityPrincipalID = 1,
                            EntityPrincipalValue = "PRINCIPAL 111"
                        },
                        new
                        {
                            EntityPrincipalID = 2,
                            EntityPrincipalValue = "PRINCIPAL 222"
                        });
                });

            modelBuilder.Entity("DataAccess2.CEntityManyToManyMN", b =>
                {
                    b.HasOne("DataAccess2.CEntityManyToManyM", "EntityM")
                        .WithMany("EntitiesMN")
                        .HasForeignKey("EntityMID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess2.CEntityManyToManyN", "EntityN")
                        .WithMany("EntitiesMN")
                        .HasForeignKey("EntityNID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EntityM");

                    b.Navigation("EntityN");
                });

            modelBuilder.Entity("DataAccess2.CEntityOneToManyDependent", b =>
                {
                    b.HasOne("DataAccess2.CEntityOneToManyPrincipal", "EntityPrincipal")
                        .WithMany("EntitiesDependent")
                        .HasForeignKey("EntityPrincipalID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EntityPrincipal");
                });

            modelBuilder.Entity("DataAccess2.CEntityManyToManyM", b =>
                {
                    b.Navigation("EntitiesMN");
                });

            modelBuilder.Entity("DataAccess2.CEntityManyToManyN", b =>
                {
                    b.Navigation("EntitiesMN");
                });

            modelBuilder.Entity("DataAccess2.CEntityOneToManyPrincipal", b =>
                {
                    b.Navigation("EntitiesDependent");
                });
#pragma warning restore 612, 618
        }
    }
}
