//------------------------------------------------------------------------------
1. Program demonstruje pouzitie sycnhronizacnych primitiv, ktore boli v Parallel Extensions pridane do .NET.
2. Rozhranie ISupportsCancelation sluzi na podporu Cancel paralelnej operacie.
3. CountdownEvent sluzi ako PODPORA pre realizaciu Fork-Join algoritmov. Umoznuje definovat pocitadlo, ktore je mozne inkrementovat a dekrementovat. Ak je ROZNE OD 0, tak metoda Wait() JE VO WAIT STAVE. Ak je hodnota 0, TAK metody Wait() SU UKONCENE.
4. LazyInit<T> sluzi na implementaciu premennej, ktora je LAZY SPOSOBOM inicializovana. LazyInit<T> obesahuje property Value, ku ktorej ked pristupim a HODNOTA ESTE NIE JE VYTVORENA, tak sa zavola v konstruktore LazyInit<T> definovana metoda na vytvorenie instancie. LazyInit<T> ma 3 podporovane mody vytvarania instancii. Mod sa urcuje hodnotou LazyInitMode.
   A. AllowMultipleExecution - ak viacero Threads sa NARAZ POKUSI pristupit PRVY KRAT k VALUE - MOZU SA VIACERE OBEJKTY VYTVORIT, ale IBA JEDEN BUDE PUBLIKOVANY vo Value.
   B. EnsureSingleExecution - ak viacero Threads sa NARAZ POKUSI pristupit PRVY KRAT k VALUE - VYTVORI SA IBA JEDEN OBJEKT. Je to zabezpecene pomocou LOCK.
   C. ThreadLocal - pre kazdy Thread bude INICIALIZOVANE OSOBITNA HODNOTA. Realizuje sa to pomocou TLS.
5. ManualResetEventSlim je odlahcena verzia ManualResetEvent s podporou lazy initialization, spin wait a kontrolou stavu KO, kde dochadza k KO operacie iba ak je skutocne nutna. Property WaitHandle vracia KO, ktory ManualResetEventSlim obaluje. Je ho mozne pouzit v metodach WaitAny() a WaitAll(). Property IsSet sluzi na indikaciu ci Event je pristupny.
6. SemaphoreSlim rozsiruje Semaphore o lazy initialization ci spining. Takisto vdaka implementacii ISupportsCacnelation podporuje Cancel. Property CurrentCount urucje aktualny pocet Semaphore.
7. SpinLock predstavuje implementaciu LOCK, ktory vykonava pred samotnym LOCKING - SPIN WAIT. SpinLock ma vlastnost Tracking, ktorym je mozne robit Trasking akutalneho stavu Lock, co je vyhodne pri debuggingu.
!!! 8. SpinLock je realizovany ako STRUCT a preto NESMIE BYT KOPIROVANY, inak by SHARED INSTANCES NEPOSKYTOVALI LOCKING.
9. SpinWait je univerzalny objekt sluziaci pouziti v SpinLock, pomocou ktoreho je mozne realizovat Spin Waiting.
//------------------------------------------------------------------------------