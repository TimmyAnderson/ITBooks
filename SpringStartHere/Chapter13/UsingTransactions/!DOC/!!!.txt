//----------------------------------------------------------------------------------------------------------------------
1. Solution demonstruje pouzitie TRANSACTIONS v SPRING.
2. TRANSACTIONS umoznuju aby seria MUTABLE OPERATIONS do DATABASE bola bud kompletne vykonana uspesne, alebo bola cela vratena do povodneho stavu. Tym sa zabezpecuje konzistencia DATABASE. TRANSACTIONS zabezpecuju ATOMICITY.
3. TRANSACTIONS mozu skoncit v 2 STATES.
   A. COMMITTED. Cela TRANSACTION skoncila uspesne a vsetky OPERATIONS v TRANSACTION boli uspesne vykonane.
   B. ROLLBACKED. Cela TRANSACTION skoncila v ERROR a ZIADNA OPERATION v TRANSACTION NEBOLA vykonana. Stav DATABASE sa vratil do stavu pred spustenim TRANSACTION.
4. SPRING implementuje spracovanie TRANSACTIONS nasledujucim sposobom.
   A. Ak METHOD vykonava CODE, ktory ma byt vykonany v TRANSACTION, potom METHOD MUSI byt oznacena ANNOTATION [@Transactional].
   B. Ak SPRING detekuje, ze v CODE existuju METHODS oznacene ANNOTATION [@Transactional], automaticky pre nich vygeneruje TRANSACTION ASPECTS, ktore realizuju CODE danych METHODS v TRANSACTIONS.
   C. TRANSACTION ASPECTS su volane NAMIESTO METHODS oznacenych ANNOTATION [@Transactional], aby CODE tychto METHODS bol spusteny v TRANSACTION.
5. SPRING implementuje TRANSACTION ASPECTS nasledujucim sposobom.
   A. TRANSACTION ASPECT je zavolany NAMIESTO zavolania METHOD, ktora je oznacena ANNOTATION [@Transactional].
   B. TRANSACTION ASPECT vytvori novu TRANSACTION.
   C. TRANSACTION ASPECT zavola povodnu METHOD, ktora je oznacena ANNOTATION [@Transactional], aby vykonala DATABASE OPERATIONS v ramci vytvorenej TRANSACTION.
   !!! D. Ak povodna METHOD, ktora je oznacena ANNOTATION [@Transactional] skonci BEZ hodenia EXCEPTION, tak TRANSACTION je COMMITTED.
   !!! E. Ak povodna METHOD, ktora je oznacena ANNOTATION [@Transactional] skonci HODENIM EXCEPTION, tak TRANSACTION je ROLLBACKED.
6. METHOD [<T> T queryForObject(String Sql, RowMapper<T> RowMapper, @Nullable Object... Args) throws DataAccessException] umoznuje nacitat z DB presne 1 RECORD.
7. Pomocou ANNOTATION [@Transactional] sa oznacuje CODE, ktory ma SPRING spusti v ramci TRANSACTION. Pre ANNOTATION [@Transactional] platia nasledujuce fakty.
   A. ANNOTATION [@Transactional] moze byt aplikovana na METHOD kedy SPRING vykona CODE danej METHOD v TRANSACTION.
   B. ANNOTATION [@Transactional] moze byt aplikovana na CLASS kedy SPRING vykona CODE vsetkych METHODS v TRANSACTION.
   !!! C. Ak je ANNOTATION [@Transactional] aplikovana na CLASS i METHOD, tak sa pouzije ta, ktora je aplikovana na METHOD.
//----------------------------------------------------------------------------------------------------------------------