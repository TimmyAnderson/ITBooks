//----------------------------------------------------------------------------------------------------------------------
#pragma once
//----------------------------------------------------------------------------------------------------------------------
#include <utility>
#include "STypeFunctionBoolConstant.h"
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<typename TType>
struct SHasDereference
{
//----------------------------------------------------------------------------------------------------------------------
	private:
		template<typename TLocalType>
		struct SIdentity;

	private:
		template<typename TLocalType>
		static TypeFunctionTrueType TraitTest(SIdentity<decltype(*std::declval<TLocalType>())>*);

	private:
		template<typename TLocalType>
		static TypeFunctionFalseType TraitTest(...);

	public:
		static constexpr bool									VALUE=decltype(TraitTest<TType>(nullptr))::VALUE;
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------