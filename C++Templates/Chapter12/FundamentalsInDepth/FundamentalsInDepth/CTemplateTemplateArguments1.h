//----------------------------------------------------------------------------------------------------------------------
#pragma once
//----------------------------------------------------------------------------------------------------------------------
#include <string>
#include <sstream>
//----------------------------------------------------------------------------------------------------------------------
// !!! TEMPLATE ma TEMPLATE TYPE PARAMETER.
template<typename TType>
class CTemplateTemplateArguments1 final
{
//----------------------------------------------------------------------------------------------------------------------
	private:
		TType													MField;

	public:
		std::wstring ToString(void) const;

	public:
		CTemplateTemplateArguments1(TType Field);
		virtual ~CTemplateTemplateArguments1(void) noexcept;
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<typename TType>
CTemplateTemplateArguments1<TType>::CTemplateTemplateArguments1(TType Field)
	: MField(Field)
{
}
//----------------------------------------------------------------------------------------------------------------------
template<typename TType>
CTemplateTemplateArguments1<TType>::~CTemplateTemplateArguments1(void) noexcept
{
}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<typename TType>
std::wstring CTemplateTemplateArguments1<TType>::ToString(void) const
{
	std::wstringstream											Stream;

	Stream << L"TEMPLATE TEMPLATE ARGUMENTS 1 - FIELD [" << MField << L"].";

	return(Stream.str());
}
//----------------------------------------------------------------------------------------------------------------------