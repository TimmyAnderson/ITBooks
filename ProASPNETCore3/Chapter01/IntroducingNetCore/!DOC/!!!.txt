//----------------------------------------------------------------------------------------------------------------------
1. Solution popisuje zakladne aspekty ASP.NET CORE.
2. ASP.NET CORE ponuka viacero FRAMEWORKS na vytvaranie WEB APPLICATIONS.
   A. MODEL VIEW CONTROLLER FRAMEWORK.
   B. RAZOR PAGES FRAMEWORK.
   C. BLAZOR FRAMEWORK.
3. Pre MODEL VIEW CONTROLLER FRAMEWORK platia nasledujuce fakty.
   A. Dizajn APPLICATIONS je rozdeleny na vytvaranie MODELS, VIEWS a CONTROLLERS, ktore vzajomne kooperuju na vytvarani WEB APPLICATION.
   B. Hlavnym cielom MODEL VIEW CONTROLLER FRAMEWORK je separacia DATA (MODEL), RENDERING (VIEW) a BUSINESS LOGIC (CONTROLLERS).
   C. MODEL VIEW CONTROLLER FRAMEWORK bol prvym FRAMEWORK, ktory sa pouzival uz v ASP.NET.
   !!! D. S prichodom SINGLE PAGE APPLICATIONS vyznam pouzitia MODEL VIEW CONTROLLER FRAMEWORK klesa, pretoze pri SINGLE PAGE APPLICATION RENDERING vykonava SINGLE PAGE APPLICATION.
4. Pre RAZOR PAGES FRAMEWORK platia nasledujuce fakty.
   A. RAZOR PAGES FRAMEWORK umoznuje mixovanie MODEL CODE, VIEW CODE a BUSINESS CODE v jednej RAZOR PAGE.
   !!! B. RAZOR PAGES FRAMEWORK opusta MODEL VIEW CONTROLLER PATTERN, kde bol MODEL CODE, VIEW CODE a BUSINESS CODE oddeleny.
   C. RAZOR PAGES FRAMEWORK umoznuje jednoduchsie vytvaranie WEB APPLICATIONS, ktore je podobne vytvaraniu APPLICATIONS vo ASP.NET WEB FORMS FRAMEWORK.
   !!! D. RAZOR PAGES FRAMEWORK nie je mozne pouzit na vytvaranie SINGLE PAGE APPLICATIONS, pretoze RAZOR PAGES mozu vracat IBA HTML CONTENT, a nie JSON ci iny DATA CONTENT.
   E. RAZOR PAGES FRAMEWORK predstavuje NAHRADU MODEL VIEW CONTROLLER FRAMEWORK, aj ked oba FRAMEWORKS je mozne pouzivat v jednej ASP.NET CORE APPLICATION.
5. Pre BLAZOR FRAMEWORK platia nasledujuce fakty.
   A. BLAZOR FRAMEWORK umoznuje vytvaranie WEB APPLICATIONS, ktore su kompletne napisane v C#. Pri pouziti BLAZOR FRAMEWORK odpada nutnost pouzit JAVA SCRIPT.
   B. BLAZOR FRAMEWORK je postaveny na vytvarani univerzalnych COMPONENTS, ktore obsahuju HTML a C# CODE, pricom C# CODE moze spracovavat nielen SERVER SIDE EVENTS, alebo aj CLIENT SIDE EVENTS, ktore doteraz bolo mozne spracovavat iba v JAVA SCRIPT.
   C. Pouzitie BLAZOR FRAMEWORK umoznuje jednoduche vytvaranie REUSABLE COMPONENTS.
   D. BLAZOR FRAMEWORK je implementovany vo viacerych verziach.
6. BLAZOR FRAMEWORK je implementovany v nasledujucich verziach.
   A. BLAZOR SERVER FRAMEWORK je postaveny na tom, ze CLIENT SIDE CODE napisany v C# je vzdy vykonavany na SERVER SIDE. BLAZOR SERVER FRAMEWORK pri vyskytne CLIENT SIDE EVENT vykonava komunikaciu na SERVER SIDE pomocou LIBRARY [SingalR]. SERVER SIDE spracuje CLIENT SIDE EVENT a zasle zmeneny HTML CODE, ktory je nasledne RENDERED vo WEB BROWSER.
   B. BLAZOR WEBASSEMBLY FRAMEWORK je postaveny na tom, ze CLIENT SIDE CODE napisany v C# bezi PRIAMO vo WEB BROWSER. WEB BROWSER vyuziva to, ze MICROSOFT implementoval .NET CORE FRAMEWORK vo WEBASSEMBLY co je technologia umoznujuca spustat lubovolny WEBASSEMBLY CODE na WEB BROWSERS. Tym padom CLIENT SIDE EVENTS napisane v C# su vykonane priamo na WEB BROWSER bez nutnosti komunikacie so SERVER SIDE.
7. Pri vyvoji WEB APPLICATIONS pomocou ASP.NET CORE sa velmi casto vyuzivaju nasledujuce LIBRARIES.
   A. LIBRARY [ASP.NET Core Entity Framework] je OBJECT-RELATIONAL MAPPING FRAMEWORK, ktory umoznuje pracovat s DB pomocou C# OBJECTS.
   B. LIBRARY [ASP.NET Core Identity] je LIBRARY vykonavajuca AUTHENTICATION a AUTHORIZATION USERS v ASP.NET CORE APPLICATIONS.
8. ASP.NET CORE je LIBRARY, ktora obsahuje FRAMEWORK pre vytvaranie WEB APPLICATIONS.
9. ASP.NET CORE obsahuje integrovany WEB SERVER a dalsie LIBRARIES, ktore umoznuju vytvaranie WEB APPLICATIONS.
10. ASP.NET CORE obsahuje nasledujuce LIBRARIES na komunikaciu medzi CLIENT SIDE a SERVER SIDE.
   A. LIBRARY [SingalR] je LOW LEVEL LIBRARY na vytvaranie COMMUNICATION CHANNELS medzi CLIENT SIDE a SERVER SIDE. Tuto LIBRARY vyuziva napriklad aj BLAZOR SERVER.
   B. LIBRARY [gRPC] je CROSS PLATFORM LIBRARY na vykonavanie REMOTE PROCEDURE CALLS cez HTTP PROTOCOL.
//----------------------------------------------------------------------------------------------------------------------