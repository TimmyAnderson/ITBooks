//----------------------------------------------------------------------------------------------------------------------
#pragma once
//----------------------------------------------------------------------------------------------------------------------
#include <iostream>
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
// !!!!! MIXIN BASE CLASS.
template<typename... TTypes>
class CMixinVirtualityMixinBase : public TTypes...
{
//----------------------------------------------------------------------------------------------------------------------
	public:
		// !!! METHOD PROTOTYPE sa musi zhodovat s METHOD v CLASS [CMixinVirtualityClassVirtual] a CLASS [CMixinVirtualityMixinDerived].
		// !!! KEYWORD [virtual] NIE JE aplikovny.
		void SomeVirtualMethod(void) const;
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<typename... TTypes>
void CMixinVirtualityMixinBase<TTypes...>::SomeVirtualMethod(void) const
{
	std::wcout << L"METHOD [void CMixinVirtualityMixinBase<TTypes...>::SomeVirtualMethod(void) const] CALLED !" << std::endl;
}
//----------------------------------------------------------------------------------------------------------------------