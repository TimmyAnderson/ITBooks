using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using BlazorForms.Database;
using BlazorForms.Model;
//----------------------------------------------------------------------------------------------------------------------
namespace BlazorForms.Services
{
//----------------------------------------------------------------------------------------------------------------------
	// !!! CLASS vracia priamo ENTITY OBJECTS a NIE BUSINESS OBJECT.
	public sealed class CDBOperations : IDBOperations
	{
//----------------------------------------------------------------------------------------------------------------------
		private readonly CDBContext								MContext;
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
		public CDBOperations()
		{
			MContext=new CDBContext();
		}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
		public CDBContext										Context
		{
			get
			{
				return(MContext);
			}
		}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
		public CEntityPerson AddPerson(CEntityPerson Person)
		{
			MContext.Persons.Add(Person);

			MContext.SaveChanges();

			return(Person);
		}
//----------------------------------------------------------------------------------------------------------------------
		public CEntityPerson UpdatePerson(CEntityPerson Person)
		{
			MContext.SaveChanges();

			return(Person);
		}
//----------------------------------------------------------------------------------------------------------------------
		public void RemovePerson(int ID)
		{
			CEntityPerson										EntityPerson=MContext.Persons.Where(P => P.ID==ID).FirstOrDefault();

			if (EntityPerson!=null)
			{
				MContext.Remove(EntityPerson);

				MContext.SaveChanges();
			}
		}
//----------------------------------------------------------------------------------------------------------------------
		public CEntityPerson GetPerson(int ID)
		{
			CEntityPerson										EntityPerson=MContext.Persons.Where(P => P.ID==ID).FirstOrDefault();

			if (EntityPerson!=null)
			{
				return(EntityPerson);
			}
			else
			{
				return(null);
			}
		}
//----------------------------------------------------------------------------------------------------------------------
		public CEntityPerson[] GetPersons()
		{
			CEntityPerson[]										EntityPersons=MContext.Persons.ToArray();

			return(EntityPersons);
		}
//----------------------------------------------------------------------------------------------------------------------
	}
//----------------------------------------------------------------------------------------------------------------------
}
//----------------------------------------------------------------------------------------------------------------------