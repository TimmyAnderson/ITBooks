//----------------------------------------------------------------------------------------------------------------------
#include "CInstantiationSafeTemplatesTypes7.h"
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
CInstantiationSafeTemplatesTypes7::CInstantiationSafeTemplatesTypes7(int Value)
	: MValue(Value)
{
}
//----------------------------------------------------------------------------------------------------------------------
CInstantiationSafeTemplatesTypes7::~CInstantiationSafeTemplatesTypes7(void) noexcept
{
}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
int CInstantiationSafeTemplatesTypes7::GetValue(void) const noexcept
{
	return(MValue);
}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
CInstantiationSafeTemplatesTypesBoolConvertibleExplicit operator<(const CInstantiationSafeTemplatesTypes7& Value1, const CInstantiationSafeTemplatesTypes7& Value2)
{
	if (Value1.GetValue()<Value2.GetValue())
	{
		CInstantiationSafeTemplatesTypesBoolConvertibleExplicit	Value(true);

		return(Value);
	}
	else
	{
		CInstantiationSafeTemplatesTypesBoolConvertibleExplicit	Value(false);

		return(Value);
	}
}
//----------------------------------------------------------------------------------------------------------------------