//-----------------------------------------------------------------------------
#include "CExceptionBase.h"
//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
using namespace std;
//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
CExceptionBase::CExceptionBase(const wstring& Value)
	: MValue(Value)
{
	wcout << L"CONSTRUCTOR [" << __func__ << L"()] CALLED !" << endl;
}
//-----------------------------------------------------------------------------
CExceptionBase::~CExceptionBase(void)
{
	wcout << L"DESTRUCTOR [" << __func__ << L"()] CALLED !" << endl;
}
//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
const wstring& CExceptionBase::GetValue(void) const noexcept
{
	return(MValue);
}
//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
wstring CExceptionBase::GetTextMessage(void) const noexcept
{
	wstring														Message;

	Message.append(L"EXCEPTION [CExceptionBase] - VALUE [");
	Message.append(GetValue());
	Message.append(L"] !");

	return(Message);
}
//-----------------------------------------------------------------------------