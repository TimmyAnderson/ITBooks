//----------------------------------------------------------------------------------------------------------------------
#include "CPartialTemplateSpecializationSyntax.h"
//----------------------------------------------------------------------------------------------------------------------
using namespace std;
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
CPartialTemplateSpecializationSyntax<double*>::CPartialTemplateSpecializationSyntax(double* Field)
	: MField(Field)
{
}
//----------------------------------------------------------------------------------------------------------------------
CPartialTemplateSpecializationSyntax<double*>::~CPartialTemplateSpecializationSyntax(void) noexcept
{
}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
void CPartialTemplateSpecializationSyntax<double*>::PrintFullSpecialization(void) const
{
	wcout << L"TEMPLATE CLASS FULL SPECIALIZATION <double*> - TYPE [" << GetTypeInfoName<decltype(MField)>() << L"] FIELD [" << MField << L"] DEREFERENCE FIELD [" << *MField << L"]." << endl;
}
//----------------------------------------------------------------------------------------------------------------------