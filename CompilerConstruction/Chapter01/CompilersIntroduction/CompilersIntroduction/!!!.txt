//-------------------------------------------------------------------------------------------------------
1. Solution demonstruje zakladne principy ako funguju COMPILERS.
2. Program pri kompilacii UMYSELNE HADZE CHYBY, aby bolo mozne demonstrovat ako bezi PREKLAD programu v C#.
3. Kompilator je tvoreny viacerymi komponentmi, ktore POSTUPNE krok po kroku realizuju proces kompilacie. Patria sem nasledujuce komponenty.
   A. SCANER - vstupom je SOURCE CODE a SCANER ma za ulohu v nom najst vsetky TOKENS. Vysledkom je ZOZNAM NAJDENYCH TOKENS.
   B. PARSER - vstupom je ZOZNAM TOKENS nad ktorymi sa robia SYNTAKTICKE KONTROLY a generuje sa SYNTAX TREE.
   C. SEMANTIC ANALYZER - vstupom je SYNTAX TREE a vystupom ANNOTATED TREE. V tejto faze sa robi najma TYPOVA KONTROLA.
   D. SOURCE CODE OPTIMALIZER - vykonava optimalizacie nad ANNOTATED TREE. Vysledkom je INTERMEDIATE CODE.
   E. CODE GENERATOR - realizuje GENEROVANIE KODU v TARGET LANGUAGE - zvycajne STROJOVY KOD, alebo v pripade C# je to MSIL.
   F. TARGET CODE OPTIMALIZER - vykonava optimalizacie nad TARGET KODOM a vysledkom je OPTIMALIZOVANY TARGET KOD.
//-------------------------------------------------------------------------------------------------------