<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        x:Class="Styles.StylesWithTargetTypes">
    <StackPanel>
        <StackPanel.Resources>
            <!-- Definujem TargetType na Button. -->
            <Style TargetType="{x:Type Button}">
                <Setter Property="FontSize" Value="24" />
                <Setter Property="Foreground" Value="Blue" />
            </Style>

            <!-- Definujem TargetType na TextBlock. -->
            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground" Value="Red" />
            </Style>
        </StackPanel.Resources>

        <Button>
            Button with Text Content
        </Button>

        <TextBlock>
            TextBlock Text
        </TextBlock>

        <!-- Na Button sa aplikuje Style s TargetType==Button. -->
        <Button>
            <!-- !!! Aj na tento TextBlock sa Style s TargetType==TextBlock aplikuje a preto Foreground JE RED a NIE BLUE, ako ho definoval Style s TargetType==Button. -->
            <!-- !!!!! Avsak VELKOST PISMA je 24, teda hodnota, ktoru definoval Style s TargetType==Button. Toto NIE JE DOSLEDKOM TOHO, zeby SA na ELEMENT APLIKOVALI 2 STYLES PRETOZE TO NIE JE MOZNE (na ELEMENT sa aplikuje VZDY LEN JEDEN STYLE), ale preto, lebo hodnota TextBlock hodnotu Foreground ZDEDIL Z PARENT ELEMENT (teda z Button) cez STANDARDNU WPF PROPERTY INHERITANCE. Ta sa aplikovala PRETO, lebo pre TextBlock SOM NEDEFINOVAL HODNOTU Foreground a tak ostala DEFAULT HODNOTA a ta MA NIZSIU PRIORITU ako ZDEDENA HODNOTA z PARENT. -->
            <TextBlock>
                Button with TextBlock Content
            </TextBlock>
        </Button>
    </StackPanel>
</Window>