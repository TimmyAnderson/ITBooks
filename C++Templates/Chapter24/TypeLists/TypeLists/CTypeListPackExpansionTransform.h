//----------------------------------------------------------------------------------------------------------------------
#pragma once
//----------------------------------------------------------------------------------------------------------------------
#include "CTypeList.h"
#include "CTypeListIsEmpty.h"
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
// !!! 1. TEMPLATE PARAMETER je TYPE LIST a 2. TEMPLATE PARAMETER obsahuje OPERATION, ktora sa vykona na vsetkych TYPES v TYPE LIST.
template<typename TTypeList, template<typename> class TOperation, bool EMPTY=CTypeListIsEmpty<TTypeList>>
class CTypeListPackExpansionTransformType;
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<typename... TTypeListElements, template<typename> class TOperation>
class CTypeListPackExpansionTransformType<CTypeList<TTypeListElements...>,TOperation,false>
{
//----------------------------------------------------------------------------------------------------------------------
	public:
		// !!!!! OPERATION SELECT sa pomocou PACK EXPANSION vykona pre vsetky INDEXES.
		using													TYPE=CTypeList<typename TOperation<TTypeListElements>::TYPE...>;
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<typename TTypeList, template<typename> class TOperation>
class CTypeListPackExpansionTransformType<TTypeList,TOperation,true>
{
//----------------------------------------------------------------------------------------------------------------------
	public:
		using													TYPE=TTypeList;
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<typename TTypeList, template<typename> class TOperation>
using															CTypeListPackExpansionTransform=typename CTypeListPackExpansionTransformType<TTypeList,TOperation>::TYPE;
//----------------------------------------------------------------------------------------------------------------------