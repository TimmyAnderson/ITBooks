//----------------------------------------------------------------------------------------------------------------------
#pragma once
//----------------------------------------------------------------------------------------------------------------------
#include "STypeFunctionIsSame.h"
#include "STypeFunctionBoolConstant.h"
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<typename TType>
struct SSFINAETraitIsDefaultConstructiblePredicateHelper
{
//----------------------------------------------------------------------------------------------------------------------
	private:
		template<typename TLocalType, typename=decltype(TLocalType())>
		static TypeFunctionTrueType TraitTest(void*);

		template<typename>
		static TypeFunctionFalseType TraitTest(...);

	public:
		using													TYPE=decltype(TraitTest<TType>(nullptr));
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<typename TType>
struct SSFINAETraitIsDefaultConstructiblePredicate final : public SSFINAETraitIsDefaultConstructiblePredicateHelper<TType>::TYPE
{
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------