//----------------------------------------------------------------------------------------------------------------------
#pragma once
//----------------------------------------------------------------------------------------------------------------------
#include "CTuple.h"
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
// !!! TEMPLATE PARAMETER je TUPLE.
template<typename TTuple>
class CTupleTypeListIsEmpty
{
//----------------------------------------------------------------------------------------------------------------------
	public:
		static constexpr bool									VALUE=false;
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
template<>
class CTupleTypeListIsEmpty<CTuple<>>
{
//----------------------------------------------------------------------------------------------------------------------
	public:
		static constexpr bool									VALUE=true;
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
// !!! TEMPLATE PARAMETER je TUPLE.
template<typename TTuple>
class CTupleTypeListFrontType;
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
// !!! 1. TEMPLATE PARAMETER je TYPE TUPLE HEAD a 2. TEMPLATE PARAMETER su TYPES TUPLE TAIL.
template<typename THead, typename... TTail>
class CTupleTypeListFrontType<CTuple<THead,TTail...>>
{
//----------------------------------------------------------------------------------------------------------------------
	public:
		using													TYPE=THead;
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
// !!! 1. TEMPLATE PARAMETER je TUPLE a 2. TEMPLATE PARAMETER je TYPE noveho ELEMENT.
template<typename TTuple, typename TNewElement>
class CTupleTypeListPushFrontType;
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
// !!! 1. TEMPLATE PARAMETER su TYPES TUPLE ELEMEMNTS a 2. TEMPLATE PARAMETER je TYPE noveho ELEMENT.
template<typename... TTupleElements, typename TNewElement>
class CTupleTypeListPushFrontType<CTuple<TTupleElements...>,TNewElement>
{
//----------------------------------------------------------------------------------------------------------------------
	public:
		using													TYPE=CTuple<TNewElement,TTupleElements...>;
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
// !!! 1. TEMPLATE PARAMETER je TUPLE a 2. TEMPLATE PARAMETER je TYPE noveho ELEMENT.
template<typename TTuple, typename TNewElement>
class CTupleTypeListPushBackType;
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
// !!! 1. TEMPLATE PARAMETER su TYPES TUPLE ELEMEMNTS a 2. TEMPLATE PARAMETER je TYPE noveho ELEMENT.
template<typename... TTupleElements, typename TNewElement>
class CTupleTypeListPushBackType<CTuple<TTupleElements...>,TNewElement>
{
//----------------------------------------------------------------------------------------------------------------------
	public:
		using													TYPE=CTuple<TTupleElements...,TNewElement>;
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
// !!! TEMPLATE PARAMETER je TUPLE.
template<typename TTuple>
class CTupleTypeListPopFrontType;
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
// !!! 1. TEMPLATE PARAMETER je TYPE TUPLE HEAD a 2. TEMPLATE PARAMETER su TYPES TUPLE TAIL.
template<typename THead, typename... TTail>
class CTupleTypeListPopFrontType<CTuple<THead,TTail...>>
{
//----------------------------------------------------------------------------------------------------------------------
	public:
		using													TYPE=CTuple<TTail...>;
//----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------